# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cert.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='cert.proto',
  package='cert',
  syntax='proto3',
  serialized_options=_b('\n\027com.supremainc.sdk.certP\001Z\024biostar/service/cert'),
  serialized_pb=_b('\n\ncert.proto\x12\x04\x63\x65rt\"~\n\x07PKIName\x12\x0f\n\x07\x63ountry\x18\x01 \x01(\t\x12\x10\n\x08province\x18\x02 \x01(\t\x12\x0c\n\x04\x63ity\x18\x03 \x01(\t\x12\x14\n\x0corganization\x18\x04 \x01(\t\x12\x18\n\x10organizationUnit\x18\x05 \x01(\t\x12\x12\n\ncommonName\x18\x06 \x01(\t\"K\n\x0f\x43reateCARequest\x12\x1e\n\x07subject\x18\x01 \x01(\x0b\x32\r.cert.PKIName\x12\x18\n\x10\x65xpireAfterYears\x18\x02 \x01(\x05\"1\n\x10\x43reateCAResponse\x12\x0e\n\x06\x43\x41\x43\x65rt\x18\x01 \x01(\t\x12\r\n\x05\x43\x41Key\x18\x02 \x01(\t\"-\n\x0cSetCARequest\x12\x0e\n\x06\x43\x41\x43\x65rt\x18\x01 \x01(\t\x12\r\n\x05\x43\x41Key\x18\x02 \x01(\t\"\x0f\n\rSetCAResponse\"\x0e\n\x0cGetCARequest\".\n\rGetCAResponse\x12\x0e\n\x06\x43\x41\x43\x65rt\x18\x01 \x01(\t\x12\r\n\x05\x43\x41Key\x18\x02 \x01(\t\"\x80\x01\n\x1e\x43reateServerCertificateRequest\x12\x1e\n\x07subject\x18\x01 \x01(\x0b\x32\r.cert.PKIName\x12\x13\n\x0b\x64omainNames\x18\x02 \x03(\t\x12\x0f\n\x07IPAddrs\x18\x03 \x03(\t\x12\x18\n\x10\x65xpireAfterYears\x18\x04 \x01(\x05\"H\n\x1f\x43reateServerCertificateResponse\x12\x12\n\nserverCert\x18\x01 \x01(\t\x12\x11\n\tserverKey\x18\x02 \x01(\t\"D\n\x1bSetServerCertificateRequest\x12\x12\n\nserverCert\x18\x01 \x01(\t\x12\x11\n\tserverKey\x18\x02 \x01(\t\"\x1e\n\x1cSetServerCertificateResponse\"\x1d\n\x1bGetServerCertificateRequest\"E\n\x1cGetServerCertificateResponse\x12\x12\n\nserverCert\x18\x01 \x01(\t\x12\x11\n\tserverKey\x18\x02 \x01(\t2\xcb\x03\n\x04\x43\x65rt\x12\x39\n\x08\x43reateCA\x12\x15.cert.CreateCARequest\x1a\x16.cert.CreateCAResponse\x12\x30\n\x05SetCA\x12\x12.cert.SetCARequest\x1a\x13.cert.SetCAResponse\x12\x30\n\x05GetCA\x12\x12.cert.GetCARequest\x1a\x13.cert.GetCAResponse\x12\x66\n\x17\x43reateServerCertificate\x12$.cert.CreateServerCertificateRequest\x1a%.cert.CreateServerCertificateResponse\x12]\n\x14SetServerCertificate\x12!.cert.SetServerCertificateRequest\x1a\".cert.SetServerCertificateResponse\x12]\n\x14GetServerCertificate\x12!.cert.GetServerCertificateRequest\x1a\".cert.GetServerCertificateResponseB1\n\x17\x63om.supremainc.sdk.certP\x01Z\x14\x62iostar/service/certb\x06proto3')
)




_PKINAME = _descriptor.Descriptor(
  name='PKIName',
  full_name='cert.PKIName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='country', full_name='cert.PKIName.country', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='province', full_name='cert.PKIName.province', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='city', full_name='cert.PKIName.city', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='organization', full_name='cert.PKIName.organization', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='organizationUnit', full_name='cert.PKIName.organizationUnit', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commonName', full_name='cert.PKIName.commonName', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=146,
)


_CREATECAREQUEST = _descriptor.Descriptor(
  name='CreateCARequest',
  full_name='cert.CreateCARequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subject', full_name='cert.CreateCARequest.subject', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expireAfterYears', full_name='cert.CreateCARequest.expireAfterYears', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=148,
  serialized_end=223,
)


_CREATECARESPONSE = _descriptor.Descriptor(
  name='CreateCAResponse',
  full_name='cert.CreateCAResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='CACert', full_name='cert.CreateCAResponse.CACert', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='CAKey', full_name='cert.CreateCAResponse.CAKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=225,
  serialized_end=274,
)


_SETCAREQUEST = _descriptor.Descriptor(
  name='SetCARequest',
  full_name='cert.SetCARequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='CACert', full_name='cert.SetCARequest.CACert', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='CAKey', full_name='cert.SetCARequest.CAKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=276,
  serialized_end=321,
)


_SETCARESPONSE = _descriptor.Descriptor(
  name='SetCAResponse',
  full_name='cert.SetCAResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=323,
  serialized_end=338,
)


_GETCAREQUEST = _descriptor.Descriptor(
  name='GetCARequest',
  full_name='cert.GetCARequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=340,
  serialized_end=354,
)


_GETCARESPONSE = _descriptor.Descriptor(
  name='GetCAResponse',
  full_name='cert.GetCAResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='CACert', full_name='cert.GetCAResponse.CACert', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='CAKey', full_name='cert.GetCAResponse.CAKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=356,
  serialized_end=402,
)


_CREATESERVERCERTIFICATEREQUEST = _descriptor.Descriptor(
  name='CreateServerCertificateRequest',
  full_name='cert.CreateServerCertificateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='subject', full_name='cert.CreateServerCertificateRequest.subject', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='domainNames', full_name='cert.CreateServerCertificateRequest.domainNames', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='IPAddrs', full_name='cert.CreateServerCertificateRequest.IPAddrs', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expireAfterYears', full_name='cert.CreateServerCertificateRequest.expireAfterYears', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=405,
  serialized_end=533,
)


_CREATESERVERCERTIFICATERESPONSE = _descriptor.Descriptor(
  name='CreateServerCertificateResponse',
  full_name='cert.CreateServerCertificateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='serverCert', full_name='cert.CreateServerCertificateResponse.serverCert', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serverKey', full_name='cert.CreateServerCertificateResponse.serverKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=535,
  serialized_end=607,
)


_SETSERVERCERTIFICATEREQUEST = _descriptor.Descriptor(
  name='SetServerCertificateRequest',
  full_name='cert.SetServerCertificateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='serverCert', full_name='cert.SetServerCertificateRequest.serverCert', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serverKey', full_name='cert.SetServerCertificateRequest.serverKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=609,
  serialized_end=677,
)


_SETSERVERCERTIFICATERESPONSE = _descriptor.Descriptor(
  name='SetServerCertificateResponse',
  full_name='cert.SetServerCertificateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=679,
  serialized_end=709,
)


_GETSERVERCERTIFICATEREQUEST = _descriptor.Descriptor(
  name='GetServerCertificateRequest',
  full_name='cert.GetServerCertificateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=711,
  serialized_end=740,
)


_GETSERVERCERTIFICATERESPONSE = _descriptor.Descriptor(
  name='GetServerCertificateResponse',
  full_name='cert.GetServerCertificateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='serverCert', full_name='cert.GetServerCertificateResponse.serverCert', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serverKey', full_name='cert.GetServerCertificateResponse.serverKey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=742,
  serialized_end=811,
)

_CREATECAREQUEST.fields_by_name['subject'].message_type = _PKINAME
_CREATESERVERCERTIFICATEREQUEST.fields_by_name['subject'].message_type = _PKINAME
DESCRIPTOR.message_types_by_name['PKIName'] = _PKINAME
DESCRIPTOR.message_types_by_name['CreateCARequest'] = _CREATECAREQUEST
DESCRIPTOR.message_types_by_name['CreateCAResponse'] = _CREATECARESPONSE
DESCRIPTOR.message_types_by_name['SetCARequest'] = _SETCAREQUEST
DESCRIPTOR.message_types_by_name['SetCAResponse'] = _SETCARESPONSE
DESCRIPTOR.message_types_by_name['GetCARequest'] = _GETCAREQUEST
DESCRIPTOR.message_types_by_name['GetCAResponse'] = _GETCARESPONSE
DESCRIPTOR.message_types_by_name['CreateServerCertificateRequest'] = _CREATESERVERCERTIFICATEREQUEST
DESCRIPTOR.message_types_by_name['CreateServerCertificateResponse'] = _CREATESERVERCERTIFICATERESPONSE
DESCRIPTOR.message_types_by_name['SetServerCertificateRequest'] = _SETSERVERCERTIFICATEREQUEST
DESCRIPTOR.message_types_by_name['SetServerCertificateResponse'] = _SETSERVERCERTIFICATERESPONSE
DESCRIPTOR.message_types_by_name['GetServerCertificateRequest'] = _GETSERVERCERTIFICATEREQUEST
DESCRIPTOR.message_types_by_name['GetServerCertificateResponse'] = _GETSERVERCERTIFICATERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PKIName = _reflection.GeneratedProtocolMessageType('PKIName', (_message.Message,), dict(
  DESCRIPTOR = _PKINAME,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.PKIName)
  ))
_sym_db.RegisterMessage(PKIName)

CreateCARequest = _reflection.GeneratedProtocolMessageType('CreateCARequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATECAREQUEST,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.CreateCARequest)
  ))
_sym_db.RegisterMessage(CreateCARequest)

CreateCAResponse = _reflection.GeneratedProtocolMessageType('CreateCAResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATECARESPONSE,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.CreateCAResponse)
  ))
_sym_db.RegisterMessage(CreateCAResponse)

SetCARequest = _reflection.GeneratedProtocolMessageType('SetCARequest', (_message.Message,), dict(
  DESCRIPTOR = _SETCAREQUEST,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.SetCARequest)
  ))
_sym_db.RegisterMessage(SetCARequest)

SetCAResponse = _reflection.GeneratedProtocolMessageType('SetCAResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETCARESPONSE,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.SetCAResponse)
  ))
_sym_db.RegisterMessage(SetCAResponse)

GetCARequest = _reflection.GeneratedProtocolMessageType('GetCARequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCAREQUEST,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.GetCARequest)
  ))
_sym_db.RegisterMessage(GetCARequest)

GetCAResponse = _reflection.GeneratedProtocolMessageType('GetCAResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETCARESPONSE,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.GetCAResponse)
  ))
_sym_db.RegisterMessage(GetCAResponse)

CreateServerCertificateRequest = _reflection.GeneratedProtocolMessageType('CreateServerCertificateRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATESERVERCERTIFICATEREQUEST,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.CreateServerCertificateRequest)
  ))
_sym_db.RegisterMessage(CreateServerCertificateRequest)

CreateServerCertificateResponse = _reflection.GeneratedProtocolMessageType('CreateServerCertificateResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATESERVERCERTIFICATERESPONSE,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.CreateServerCertificateResponse)
  ))
_sym_db.RegisterMessage(CreateServerCertificateResponse)

SetServerCertificateRequest = _reflection.GeneratedProtocolMessageType('SetServerCertificateRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETSERVERCERTIFICATEREQUEST,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.SetServerCertificateRequest)
  ))
_sym_db.RegisterMessage(SetServerCertificateRequest)

SetServerCertificateResponse = _reflection.GeneratedProtocolMessageType('SetServerCertificateResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETSERVERCERTIFICATERESPONSE,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.SetServerCertificateResponse)
  ))
_sym_db.RegisterMessage(SetServerCertificateResponse)

GetServerCertificateRequest = _reflection.GeneratedProtocolMessageType('GetServerCertificateRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSERVERCERTIFICATEREQUEST,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.GetServerCertificateRequest)
  ))
_sym_db.RegisterMessage(GetServerCertificateRequest)

GetServerCertificateResponse = _reflection.GeneratedProtocolMessageType('GetServerCertificateResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETSERVERCERTIFICATERESPONSE,
  __module__ = 'cert_pb2'
  # @@protoc_insertion_point(class_scope:cert.GetServerCertificateResponse)
  ))
_sym_db.RegisterMessage(GetServerCertificateResponse)


DESCRIPTOR._options = None

_CERT = _descriptor.ServiceDescriptor(
  name='Cert',
  full_name='cert.Cert',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=814,
  serialized_end=1273,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateCA',
    full_name='cert.Cert.CreateCA',
    index=0,
    containing_service=None,
    input_type=_CREATECAREQUEST,
    output_type=_CREATECARESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetCA',
    full_name='cert.Cert.SetCA',
    index=1,
    containing_service=None,
    input_type=_SETCAREQUEST,
    output_type=_SETCARESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetCA',
    full_name='cert.Cert.GetCA',
    index=2,
    containing_service=None,
    input_type=_GETCAREQUEST,
    output_type=_GETCARESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateServerCertificate',
    full_name='cert.Cert.CreateServerCertificate',
    index=3,
    containing_service=None,
    input_type=_CREATESERVERCERTIFICATEREQUEST,
    output_type=_CREATESERVERCERTIFICATERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetServerCertificate',
    full_name='cert.Cert.SetServerCertificate',
    index=4,
    containing_service=None,
    input_type=_SETSERVERCERTIFICATEREQUEST,
    output_type=_SETSERVERCERTIFICATERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetServerCertificate',
    full_name='cert.Cert.GetServerCertificate',
    index=5,
    containing_service=None,
    input_type=_GETSERVERCERTIFICATEREQUEST,
    output_type=_GETSERVERCERTIFICATERESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CERT)

DESCRIPTOR.services_by_name['Cert'] = _CERT

# @@protoc_insertion_point(module_scope)
