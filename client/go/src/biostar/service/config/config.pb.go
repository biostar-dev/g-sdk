// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package config

import (
	err "biostar/service/err"
	system "biostar/service/system"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetSystemRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSystemRequest) Reset()         { *m = GetSystemRequest{} }
func (m *GetSystemRequest) String() string { return proto.CompactTextString(m) }
func (*GetSystemRequest) ProtoMessage()    {}
func (*GetSystemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *GetSystemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemRequest.Unmarshal(m, b)
}
func (m *GetSystemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemRequest.Marshal(b, m, deterministic)
}
func (m *GetSystemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemRequest.Merge(m, src)
}
func (m *GetSystemRequest) XXX_Size() int {
	return xxx_messageInfo_GetSystemRequest.Size(m)
}
func (m *GetSystemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemRequest proto.InternalMessageInfo

func (m *GetSystemRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetSystemResponse struct {
	Config               *system.SystemConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetSystemResponse) Reset()         { *m = GetSystemResponse{} }
func (m *GetSystemResponse) String() string { return proto.CompactTextString(m) }
func (*GetSystemResponse) ProtoMessage()    {}
func (*GetSystemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

func (m *GetSystemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSystemResponse.Unmarshal(m, b)
}
func (m *GetSystemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSystemResponse.Marshal(b, m, deterministic)
}
func (m *GetSystemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSystemResponse.Merge(m, src)
}
func (m *GetSystemResponse) XXX_Size() int {
	return xxx_messageInfo_GetSystemResponse.Size(m)
}
func (m *GetSystemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSystemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSystemResponse proto.InternalMessageInfo

func (m *GetSystemResponse) GetConfig() *system.SystemConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetSystemRequest struct {
	DeviceID             uint32               `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Config               *system.SystemConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetSystemRequest) Reset()         { *m = SetSystemRequest{} }
func (m *SetSystemRequest) String() string { return proto.CompactTextString(m) }
func (*SetSystemRequest) ProtoMessage()    {}
func (*SetSystemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}

func (m *SetSystemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSystemRequest.Unmarshal(m, b)
}
func (m *SetSystemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSystemRequest.Marshal(b, m, deterministic)
}
func (m *SetSystemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSystemRequest.Merge(m, src)
}
func (m *SetSystemRequest) XXX_Size() int {
	return xxx_messageInfo_SetSystemRequest.Size(m)
}
func (m *SetSystemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSystemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetSystemRequest proto.InternalMessageInfo

func (m *SetSystemRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetSystemRequest) GetConfig() *system.SystemConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetSystemResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetSystemResponse) Reset()         { *m = SetSystemResponse{} }
func (m *SetSystemResponse) String() string { return proto.CompactTextString(m) }
func (*SetSystemResponse) ProtoMessage()    {}
func (*SetSystemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}

func (m *SetSystemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSystemResponse.Unmarshal(m, b)
}
func (m *SetSystemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSystemResponse.Marshal(b, m, deterministic)
}
func (m *SetSystemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSystemResponse.Merge(m, src)
}
func (m *SetSystemResponse) XXX_Size() int {
	return xxx_messageInfo_SetSystemResponse.Size(m)
}
func (m *SetSystemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSystemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetSystemResponse proto.InternalMessageInfo

type SetSystemMultiRequest struct {
	DeviceIDs            []uint32             `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Config               *system.SystemConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetSystemMultiRequest) Reset()         { *m = SetSystemMultiRequest{} }
func (m *SetSystemMultiRequest) String() string { return proto.CompactTextString(m) }
func (*SetSystemMultiRequest) ProtoMessage()    {}
func (*SetSystemMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}

func (m *SetSystemMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSystemMultiRequest.Unmarshal(m, b)
}
func (m *SetSystemMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSystemMultiRequest.Marshal(b, m, deterministic)
}
func (m *SetSystemMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSystemMultiRequest.Merge(m, src)
}
func (m *SetSystemMultiRequest) XXX_Size() int {
	return xxx_messageInfo_SetSystemMultiRequest.Size(m)
}
func (m *SetSystemMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSystemMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetSystemMultiRequest proto.InternalMessageInfo

func (m *SetSystemMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *SetSystemMultiRequest) GetConfig() *system.SystemConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetSystemMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetSystemMultiResponse) Reset()         { *m = SetSystemMultiResponse{} }
func (m *SetSystemMultiResponse) String() string { return proto.CompactTextString(m) }
func (*SetSystemMultiResponse) ProtoMessage()    {}
func (*SetSystemMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}

func (m *SetSystemMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetSystemMultiResponse.Unmarshal(m, b)
}
func (m *SetSystemMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetSystemMultiResponse.Marshal(b, m, deterministic)
}
func (m *SetSystemMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetSystemMultiResponse.Merge(m, src)
}
func (m *SetSystemMultiResponse) XXX_Size() int {
	return xxx_messageInfo_SetSystemMultiResponse.Size(m)
}
func (m *SetSystemMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetSystemMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetSystemMultiResponse proto.InternalMessageInfo

func (m *SetSystemMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

func init() {
	proto.RegisterType((*GetSystemRequest)(nil), "config.GetSystemRequest")
	proto.RegisterType((*GetSystemResponse)(nil), "config.GetSystemResponse")
	proto.RegisterType((*SetSystemRequest)(nil), "config.SetSystemRequest")
	proto.RegisterType((*SetSystemResponse)(nil), "config.SetSystemResponse")
	proto.RegisterType((*SetSystemMultiRequest)(nil), "config.SetSystemMultiRequest")
	proto.RegisterType((*SetSystemMultiResponse)(nil), "config.SetSystemMultiResponse")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0xc9, 0xf7, 0x41, 0x30, 0xb7, 0xa9, 0xb4, 0xa3, 0x96, 0x34, 0xa8, 0x94, 0xac, 0xba,
	0x90, 0x29, 0x44, 0x74, 0x5d, 0xff, 0x21, 0x2e, 0xc4, 0x92, 0xec, 0xc4, 0x4d, 0x9b, 0x8e, 0x12,
	0x34, 0x99, 0x38, 0x77, 0x22, 0xf8, 0xb0, 0xbe, 0x8b, 0x34, 0x33, 0x89, 0x69, 0x62, 0xc1, 0x2e,
	0xef, 0xb9, 0xa7, 0xe7, 0x37, 0x3d, 0x37, 0x60, 0x47, 0x3c, 0x7d, 0x8e, 0x5f, 0x68, 0x26, 0xb8,
	0xe4, 0xc4, 0x54, 0x93, 0x6b, 0x31, 0x21, 0x94, 0xe4, 0xda, 0xf8, 0x89, 0x92, 0x25, 0x6a, 0xf2,
	0x28, 0xf4, 0x6e, 0x99, 0x0c, 0x0b, 0x29, 0x60, 0xef, 0x39, 0x43, 0x49, 0x5c, 0xd8, 0x59, 0xb2,
	0x8f, 0x38, 0x62, 0x77, 0xd7, 0x8e, 0x31, 0x32, 0xc6, 0xdd, 0xa0, 0x9a, 0xbd, 0x0b, 0xe8, 0xd7,
	0xfc, 0x98, 0xf1, 0x14, 0x19, 0x39, 0x01, 0xcd, 0x29, 0xec, 0x1d, 0x7f, 0x9f, 0x6a, 0x86, 0xf2,
	0x5d, 0x15, 0xbb, 0x40, 0x7b, 0xbc, 0x27, 0xe8, 0x85, 0x5b, 0x20, 0x6b, 0xe9, 0xff, 0xfe, 0x90,
	0xbe, 0x07, 0xfd, 0xb0, 0xf9, 0x40, 0x2f, 0x82, 0x83, 0x4a, 0xbc, 0xcf, 0xdf, 0x64, 0x5c, 0x72,
	0x0f, 0xc1, 0x2a, 0x39, 0xe8, 0x18, 0xa3, 0xff, 0xe3, 0x6e, 0xf0, 0x23, 0x6c, 0x49, 0x9e, 0xc1,
	0xa0, 0x09, 0xd1, 0xfd, 0x9c, 0x83, 0xad, 0x42, 0x6f, 0x84, 0xe0, 0x42, 0x81, 0x3a, 0x3e, 0xa1,
	0xab, 0xa3, 0x14, 0x52, 0xe9, 0x0c, 0xd6, 0x7c, 0xfe, 0x97, 0x01, 0xa6, 0x82, 0x90, 0x29, 0x58,
	0x55, 0xef, 0xc4, 0xa1, 0xfa, 0xc8, 0xcd, 0xd3, 0xb9, 0xc3, 0x5f, 0x36, 0xfa, 0x11, 0x53, 0xb0,
	0xc2, 0x76, 0x42, 0xb8, 0x31, 0xa1, 0xd5, 0x22, 0x79, 0x80, 0xdd, 0xf5, 0x3f, 0x48, 0x8e, 0x5a,
	0xe6, 0x7a, 0xbb, 0xee, 0xf1, 0xa6, 0xb5, 0x0a, 0xbc, 0x3c, 0x83, 0x61, 0xc4, 0x13, 0x8a, 0x79,
	0x26, 0x58, 0x32, 0x8f, 0xd3, 0x88, 0xe2, 0xf2, 0x55, 0xff, 0x66, 0x66, 0x3c, 0x0e, 0x16, 0x31,
	0x47, 0x39, 0x17, 0x13, 0x64, 0x62, 0xd5, 0xca, 0x44, 0x6d, 0x16, 0x66, 0xf1, 0xe9, 0x9e, 0x7e,
	0x07, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x3a, 0x6f, 0xbd, 0xeb, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigClient is the client API for Config service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigClient interface {
	GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*GetSystemResponse, error)
	SetSystem(ctx context.Context, in *SetSystemRequest, opts ...grpc.CallOption) (*SetSystemResponse, error)
	SetSystemMulti(ctx context.Context, in *SetSystemMultiRequest, opts ...grpc.CallOption) (*SetSystemMultiResponse, error)
}

type configClient struct {
	cc *grpc.ClientConn
}

func NewConfigClient(cc *grpc.ClientConn) ConfigClient {
	return &configClient{cc}
}

func (c *configClient) GetSystem(ctx context.Context, in *GetSystemRequest, opts ...grpc.CallOption) (*GetSystemResponse, error) {
	out := new(GetSystemResponse)
	err := c.cc.Invoke(ctx, "/config.Config/GetSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) SetSystem(ctx context.Context, in *SetSystemRequest, opts ...grpc.CallOption) (*SetSystemResponse, error) {
	out := new(SetSystemResponse)
	err := c.cc.Invoke(ctx, "/config.Config/SetSystem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) SetSystemMulti(ctx context.Context, in *SetSystemMultiRequest, opts ...grpc.CallOption) (*SetSystemMultiResponse, error) {
	out := new(SetSystemMultiResponse)
	err := c.cc.Invoke(ctx, "/config.Config/SetSystemMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServer is the server API for Config service.
type ConfigServer interface {
	GetSystem(context.Context, *GetSystemRequest) (*GetSystemResponse, error)
	SetSystem(context.Context, *SetSystemRequest) (*SetSystemResponse, error)
	SetSystemMulti(context.Context, *SetSystemMultiRequest) (*SetSystemMultiResponse, error)
}

func RegisterConfigServer(s *grpc.Server, srv ConfigServer) {
	s.RegisterService(&_Config_serviceDesc, srv)
}

func _Config_GetSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).GetSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/GetSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).GetSystem(ctx, req.(*GetSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_SetSystem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).SetSystem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/SetSystem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).SetSystem(ctx, req.(*SetSystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_SetSystemMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSystemMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).SetSystemMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/SetSystemMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).SetSystemMulti(ctx, req.(*SetSystemMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Config_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.Config",
	HandlerType: (*ConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystem",
			Handler:    _Config_GetSystem_Handler,
		},
		{
			MethodName: "SetSystem",
			Handler:    _Config_SetSystem_Handler,
		},
		{
			MethodName: "SetSystemMulti",
			Handler:    _Config_SetSystemMulti_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config.proto",
}
