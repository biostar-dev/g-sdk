// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connect.proto

package connect

import (
	device "biostar/service/device"
	err "biostar/service/err"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnectionMode int32

const (
	ConnectionMode_SERVER_TO_DEVICE ConnectionMode = 0
	ConnectionMode_DEVICE_TO_SERVER ConnectionMode = 1
	ConnectionMode_DEFAULT          ConnectionMode = 0
)

var ConnectionMode_name = map[int32]string{
	0: "SERVER_TO_DEVICE",
	1: "DEVICE_TO_SERVER",
	// Duplicate value: 0: "DEFAULT",
}

var ConnectionMode_value = map[string]int32{
	"SERVER_TO_DEVICE": 0,
	"DEVICE_TO_SERVER": 1,
	"DEFAULT":          0,
}

func (x ConnectionMode) String() string {
	return proto.EnumName(ConnectionMode_name, int32(x))
}

func (ConnectionMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{0}
}

type Status int32

const (
	// Normal Status
	Status_DISCONNECTED  Status = 0
	Status_TCP_CONNECTED Status = 1
	Status_TLS_CONNECTED Status = 2
	// TCP Connection Error Status
	Status_TCP_CANNOT_CONNECT Status = 256
	Status_TCP_NOT_ALLOWED    Status = 257
	// TLS Connection Error Status
	Status_TLS_CANNOT_CONNECT Status = 512
	Status_TLS_NOT_ALLOWED    Status = 513
)

var Status_name = map[int32]string{
	0:   "DISCONNECTED",
	1:   "TCP_CONNECTED",
	2:   "TLS_CONNECTED",
	256: "TCP_CANNOT_CONNECT",
	257: "TCP_NOT_ALLOWED",
	512: "TLS_CANNOT_CONNECT",
	513: "TLS_NOT_ALLOWED",
}

var Status_value = map[string]int32{
	"DISCONNECTED":       0,
	"TCP_CONNECTED":      1,
	"TLS_CONNECTED":      2,
	"TCP_CANNOT_CONNECT": 256,
	"TCP_NOT_ALLOWED":    257,
	"TLS_CANNOT_CONNECT": 512,
	"TLS_NOT_ALLOWED":    513,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{1}
}

type ConnectInfo struct {
	IPAddr               string   `protobuf:"bytes,1,opt,name=IPAddr,proto3" json:"IPAddr,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	UseSSL               bool     `protobuf:"varint,3,opt,name=useSSL,proto3" json:"useSSL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectInfo) Reset()         { *m = ConnectInfo{} }
func (m *ConnectInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectInfo) ProtoMessage()    {}
func (*ConnectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{0}
}

func (m *ConnectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectInfo.Unmarshal(m, b)
}
func (m *ConnectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectInfo.Marshal(b, m, deterministic)
}
func (m *ConnectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectInfo.Merge(m, src)
}
func (m *ConnectInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectInfo.Size(m)
}
func (m *ConnectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectInfo proto.InternalMessageInfo

func (m *ConnectInfo) GetIPAddr() string {
	if m != nil {
		return m.IPAddr
	}
	return ""
}

func (m *ConnectInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ConnectInfo) GetUseSSL() bool {
	if m != nil {
		return m.UseSSL
	}
	return false
}

type ConnectRequest struct {
	ConnectInfo          *ConnectInfo `protobuf:"bytes,1,opt,name=connectInfo,proto3" json:"connectInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{1}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetConnectInfo() *ConnectInfo {
	if m != nil {
		return m.ConnectInfo
	}
	return nil
}

type ConnectResponse struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{2}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type AsyncConnectInfo struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	IPAddr               string   `protobuf:"bytes,2,opt,name=IPAddr,proto3" json:"IPAddr,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	UseSSL               bool     `protobuf:"varint,4,opt,name=useSSL,proto3" json:"useSSL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AsyncConnectInfo) Reset()         { *m = AsyncConnectInfo{} }
func (m *AsyncConnectInfo) String() string { return proto.CompactTextString(m) }
func (*AsyncConnectInfo) ProtoMessage()    {}
func (*AsyncConnectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{3}
}

func (m *AsyncConnectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AsyncConnectInfo.Unmarshal(m, b)
}
func (m *AsyncConnectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AsyncConnectInfo.Marshal(b, m, deterministic)
}
func (m *AsyncConnectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AsyncConnectInfo.Merge(m, src)
}
func (m *AsyncConnectInfo) XXX_Size() int {
	return xxx_messageInfo_AsyncConnectInfo.Size(m)
}
func (m *AsyncConnectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AsyncConnectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AsyncConnectInfo proto.InternalMessageInfo

func (m *AsyncConnectInfo) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *AsyncConnectInfo) GetIPAddr() string {
	if m != nil {
		return m.IPAddr
	}
	return ""
}

func (m *AsyncConnectInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AsyncConnectInfo) GetUseSSL() bool {
	if m != nil {
		return m.UseSSL
	}
	return false
}

type AddAsyncConnectionRequest struct {
	ConnectInfos         []*AsyncConnectInfo `protobuf:"bytes,1,rep,name=connectInfos,proto3" json:"connectInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AddAsyncConnectionRequest) Reset()         { *m = AddAsyncConnectionRequest{} }
func (m *AddAsyncConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*AddAsyncConnectionRequest) ProtoMessage()    {}
func (*AddAsyncConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{4}
}

func (m *AddAsyncConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAsyncConnectionRequest.Unmarshal(m, b)
}
func (m *AddAsyncConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAsyncConnectionRequest.Marshal(b, m, deterministic)
}
func (m *AddAsyncConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAsyncConnectionRequest.Merge(m, src)
}
func (m *AddAsyncConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_AddAsyncConnectionRequest.Size(m)
}
func (m *AddAsyncConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAsyncConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAsyncConnectionRequest proto.InternalMessageInfo

func (m *AddAsyncConnectionRequest) GetConnectInfos() []*AsyncConnectInfo {
	if m != nil {
		return m.ConnectInfos
	}
	return nil
}

type AddAsyncConnectionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAsyncConnectionResponse) Reset()         { *m = AddAsyncConnectionResponse{} }
func (m *AddAsyncConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*AddAsyncConnectionResponse) ProtoMessage()    {}
func (*AddAsyncConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{5}
}

func (m *AddAsyncConnectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAsyncConnectionResponse.Unmarshal(m, b)
}
func (m *AddAsyncConnectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAsyncConnectionResponse.Marshal(b, m, deterministic)
}
func (m *AddAsyncConnectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAsyncConnectionResponse.Merge(m, src)
}
func (m *AddAsyncConnectionResponse) XXX_Size() int {
	return xxx_messageInfo_AddAsyncConnectionResponse.Size(m)
}
func (m *AddAsyncConnectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAsyncConnectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAsyncConnectionResponse proto.InternalMessageInfo

type DeleteAsyncConnectionRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAsyncConnectionRequest) Reset()         { *m = DeleteAsyncConnectionRequest{} }
func (m *DeleteAsyncConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAsyncConnectionRequest) ProtoMessage()    {}
func (*DeleteAsyncConnectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{6}
}

func (m *DeleteAsyncConnectionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAsyncConnectionRequest.Unmarshal(m, b)
}
func (m *DeleteAsyncConnectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAsyncConnectionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAsyncConnectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAsyncConnectionRequest.Merge(m, src)
}
func (m *DeleteAsyncConnectionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAsyncConnectionRequest.Size(m)
}
func (m *DeleteAsyncConnectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAsyncConnectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAsyncConnectionRequest proto.InternalMessageInfo

func (m *DeleteAsyncConnectionRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type DeleteAsyncConnectionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAsyncConnectionResponse) Reset()         { *m = DeleteAsyncConnectionResponse{} }
func (m *DeleteAsyncConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAsyncConnectionResponse) ProtoMessage()    {}
func (*DeleteAsyncConnectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{7}
}

func (m *DeleteAsyncConnectionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAsyncConnectionResponse.Unmarshal(m, b)
}
func (m *DeleteAsyncConnectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAsyncConnectionResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAsyncConnectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAsyncConnectionResponse.Merge(m, src)
}
func (m *DeleteAsyncConnectionResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAsyncConnectionResponse.Size(m)
}
func (m *DeleteAsyncConnectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAsyncConnectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAsyncConnectionResponse proto.InternalMessageInfo

type AcceptFilter struct {
	AllowAll             bool     `protobuf:"varint,1,opt,name=allowAll,proto3" json:"allowAll,omitempty"`
	DeviceIDs            []uint32 `protobuf:"varint,2,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	IPAddrs              []string `protobuf:"bytes,3,rep,name=IPAddrs,proto3" json:"IPAddrs,omitempty"`
	SubnetMasks          []string `protobuf:"bytes,4,rep,name=subnetMasks,proto3" json:"subnetMasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptFilter) Reset()         { *m = AcceptFilter{} }
func (m *AcceptFilter) String() string { return proto.CompactTextString(m) }
func (*AcceptFilter) ProtoMessage()    {}
func (*AcceptFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{8}
}

func (m *AcceptFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptFilter.Unmarshal(m, b)
}
func (m *AcceptFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptFilter.Marshal(b, m, deterministic)
}
func (m *AcceptFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptFilter.Merge(m, src)
}
func (m *AcceptFilter) XXX_Size() int {
	return xxx_messageInfo_AcceptFilter.Size(m)
}
func (m *AcceptFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptFilter.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptFilter proto.InternalMessageInfo

func (m *AcceptFilter) GetAllowAll() bool {
	if m != nil {
		return m.AllowAll
	}
	return false
}

func (m *AcceptFilter) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *AcceptFilter) GetIPAddrs() []string {
	if m != nil {
		return m.IPAddrs
	}
	return nil
}

func (m *AcceptFilter) GetSubnetMasks() []string {
	if m != nil {
		return m.SubnetMasks
	}
	return nil
}

type SetAcceptFilterRequest struct {
	Filter               *AcceptFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetAcceptFilterRequest) Reset()         { *m = SetAcceptFilterRequest{} }
func (m *SetAcceptFilterRequest) String() string { return proto.CompactTextString(m) }
func (*SetAcceptFilterRequest) ProtoMessage()    {}
func (*SetAcceptFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{9}
}

func (m *SetAcceptFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAcceptFilterRequest.Unmarshal(m, b)
}
func (m *SetAcceptFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAcceptFilterRequest.Marshal(b, m, deterministic)
}
func (m *SetAcceptFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAcceptFilterRequest.Merge(m, src)
}
func (m *SetAcceptFilterRequest) XXX_Size() int {
	return xxx_messageInfo_SetAcceptFilterRequest.Size(m)
}
func (m *SetAcceptFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAcceptFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAcceptFilterRequest proto.InternalMessageInfo

func (m *SetAcceptFilterRequest) GetFilter() *AcceptFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type SetAcceptFilterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAcceptFilterResponse) Reset()         { *m = SetAcceptFilterResponse{} }
func (m *SetAcceptFilterResponse) String() string { return proto.CompactTextString(m) }
func (*SetAcceptFilterResponse) ProtoMessage()    {}
func (*SetAcceptFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{10}
}

func (m *SetAcceptFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAcceptFilterResponse.Unmarshal(m, b)
}
func (m *SetAcceptFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAcceptFilterResponse.Marshal(b, m, deterministic)
}
func (m *SetAcceptFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAcceptFilterResponse.Merge(m, src)
}
func (m *SetAcceptFilterResponse) XXX_Size() int {
	return xxx_messageInfo_SetAcceptFilterResponse.Size(m)
}
func (m *SetAcceptFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAcceptFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetAcceptFilterResponse proto.InternalMessageInfo

type GetAcceptFilterRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAcceptFilterRequest) Reset()         { *m = GetAcceptFilterRequest{} }
func (m *GetAcceptFilterRequest) String() string { return proto.CompactTextString(m) }
func (*GetAcceptFilterRequest) ProtoMessage()    {}
func (*GetAcceptFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{11}
}

func (m *GetAcceptFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAcceptFilterRequest.Unmarshal(m, b)
}
func (m *GetAcceptFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAcceptFilterRequest.Marshal(b, m, deterministic)
}
func (m *GetAcceptFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAcceptFilterRequest.Merge(m, src)
}
func (m *GetAcceptFilterRequest) XXX_Size() int {
	return xxx_messageInfo_GetAcceptFilterRequest.Size(m)
}
func (m *GetAcceptFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAcceptFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAcceptFilterRequest proto.InternalMessageInfo

type GetAcceptFilterResponse struct {
	Filter               *AcceptFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetAcceptFilterResponse) Reset()         { *m = GetAcceptFilterResponse{} }
func (m *GetAcceptFilterResponse) String() string { return proto.CompactTextString(m) }
func (*GetAcceptFilterResponse) ProtoMessage()    {}
func (*GetAcceptFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{12}
}

func (m *GetAcceptFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAcceptFilterResponse.Unmarshal(m, b)
}
func (m *GetAcceptFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAcceptFilterResponse.Marshal(b, m, deterministic)
}
func (m *GetAcceptFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAcceptFilterResponse.Merge(m, src)
}
func (m *GetAcceptFilterResponse) XXX_Size() int {
	return xxx_messageInfo_GetAcceptFilterResponse.Size(m)
}
func (m *GetAcceptFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAcceptFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAcceptFilterResponse proto.InternalMessageInfo

func (m *GetAcceptFilterResponse) GetFilter() *AcceptFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type PendingDeviceInfo struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	IPAddr               string   `protobuf:"bytes,2,opt,name=IPAddr,proto3" json:"IPAddr,omitempty"`
	LastTry              uint32   `protobuf:"varint,3,opt,name=lastTry,proto3" json:"lastTry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PendingDeviceInfo) Reset()         { *m = PendingDeviceInfo{} }
func (m *PendingDeviceInfo) String() string { return proto.CompactTextString(m) }
func (*PendingDeviceInfo) ProtoMessage()    {}
func (*PendingDeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{13}
}

func (m *PendingDeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingDeviceInfo.Unmarshal(m, b)
}
func (m *PendingDeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingDeviceInfo.Marshal(b, m, deterministic)
}
func (m *PendingDeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingDeviceInfo.Merge(m, src)
}
func (m *PendingDeviceInfo) XXX_Size() int {
	return xxx_messageInfo_PendingDeviceInfo.Size(m)
}
func (m *PendingDeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingDeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PendingDeviceInfo proto.InternalMessageInfo

func (m *PendingDeviceInfo) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *PendingDeviceInfo) GetIPAddr() string {
	if m != nil {
		return m.IPAddr
	}
	return ""
}

func (m *PendingDeviceInfo) GetLastTry() uint32 {
	if m != nil {
		return m.LastTry
	}
	return 0
}

type GetPendingListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPendingListRequest) Reset()         { *m = GetPendingListRequest{} }
func (m *GetPendingListRequest) String() string { return proto.CompactTextString(m) }
func (*GetPendingListRequest) ProtoMessage()    {}
func (*GetPendingListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{14}
}

func (m *GetPendingListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPendingListRequest.Unmarshal(m, b)
}
func (m *GetPendingListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPendingListRequest.Marshal(b, m, deterministic)
}
func (m *GetPendingListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPendingListRequest.Merge(m, src)
}
func (m *GetPendingListRequest) XXX_Size() int {
	return xxx_messageInfo_GetPendingListRequest.Size(m)
}
func (m *GetPendingListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPendingListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPendingListRequest proto.InternalMessageInfo

type GetPendingListResponse struct {
	DeviceInfos          []*PendingDeviceInfo `protobuf:"bytes,1,rep,name=deviceInfos,proto3" json:"deviceInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetPendingListResponse) Reset()         { *m = GetPendingListResponse{} }
func (m *GetPendingListResponse) String() string { return proto.CompactTextString(m) }
func (*GetPendingListResponse) ProtoMessage()    {}
func (*GetPendingListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{15}
}

func (m *GetPendingListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPendingListResponse.Unmarshal(m, b)
}
func (m *GetPendingListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPendingListResponse.Marshal(b, m, deterministic)
}
func (m *GetPendingListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPendingListResponse.Merge(m, src)
}
func (m *GetPendingListResponse) XXX_Size() int {
	return xxx_messageInfo_GetPendingListResponse.Size(m)
}
func (m *GetPendingListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPendingListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPendingListResponse proto.InternalMessageInfo

func (m *GetPendingListResponse) GetDeviceInfos() []*PendingDeviceInfo {
	if m != nil {
		return m.DeviceInfos
	}
	return nil
}

type DeviceInfo struct {
	DeviceID             uint32         `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	ConnectionMode       ConnectionMode `protobuf:"varint,2,opt,name=connectionMode,proto3,enum=connect.ConnectionMode" json:"connectionMode,omitempty"`
	IPAddr               string         `protobuf:"bytes,3,opt,name=IPAddr,proto3" json:"IPAddr,omitempty"`
	Port                 int32          `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Status               Status         `protobuf:"varint,5,opt,name=status,proto3,enum=connect.Status" json:"status,omitempty"`
	AutoReconnect        bool           `protobuf:"varint,6,opt,name=autoReconnect,proto3" json:"autoReconnect,omitempty"`
	UseSSL               bool           `protobuf:"varint,7,opt,name=useSSL,proto3" json:"useSSL,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeviceInfo) Reset()         { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()    {}
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{16}
}

func (m *DeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceInfo.Unmarshal(m, b)
}
func (m *DeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceInfo.Marshal(b, m, deterministic)
}
func (m *DeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceInfo.Merge(m, src)
}
func (m *DeviceInfo) XXX_Size() int {
	return xxx_messageInfo_DeviceInfo.Size(m)
}
func (m *DeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceInfo proto.InternalMessageInfo

func (m *DeviceInfo) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *DeviceInfo) GetConnectionMode() ConnectionMode {
	if m != nil {
		return m.ConnectionMode
	}
	return ConnectionMode_SERVER_TO_DEVICE
}

func (m *DeviceInfo) GetIPAddr() string {
	if m != nil {
		return m.IPAddr
	}
	return ""
}

func (m *DeviceInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *DeviceInfo) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_DISCONNECTED
}

func (m *DeviceInfo) GetAutoReconnect() bool {
	if m != nil {
		return m.AutoReconnect
	}
	return false
}

func (m *DeviceInfo) GetUseSSL() bool {
	if m != nil {
		return m.UseSSL
	}
	return false
}

type GetDeviceListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceListRequest) Reset()         { *m = GetDeviceListRequest{} }
func (m *GetDeviceListRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceListRequest) ProtoMessage()    {}
func (*GetDeviceListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{17}
}

func (m *GetDeviceListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceListRequest.Unmarshal(m, b)
}
func (m *GetDeviceListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceListRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceListRequest.Merge(m, src)
}
func (m *GetDeviceListRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceListRequest.Size(m)
}
func (m *GetDeviceListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceListRequest proto.InternalMessageInfo

type GetDeviceListResponse struct {
	DeviceInfos          []*DeviceInfo `protobuf:"bytes,1,rep,name=deviceInfos,proto3" json:"deviceInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetDeviceListResponse) Reset()         { *m = GetDeviceListResponse{} }
func (m *GetDeviceListResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceListResponse) ProtoMessage()    {}
func (*GetDeviceListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{18}
}

func (m *GetDeviceListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceListResponse.Unmarshal(m, b)
}
func (m *GetDeviceListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceListResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceListResponse.Merge(m, src)
}
func (m *GetDeviceListResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceListResponse.Size(m)
}
func (m *GetDeviceListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceListResponse proto.InternalMessageInfo

func (m *GetDeviceListResponse) GetDeviceInfos() []*DeviceInfo {
	if m != nil {
		return m.DeviceInfos
	}
	return nil
}

type DisconnectRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectRequest) Reset()         { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()    {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{19}
}

func (m *DisconnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectRequest.Unmarshal(m, b)
}
func (m *DisconnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectRequest.Merge(m, src)
}
func (m *DisconnectRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectRequest.Size(m)
}
func (m *DisconnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectRequest proto.InternalMessageInfo

func (m *DisconnectRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type DisconnectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResponse) Reset()         { *m = DisconnectResponse{} }
func (m *DisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectResponse) ProtoMessage()    {}
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{20}
}

func (m *DisconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResponse.Unmarshal(m, b)
}
func (m *DisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResponse.Merge(m, src)
}
func (m *DisconnectResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectResponse.Size(m)
}
func (m *DisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResponse proto.InternalMessageInfo

type DisconnectAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectAllRequest) Reset()         { *m = DisconnectAllRequest{} }
func (m *DisconnectAllRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectAllRequest) ProtoMessage()    {}
func (*DisconnectAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{21}
}

func (m *DisconnectAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectAllRequest.Unmarshal(m, b)
}
func (m *DisconnectAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectAllRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectAllRequest.Merge(m, src)
}
func (m *DisconnectAllRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectAllRequest.Size(m)
}
func (m *DisconnectAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectAllRequest proto.InternalMessageInfo

type DisconnectAllResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectAllResponse) Reset()         { *m = DisconnectAllResponse{} }
func (m *DisconnectAllResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectAllResponse) ProtoMessage()    {}
func (*DisconnectAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{22}
}

func (m *DisconnectAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectAllResponse.Unmarshal(m, b)
}
func (m *DisconnectAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectAllResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectAllResponse.Merge(m, src)
}
func (m *DisconnectAllResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectAllResponse.Size(m)
}
func (m *DisconnectAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectAllResponse proto.InternalMessageInfo

type SearchDeviceRequest struct {
	Timeout              uint32   `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchDeviceRequest) Reset()         { *m = SearchDeviceRequest{} }
func (m *SearchDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*SearchDeviceRequest) ProtoMessage()    {}
func (*SearchDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{23}
}

func (m *SearchDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDeviceRequest.Unmarshal(m, b)
}
func (m *SearchDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDeviceRequest.Marshal(b, m, deterministic)
}
func (m *SearchDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDeviceRequest.Merge(m, src)
}
func (m *SearchDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_SearchDeviceRequest.Size(m)
}
func (m *SearchDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDeviceRequest proto.InternalMessageInfo

func (m *SearchDeviceRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type SearchDeviceInfo struct {
	DeviceID             uint32         `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Type                 device.Type    `protobuf:"varint,2,opt,name=type,proto3,enum=device.Type" json:"type,omitempty"`
	UseDHCP              bool           `protobuf:"varint,3,opt,name=useDHCP,proto3" json:"useDHCP,omitempty"`
	ConnectionMode       ConnectionMode `protobuf:"varint,4,opt,name=connectionMode,proto3,enum=connect.ConnectionMode" json:"connectionMode,omitempty"`
	IPAddr               string         `protobuf:"bytes,5,opt,name=IPAddr,proto3" json:"IPAddr,omitempty"`
	Port                 int32          `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	UseSSL               bool           `protobuf:"varint,7,opt,name=useSSL,proto3" json:"useSSL,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SearchDeviceInfo) Reset()         { *m = SearchDeviceInfo{} }
func (m *SearchDeviceInfo) String() string { return proto.CompactTextString(m) }
func (*SearchDeviceInfo) ProtoMessage()    {}
func (*SearchDeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{24}
}

func (m *SearchDeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDeviceInfo.Unmarshal(m, b)
}
func (m *SearchDeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDeviceInfo.Marshal(b, m, deterministic)
}
func (m *SearchDeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDeviceInfo.Merge(m, src)
}
func (m *SearchDeviceInfo) XXX_Size() int {
	return xxx_messageInfo_SearchDeviceInfo.Size(m)
}
func (m *SearchDeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDeviceInfo proto.InternalMessageInfo

func (m *SearchDeviceInfo) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SearchDeviceInfo) GetType() device.Type {
	if m != nil {
		return m.Type
	}
	return device.Type_UNDEFINED
}

func (m *SearchDeviceInfo) GetUseDHCP() bool {
	if m != nil {
		return m.UseDHCP
	}
	return false
}

func (m *SearchDeviceInfo) GetConnectionMode() ConnectionMode {
	if m != nil {
		return m.ConnectionMode
	}
	return ConnectionMode_SERVER_TO_DEVICE
}

func (m *SearchDeviceInfo) GetIPAddr() string {
	if m != nil {
		return m.IPAddr
	}
	return ""
}

func (m *SearchDeviceInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *SearchDeviceInfo) GetUseSSL() bool {
	if m != nil {
		return m.UseSSL
	}
	return false
}

type SearchDeviceResponse struct {
	DeviceInfos          []*SearchDeviceInfo `protobuf:"bytes,1,rep,name=deviceInfos,proto3" json:"deviceInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SearchDeviceResponse) Reset()         { *m = SearchDeviceResponse{} }
func (m *SearchDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*SearchDeviceResponse) ProtoMessage()    {}
func (*SearchDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{25}
}

func (m *SearchDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDeviceResponse.Unmarshal(m, b)
}
func (m *SearchDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDeviceResponse.Marshal(b, m, deterministic)
}
func (m *SearchDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDeviceResponse.Merge(m, src)
}
func (m *SearchDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_SearchDeviceResponse.Size(m)
}
func (m *SearchDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDeviceResponse proto.InternalMessageInfo

func (m *SearchDeviceResponse) GetDeviceInfos() []*SearchDeviceInfo {
	if m != nil {
		return m.DeviceInfos
	}
	return nil
}

type SubscribeStatusRequest struct {
	QueueSize            int32    `protobuf:"varint,1,opt,name=queueSize,proto3" json:"queueSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeStatusRequest) Reset()         { *m = SubscribeStatusRequest{} }
func (m *SubscribeStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeStatusRequest) ProtoMessage()    {}
func (*SubscribeStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{26}
}

func (m *SubscribeStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeStatusRequest.Unmarshal(m, b)
}
func (m *SubscribeStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeStatusRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeStatusRequest.Merge(m, src)
}
func (m *SubscribeStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeStatusRequest.Size(m)
}
func (m *SubscribeStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeStatusRequest proto.InternalMessageInfo

func (m *SubscribeStatusRequest) GetQueueSize() int32 {
	if m != nil {
		return m.QueueSize
	}
	return 0
}

type StatusChange struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=connect.Status" json:"status,omitempty"`
	Timestamp            uint32   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusChange) Reset()         { *m = StatusChange{} }
func (m *StatusChange) String() string { return proto.CompactTextString(m) }
func (*StatusChange) ProtoMessage()    {}
func (*StatusChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{27}
}

func (m *StatusChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusChange.Unmarshal(m, b)
}
func (m *StatusChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusChange.Marshal(b, m, deterministic)
}
func (m *StatusChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusChange.Merge(m, src)
}
func (m *StatusChange) XXX_Size() int {
	return xxx_messageInfo_StatusChange.Size(m)
}
func (m *StatusChange) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusChange.DiscardUnknown(m)
}

var xxx_messageInfo_StatusChange proto.InternalMessageInfo

func (m *StatusChange) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *StatusChange) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_DISCONNECTED
}

func (m *StatusChange) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type SetConnectionModeRequest struct {
	DeviceID             uint32         `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	ConnectionMode       ConnectionMode `protobuf:"varint,2,opt,name=connectionMode,proto3,enum=connect.ConnectionMode" json:"connectionMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetConnectionModeRequest) Reset()         { *m = SetConnectionModeRequest{} }
func (m *SetConnectionModeRequest) String() string { return proto.CompactTextString(m) }
func (*SetConnectionModeRequest) ProtoMessage()    {}
func (*SetConnectionModeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{28}
}

func (m *SetConnectionModeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConnectionModeRequest.Unmarshal(m, b)
}
func (m *SetConnectionModeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConnectionModeRequest.Marshal(b, m, deterministic)
}
func (m *SetConnectionModeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConnectionModeRequest.Merge(m, src)
}
func (m *SetConnectionModeRequest) XXX_Size() int {
	return xxx_messageInfo_SetConnectionModeRequest.Size(m)
}
func (m *SetConnectionModeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConnectionModeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConnectionModeRequest proto.InternalMessageInfo

func (m *SetConnectionModeRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetConnectionModeRequest) GetConnectionMode() ConnectionMode {
	if m != nil {
		return m.ConnectionMode
	}
	return ConnectionMode_SERVER_TO_DEVICE
}

type SetConnectionModeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConnectionModeResponse) Reset()         { *m = SetConnectionModeResponse{} }
func (m *SetConnectionModeResponse) String() string { return proto.CompactTextString(m) }
func (*SetConnectionModeResponse) ProtoMessage()    {}
func (*SetConnectionModeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{29}
}

func (m *SetConnectionModeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConnectionModeResponse.Unmarshal(m, b)
}
func (m *SetConnectionModeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConnectionModeResponse.Marshal(b, m, deterministic)
}
func (m *SetConnectionModeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConnectionModeResponse.Merge(m, src)
}
func (m *SetConnectionModeResponse) XXX_Size() int {
	return xxx_messageInfo_SetConnectionModeResponse.Size(m)
}
func (m *SetConnectionModeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConnectionModeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConnectionModeResponse proto.InternalMessageInfo

type SetConnectionModeMultiRequest struct {
	DeviceIDs            []uint32       `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	ConnectionMode       ConnectionMode `protobuf:"varint,2,opt,name=connectionMode,proto3,enum=connect.ConnectionMode" json:"connectionMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetConnectionModeMultiRequest) Reset()         { *m = SetConnectionModeMultiRequest{} }
func (m *SetConnectionModeMultiRequest) String() string { return proto.CompactTextString(m) }
func (*SetConnectionModeMultiRequest) ProtoMessage()    {}
func (*SetConnectionModeMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{30}
}

func (m *SetConnectionModeMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConnectionModeMultiRequest.Unmarshal(m, b)
}
func (m *SetConnectionModeMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConnectionModeMultiRequest.Marshal(b, m, deterministic)
}
func (m *SetConnectionModeMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConnectionModeMultiRequest.Merge(m, src)
}
func (m *SetConnectionModeMultiRequest) XXX_Size() int {
	return xxx_messageInfo_SetConnectionModeMultiRequest.Size(m)
}
func (m *SetConnectionModeMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConnectionModeMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConnectionModeMultiRequest proto.InternalMessageInfo

func (m *SetConnectionModeMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *SetConnectionModeMultiRequest) GetConnectionMode() ConnectionMode {
	if m != nil {
		return m.ConnectionMode
	}
	return ConnectionMode_SERVER_TO_DEVICE
}

type SetConnectionModeMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetConnectionModeMultiResponse) Reset()         { *m = SetConnectionModeMultiResponse{} }
func (m *SetConnectionModeMultiResponse) String() string { return proto.CompactTextString(m) }
func (*SetConnectionModeMultiResponse) ProtoMessage()    {}
func (*SetConnectionModeMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{31}
}

func (m *SetConnectionModeMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConnectionModeMultiResponse.Unmarshal(m, b)
}
func (m *SetConnectionModeMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConnectionModeMultiResponse.Marshal(b, m, deterministic)
}
func (m *SetConnectionModeMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConnectionModeMultiResponse.Merge(m, src)
}
func (m *SetConnectionModeMultiResponse) XXX_Size() int {
	return xxx_messageInfo_SetConnectionModeMultiResponse.Size(m)
}
func (m *SetConnectionModeMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConnectionModeMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConnectionModeMultiResponse proto.InternalMessageInfo

func (m *SetConnectionModeMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type EnableSSLRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableSSLRequest) Reset()         { *m = EnableSSLRequest{} }
func (m *EnableSSLRequest) String() string { return proto.CompactTextString(m) }
func (*EnableSSLRequest) ProtoMessage()    {}
func (*EnableSSLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{32}
}

func (m *EnableSSLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableSSLRequest.Unmarshal(m, b)
}
func (m *EnableSSLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableSSLRequest.Marshal(b, m, deterministic)
}
func (m *EnableSSLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableSSLRequest.Merge(m, src)
}
func (m *EnableSSLRequest) XXX_Size() int {
	return xxx_messageInfo_EnableSSLRequest.Size(m)
}
func (m *EnableSSLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableSSLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableSSLRequest proto.InternalMessageInfo

func (m *EnableSSLRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type EnableSSLResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableSSLResponse) Reset()         { *m = EnableSSLResponse{} }
func (m *EnableSSLResponse) String() string { return proto.CompactTextString(m) }
func (*EnableSSLResponse) ProtoMessage()    {}
func (*EnableSSLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{33}
}

func (m *EnableSSLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableSSLResponse.Unmarshal(m, b)
}
func (m *EnableSSLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableSSLResponse.Marshal(b, m, deterministic)
}
func (m *EnableSSLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableSSLResponse.Merge(m, src)
}
func (m *EnableSSLResponse) XXX_Size() int {
	return xxx_messageInfo_EnableSSLResponse.Size(m)
}
func (m *EnableSSLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableSSLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnableSSLResponse proto.InternalMessageInfo

type EnableSSLMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableSSLMultiRequest) Reset()         { *m = EnableSSLMultiRequest{} }
func (m *EnableSSLMultiRequest) String() string { return proto.CompactTextString(m) }
func (*EnableSSLMultiRequest) ProtoMessage()    {}
func (*EnableSSLMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{34}
}

func (m *EnableSSLMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableSSLMultiRequest.Unmarshal(m, b)
}
func (m *EnableSSLMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableSSLMultiRequest.Marshal(b, m, deterministic)
}
func (m *EnableSSLMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableSSLMultiRequest.Merge(m, src)
}
func (m *EnableSSLMultiRequest) XXX_Size() int {
	return xxx_messageInfo_EnableSSLMultiRequest.Size(m)
}
func (m *EnableSSLMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableSSLMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableSSLMultiRequest proto.InternalMessageInfo

func (m *EnableSSLMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type EnableSSLMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EnableSSLMultiResponse) Reset()         { *m = EnableSSLMultiResponse{} }
func (m *EnableSSLMultiResponse) String() string { return proto.CompactTextString(m) }
func (*EnableSSLMultiResponse) ProtoMessage()    {}
func (*EnableSSLMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{35}
}

func (m *EnableSSLMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableSSLMultiResponse.Unmarshal(m, b)
}
func (m *EnableSSLMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableSSLMultiResponse.Marshal(b, m, deterministic)
}
func (m *EnableSSLMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableSSLMultiResponse.Merge(m, src)
}
func (m *EnableSSLMultiResponse) XXX_Size() int {
	return xxx_messageInfo_EnableSSLMultiResponse.Size(m)
}
func (m *EnableSSLMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableSSLMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnableSSLMultiResponse proto.InternalMessageInfo

func (m *EnableSSLMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type DisableSSLRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableSSLRequest) Reset()         { *m = DisableSSLRequest{} }
func (m *DisableSSLRequest) String() string { return proto.CompactTextString(m) }
func (*DisableSSLRequest) ProtoMessage()    {}
func (*DisableSSLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{36}
}

func (m *DisableSSLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableSSLRequest.Unmarshal(m, b)
}
func (m *DisableSSLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableSSLRequest.Marshal(b, m, deterministic)
}
func (m *DisableSSLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableSSLRequest.Merge(m, src)
}
func (m *DisableSSLRequest) XXX_Size() int {
	return xxx_messageInfo_DisableSSLRequest.Size(m)
}
func (m *DisableSSLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableSSLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableSSLRequest proto.InternalMessageInfo

func (m *DisableSSLRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type DisableSSLResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableSSLResponse) Reset()         { *m = DisableSSLResponse{} }
func (m *DisableSSLResponse) String() string { return proto.CompactTextString(m) }
func (*DisableSSLResponse) ProtoMessage()    {}
func (*DisableSSLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{37}
}

func (m *DisableSSLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableSSLResponse.Unmarshal(m, b)
}
func (m *DisableSSLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableSSLResponse.Marshal(b, m, deterministic)
}
func (m *DisableSSLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableSSLResponse.Merge(m, src)
}
func (m *DisableSSLResponse) XXX_Size() int {
	return xxx_messageInfo_DisableSSLResponse.Size(m)
}
func (m *DisableSSLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableSSLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisableSSLResponse proto.InternalMessageInfo

type DisableSSLMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableSSLMultiRequest) Reset()         { *m = DisableSSLMultiRequest{} }
func (m *DisableSSLMultiRequest) String() string { return proto.CompactTextString(m) }
func (*DisableSSLMultiRequest) ProtoMessage()    {}
func (*DisableSSLMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{38}
}

func (m *DisableSSLMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableSSLMultiRequest.Unmarshal(m, b)
}
func (m *DisableSSLMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableSSLMultiRequest.Marshal(b, m, deterministic)
}
func (m *DisableSSLMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableSSLMultiRequest.Merge(m, src)
}
func (m *DisableSSLMultiRequest) XXX_Size() int {
	return xxx_messageInfo_DisableSSLMultiRequest.Size(m)
}
func (m *DisableSSLMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableSSLMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableSSLMultiRequest proto.InternalMessageInfo

func (m *DisableSSLMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type DisableSSLMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DisableSSLMultiResponse) Reset()         { *m = DisableSSLMultiResponse{} }
func (m *DisableSSLMultiResponse) String() string { return proto.CompactTextString(m) }
func (*DisableSSLMultiResponse) ProtoMessage()    {}
func (*DisableSSLMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_778b7e3040344da6, []int{39}
}

func (m *DisableSSLMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableSSLMultiResponse.Unmarshal(m, b)
}
func (m *DisableSSLMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableSSLMultiResponse.Marshal(b, m, deterministic)
}
func (m *DisableSSLMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableSSLMultiResponse.Merge(m, src)
}
func (m *DisableSSLMultiResponse) XXX_Size() int {
	return xxx_messageInfo_DisableSSLMultiResponse.Size(m)
}
func (m *DisableSSLMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableSSLMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisableSSLMultiResponse proto.InternalMessageInfo

func (m *DisableSSLMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

func init() {
	proto.RegisterEnum("connect.ConnectionMode", ConnectionMode_name, ConnectionMode_value)
	proto.RegisterEnum("connect.Status", Status_name, Status_value)
	proto.RegisterType((*ConnectInfo)(nil), "connect.ConnectInfo")
	proto.RegisterType((*ConnectRequest)(nil), "connect.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "connect.ConnectResponse")
	proto.RegisterType((*AsyncConnectInfo)(nil), "connect.AsyncConnectInfo")
	proto.RegisterType((*AddAsyncConnectionRequest)(nil), "connect.AddAsyncConnectionRequest")
	proto.RegisterType((*AddAsyncConnectionResponse)(nil), "connect.AddAsyncConnectionResponse")
	proto.RegisterType((*DeleteAsyncConnectionRequest)(nil), "connect.DeleteAsyncConnectionRequest")
	proto.RegisterType((*DeleteAsyncConnectionResponse)(nil), "connect.DeleteAsyncConnectionResponse")
	proto.RegisterType((*AcceptFilter)(nil), "connect.AcceptFilter")
	proto.RegisterType((*SetAcceptFilterRequest)(nil), "connect.SetAcceptFilterRequest")
	proto.RegisterType((*SetAcceptFilterResponse)(nil), "connect.SetAcceptFilterResponse")
	proto.RegisterType((*GetAcceptFilterRequest)(nil), "connect.GetAcceptFilterRequest")
	proto.RegisterType((*GetAcceptFilterResponse)(nil), "connect.GetAcceptFilterResponse")
	proto.RegisterType((*PendingDeviceInfo)(nil), "connect.PendingDeviceInfo")
	proto.RegisterType((*GetPendingListRequest)(nil), "connect.GetPendingListRequest")
	proto.RegisterType((*GetPendingListResponse)(nil), "connect.GetPendingListResponse")
	proto.RegisterType((*DeviceInfo)(nil), "connect.DeviceInfo")
	proto.RegisterType((*GetDeviceListRequest)(nil), "connect.GetDeviceListRequest")
	proto.RegisterType((*GetDeviceListResponse)(nil), "connect.GetDeviceListResponse")
	proto.RegisterType((*DisconnectRequest)(nil), "connect.DisconnectRequest")
	proto.RegisterType((*DisconnectResponse)(nil), "connect.DisconnectResponse")
	proto.RegisterType((*DisconnectAllRequest)(nil), "connect.DisconnectAllRequest")
	proto.RegisterType((*DisconnectAllResponse)(nil), "connect.DisconnectAllResponse")
	proto.RegisterType((*SearchDeviceRequest)(nil), "connect.SearchDeviceRequest")
	proto.RegisterType((*SearchDeviceInfo)(nil), "connect.SearchDeviceInfo")
	proto.RegisterType((*SearchDeviceResponse)(nil), "connect.SearchDeviceResponse")
	proto.RegisterType((*SubscribeStatusRequest)(nil), "connect.SubscribeStatusRequest")
	proto.RegisterType((*StatusChange)(nil), "connect.StatusChange")
	proto.RegisterType((*SetConnectionModeRequest)(nil), "connect.SetConnectionModeRequest")
	proto.RegisterType((*SetConnectionModeResponse)(nil), "connect.SetConnectionModeResponse")
	proto.RegisterType((*SetConnectionModeMultiRequest)(nil), "connect.SetConnectionModeMultiRequest")
	proto.RegisterType((*SetConnectionModeMultiResponse)(nil), "connect.SetConnectionModeMultiResponse")
	proto.RegisterType((*EnableSSLRequest)(nil), "connect.EnableSSLRequest")
	proto.RegisterType((*EnableSSLResponse)(nil), "connect.EnableSSLResponse")
	proto.RegisterType((*EnableSSLMultiRequest)(nil), "connect.EnableSSLMultiRequest")
	proto.RegisterType((*EnableSSLMultiResponse)(nil), "connect.EnableSSLMultiResponse")
	proto.RegisterType((*DisableSSLRequest)(nil), "connect.DisableSSLRequest")
	proto.RegisterType((*DisableSSLResponse)(nil), "connect.DisableSSLResponse")
	proto.RegisterType((*DisableSSLMultiRequest)(nil), "connect.DisableSSLMultiRequest")
	proto.RegisterType((*DisableSSLMultiResponse)(nil), "connect.DisableSSLMultiResponse")
}

func init() { proto.RegisterFile("connect.proto", fileDescriptor_778b7e3040344da6) }

var fileDescriptor_778b7e3040344da6 = []byte{
	// 1324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x6d, 0x6f, 0xda, 0xd6,
	0x17, 0xaf, 0x81, 0x40, 0x39, 0x40, 0xe2, 0xdc, 0xf2, 0xe0, 0xb8, 0x49, 0xcb, 0xdf, 0xff, 0xad,
	0x8d, 0x2a, 0x95, 0x6c, 0x99, 0x9a, 0xbd, 0x58, 0xa7, 0x89, 0x02, 0xa5, 0x51, 0x09, 0xa1, 0x36,
	0xeb, 0xa6, 0x4a, 0x53, 0x65, 0xcc, 0x6d, 0x6b, 0x95, 0xd8, 0xd4, 0x0f, 0xab, 0xb2, 0x17, 0xd3,
	0x26, 0xed, 0xcd, 0xbe, 0xc4, 0xbe, 0xe2, 0xbe, 0xc0, 0x5e, 0x4c, 0xb6, 0xaf, 0xed, 0x6b, 0x73,
	0x4d, 0x92, 0x46, 0x7b, 0xe7, 0x7b, 0xce, 0xb9, 0xe7, 0xe9, 0x9e, 0x87, 0x1f, 0x40, 0x4d, 0x33,
	0x0d, 0x03, 0x6b, 0x4e, 0x67, 0x69, 0x99, 0x8e, 0x89, 0x4a, 0xe4, 0x28, 0x56, 0xe7, 0xf8, 0x67,
	0x5d, 0xc3, 0x01, 0x59, 0x2c, 0x63, 0xcb, 0x0a, 0x3e, 0xa5, 0x17, 0x50, 0xe9, 0x05, 0x32, 0xc7,
	0xc6, 0x1b, 0x13, 0x35, 0xa1, 0x78, 0x3c, 0xe9, 0xce, 0xe7, 0x96, 0xc0, 0xb5, 0xb9, 0xfd, 0xb2,
	0x4c, 0x4e, 0x08, 0x41, 0x61, 0x69, 0x5a, 0x8e, 0x90, 0x6b, 0x73, 0xfb, 0x1b, 0xb2, 0xff, 0xed,
	0xc9, 0xba, 0x36, 0x56, 0x94, 0x91, 0x90, 0x6f, 0x73, 0xfb, 0x37, 0x65, 0x72, 0x92, 0x9e, 0xc1,
	0x26, 0x51, 0x29, 0xe3, 0x0f, 0x2e, 0xb6, 0x1d, 0x74, 0x04, 0x15, 0x2d, 0x36, 0xe2, 0xab, 0xae,
	0x1c, 0xd6, 0x3b, 0xa1, 0xaf, 0x94, 0x03, 0x32, 0x2d, 0x28, 0x3d, 0x84, 0xad, 0x48, 0x93, 0xbd,
	0x34, 0x0d, 0x1b, 0x23, 0x11, 0x6e, 0x06, 0xa1, 0x1c, 0xf7, 0x7d, 0x3d, 0x35, 0x39, 0x3a, 0x4b,
	0x16, 0xf0, 0x5d, 0xfb, 0xdc, 0xd0, 0xe8, 0x80, 0xd6, 0xc8, 0x53, 0xc1, 0xe6, 0x98, 0xc1, 0xe6,
	0x99, 0xc1, 0x16, 0x12, 0xc1, 0xbe, 0x82, 0x9d, 0xee, 0x7c, 0x4e, 0x9b, 0xd5, 0x4d, 0x23, 0x8c,
	0xfb, 0x5b, 0xa8, 0x52, 0xe1, 0xd8, 0x02, 0xd7, 0xce, 0xef, 0x57, 0x0e, 0x77, 0xa2, 0xc0, 0xd3,
	0xde, 0xca, 0x09, 0x71, 0x69, 0x17, 0x44, 0x96, 0xee, 0x20, 0x13, 0xd2, 0x63, 0xd8, 0xed, 0xe3,
	0x05, 0x76, 0x70, 0x86, 0xf1, 0x5d, 0x28, 0x87, 0x91, 0x06, 0x96, 0x6b, 0x72, 0x4c, 0x90, 0xee,
	0xc2, 0x5e, 0xc6, 0x6d, 0xa2, 0xfe, 0x0f, 0x0e, 0xaa, 0x5d, 0x4d, 0xc3, 0x4b, 0xe7, 0xa9, 0xbe,
	0x70, 0xb0, 0xe5, 0x65, 0x52, 0x5d, 0x2c, 0xcc, 0x8f, 0xdd, 0xc5, 0xc2, 0xcf, 0xe4, 0x4d, 0x39,
	0x3a, 0x27, 0x6d, 0xe5, 0x52, 0xb6, 0x90, 0x00, 0xa5, 0x20, 0xb3, 0xb6, 0x90, 0x6f, 0xe7, 0xf7,
	0xcb, 0x72, 0x78, 0x44, 0x6d, 0xa8, 0xd8, 0xee, 0xcc, 0xc0, 0xce, 0x89, 0x6a, 0xbf, 0xb7, 0x85,
	0x82, 0xcf, 0xa5, 0x49, 0xd2, 0x10, 0x9a, 0x0a, 0x76, 0x68, 0x47, 0xc2, 0xf8, 0x1e, 0x42, 0xf1,
	0x8d, 0x4f, 0x20, 0xf5, 0xd4, 0x88, 0xd3, 0x4a, 0x4b, 0x13, 0x21, 0x69, 0x07, 0x5a, 0x2b, 0x8a,
	0x48, 0xa8, 0x02, 0x34, 0x87, 0x4c, 0x1b, 0xd2, 0x33, 0x68, 0x0d, 0xd9, 0x97, 0xae, 0x6a, 0x5e,
	0x85, 0xed, 0x09, 0x36, 0xe6, 0xba, 0xf1, 0xb6, 0x1f, 0xe4, 0xe5, 0x53, 0x8b, 0x53, 0x80, 0xd2,
	0x42, 0xb5, 0x9d, 0xa9, 0x75, 0xee, 0xd7, 0x67, 0x4d, 0x0e, 0x8f, 0x52, 0x0b, 0x1a, 0x43, 0xec,
	0x10, 0x2b, 0x23, 0xdd, 0x0e, 0xdb, 0x4f, 0x7a, 0xe9, 0xc7, 0x97, 0x60, 0x90, 0x20, 0x1e, 0x43,
	0x65, 0x1e, 0xb9, 0x13, 0xd6, 0xa7, 0x18, 0x45, 0xb2, 0xe2, 0xb1, 0x4c, 0x8b, 0x4b, 0xff, 0x70,
	0x00, 0x97, 0x8c, 0xe6, 0x3b, 0xd8, 0xd4, 0xa2, 0x1a, 0x3b, 0x31, 0xe7, 0xd8, 0x8f, 0x6a, 0xf3,
	0xb0, 0x95, 0x1e, 0x02, 0x84, 0x2d, 0xa7, 0xc4, 0xa9, 0x74, 0xe4, 0x99, 0xbd, 0x5a, 0xa0, 0x7a,
	0xf5, 0x3e, 0x14, 0x6d, 0x47, 0x75, 0x5c, 0x5b, 0xd8, 0xf0, 0x8d, 0x6c, 0x45, 0x46, 0x14, 0x9f,
	0x2c, 0x13, 0x36, 0xfa, 0x0c, 0x6a, 0xaa, 0xeb, 0x98, 0x32, 0x26, 0x7c, 0xa1, 0xe8, 0xd7, 0x75,
	0x92, 0x48, 0xb5, 0x7e, 0x29, 0xd1, 0xfa, 0x4d, 0xa8, 0x0f, 0xb1, 0x13, 0x24, 0x80, 0x4e, 0xf7,
	0xd8, 0x7f, 0x07, 0x9a, 0x4e, 0xb2, 0xfd, 0x88, 0x95, 0xed, 0x5b, 0x91, 0x73, 0x59, 0x69, 0xfe,
	0x12, 0xb6, 0xfb, 0xba, 0xad, 0x25, 0x47, 0xea, 0xfa, 0xee, 0xae, 0x03, 0xa2, 0xaf, 0x90, 0x3a,
	0x6f, 0x42, 0x3d, 0xa6, 0x76, 0x17, 0x8b, 0xd0, 0xe1, 0x16, 0x34, 0x52, 0x74, 0x72, 0xe1, 0x00,
	0x6e, 0x29, 0x58, 0xb5, 0xb4, 0x77, 0x81, 0x6b, 0xa1, 0x6d, 0x01, 0x4a, 0x8e, 0x7e, 0x86, 0x4d,
	0xd7, 0x21, 0xef, 0x1c, 0x1e, 0xa5, 0xbf, 0x39, 0xe0, 0xe9, 0x1b, 0x17, 0xd6, 0x45, 0x1b, 0x0a,
	0xce, 0xf9, 0x32, 0xac, 0x86, 0x6a, 0x87, 0xac, 0xa9, 0xe9, 0xf9, 0x12, 0xcb, 0x3e, 0xc7, 0x33,
	0xe6, 0xda, 0xb8, 0xff, 0xac, 0x37, 0x21, 0x6b, 0x26, 0x3c, 0x32, 0x6a, 0xaa, 0xf0, 0xa9, 0x35,
	0xb5, 0xc1, 0xac, 0xa9, 0x22, 0x73, 0xfe, 0x27, 0x8b, 0x40, 0x81, 0x7a, 0x32, 0x45, 0xe4, 0xad,
	0xbf, 0x61, 0xbd, 0x75, 0x3c, 0xf9, 0xd3, 0x49, 0x4a, 0xbe, 0xf8, 0x11, 0x34, 0x15, 0x77, 0x66,
	0x6b, 0x96, 0x3e, 0xc3, 0xa4, 0x64, 0xe3, 0x67, 0xff, 0xe0, 0x62, 0x17, 0x2b, 0xfa, 0x2f, 0xd8,
	0x4f, 0xe6, 0x86, 0x1c, 0x13, 0xa4, 0x0f, 0x50, 0x0d, 0xc4, 0x7b, 0xef, 0x54, 0xe3, 0xed, 0xda,
	0x65, 0x49, 0x35, 0x49, 0x6e, 0x7d, 0x93, 0xec, 0x42, 0xd9, 0x7b, 0x5e, 0xdb, 0x51, 0xcf, 0x96,
	0x64, 0xe4, 0xc4, 0x04, 0xe9, 0x23, 0x08, 0x0a, 0x76, 0x52, 0x89, 0x26, 0xce, 0xfe, 0x97, 0x03,
	0x41, 0xba, 0x0d, 0x3b, 0x0c, 0xc3, 0xa4, 0x70, 0x7f, 0x85, 0xbd, 0x15, 0xe6, 0x89, 0xbb, 0x70,
	0xf4, 0x4b, 0xb5, 0xcf, 0xf5, 0x9d, 0xfb, 0x11, 0xee, 0x64, 0xd9, 0x27, 0xf5, 0x71, 0x04, 0x04,
	0x92, 0x0d, 0x2c, 0xcb, 0xb4, 0xc2, 0x02, 0x41, 0x1d, 0x0f, 0x99, 0xf9, 0xa4, 0x50, 0x52, 0x4e,
	0xc8, 0x49, 0x1d, 0xe0, 0x07, 0x86, 0x3a, 0x5b, 0x78, 0xc5, 0x77, 0x89, 0x3c, 0x4b, 0xb7, 0x60,
	0x9b, 0x92, 0x27, 0xe9, 0x79, 0x04, 0x8d, 0x88, 0x78, 0xf9, 0xb4, 0x48, 0x13, 0x68, 0xa6, 0xaf,
	0x5d, 0x33, 0x9a, 0x03, 0x7f, 0xb4, 0x5d, 0x21, 0x9c, 0x60, 0xb0, 0xa5, 0xe3, 0x39, 0x82, 0x66,
	0x4c, 0xbd, 0x42, 0x40, 0x2f, 0xa0, 0xb5, 0x72, 0xef, 0x7a, 0x11, 0x3d, 0x38, 0x89, 0xc0, 0x6f,
	0x38, 0x65, 0xea, 0xc0, 0x2b, 0x03, 0xf9, 0xe5, 0x40, 0x7e, 0x3d, 0x3d, 0x7d, 0xdd, 0x1f, 0xbc,
	0x3c, 0xee, 0x0d, 0xf8, 0x1b, 0x1e, 0x35, 0xf8, 0xf6, 0xa8, 0x01, 0x9f, 0xe7, 0x50, 0x05, 0x4a,
	0xfd, 0xc1, 0xd3, 0xee, 0xf7, 0xa3, 0x29, 0x7f, 0x43, 0xcc, 0xf1, 0xdc, 0x83, 0xbf, 0x38, 0x28,
	0x06, 0xfd, 0x88, 0x78, 0xa8, 0xf6, 0x8f, 0x95, 0xde, 0xe9, 0x78, 0x3c, 0xe8, 0x4d, 0x07, 0x7d,
	0xfe, 0x06, 0xda, 0x86, 0xda, 0xb4, 0x37, 0x79, 0x1d, 0x93, 0x38, 0x9f, 0x34, 0x52, 0x28, 0x52,
	0x0e, 0xb5, 0x00, 0xf9, 0x52, 0xdd, 0xf1, 0xf8, 0x74, 0x1a, 0x72, 0xf8, 0xdf, 0x72, 0xa8, 0x0e,
	0x5b, 0x1e, 0xc3, 0xa3, 0x76, 0x47, 0xa3, 0xd3, 0x1f, 0x06, 0x7d, 0xfe, 0xf7, 0x40, 0xdc, 0xd3,
	0x90, 0x12, 0x2f, 0xf8, 0xe2, 0x23, 0x25, 0x29, 0x5e, 0x38, 0xfc, 0xb3, 0x02, 0x25, 0x12, 0x30,
	0x7a, 0x1c, 0x7f, 0xae, 0x74, 0x0a, 0x79, 0x10, 0x51, 0x58, 0x65, 0x90, 0x8c, 0xff, 0x04, 0x68,
	0x15, 0xed, 0x22, 0x29, 0x86, 0x55, 0x59, 0x30, 0x5b, 0xfc, 0xff, 0x5a, 0x19, 0xa2, 0xfe, 0x0d,
	0x34, 0x98, 0x80, 0x17, 0x7d, 0x4e, 0x2d, 0xe0, 0x6c, 0x38, 0x2d, 0xde, 0xbb, 0x48, 0x8c, 0xd8,
	0x99, 0xc2, 0x56, 0x0a, 0x67, 0xa2, 0xbb, 0xd4, 0xd8, 0x67, 0xc1, 0x4c, 0xb1, 0x9d, 0x2d, 0x10,
	0x6b, 0x1d, 0x66, 0x6a, 0x1d, 0x5e, 0xa4, 0x35, 0x0b, 0xc3, 0xbe, 0x80, 0xcd, 0x24, 0x30, 0x44,
	0x77, 0xe8, 0x3b, 0xab, 0x50, 0x52, 0xbc, 0x9b, 0xc9, 0x27, 0x2a, 0xc7, 0x50, 0x4b, 0x80, 0x1f,
	0xb4, 0x47, 0xdf, 0x58, 0x01, 0x4b, 0xe2, 0x9d, 0x2c, 0x36, 0xd1, 0x37, 0x00, 0x88, 0xb1, 0x09,
	0x8a, 0xa1, 0xe9, 0x0a, 0x22, 0x12, 0x6f, 0x33, 0x79, 0xb1, 0x5b, 0x09, 0x88, 0x43, 0xb9, 0xc5,
	0x82, 0x44, 0x94, 0x5b, 0x4c, 0x64, 0x84, 0x9e, 0x43, 0x95, 0x5e, 0xe1, 0x68, 0x97, 0xb9, 0xd9,
	0x43, 0x6d, 0x7b, 0x19, 0x5c, 0xa2, 0xec, 0x15, 0x6c, 0xaf, 0x6c, 0x0b, 0xf4, 0x3f, 0xba, 0x26,
	0x98, 0xfb, 0x55, 0x94, 0xd6, 0x89, 0x10, 0xdd, 0xba, 0xff, 0xfb, 0x89, 0xb1, 0x89, 0xd0, 0xbd,
	0xec, 0xdb, 0xf4, 0x08, 0x15, 0xef, 0x5f, 0x28, 0x47, 0x4c, 0x3d, 0x81, 0x72, 0xb4, 0x1e, 0x50,
	0x0c, 0x75, 0xd2, 0xeb, 0x4a, 0x14, 0x59, 0xac, 0xb8, 0x22, 0x93, 0x2b, 0x86, 0xaa, 0x48, 0xe6,
	0xca, 0xa2, 0x2a, 0x32, 0x63, 0x37, 0x05, 0x15, 0x14, 0xfa, 0x95, 0xa8, 0xa0, 0x94, 0x63, 0xb7,
	0x99, 0xbc, 0xb8, 0x03, 0x53, 0xbb, 0x82, 0xea, 0x40, 0xf6, 0xf6, 0xa1, 0x3a, 0x30, 0x6b, 0xcd,
	0x3c, 0x87, 0xad, 0x14, 0xd2, 0xa3, 0xa7, 0x05, 0x13, 0x03, 0x8a, 0x8d, 0x14, 0x52, 0x0b, 0xc0,
	0xde, 0x17, 0xdc, 0x93, 0xaf, 0x41, 0xd4, 0xcc, 0xb3, 0x8e, 0xed, 0x2e, 0x2d, 0x7c, 0xa6, 0xea,
	0x86, 0xd6, 0xb1, 0xe7, 0xef, 0x43, 0xe1, 0x09, 0xf7, 0xaa, 0x35, 0xd3, 0x4d, 0xdb, 0x51, 0xad,
	0x03, 0x1b, 0x5b, 0x5e, 0x01, 0x1e, 0x10, 0xd6, 0xac, 0xe8, 0xff, 0x17, 0xf4, 0xd5, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xd2, 0x7a, 0x4b, 0xdd, 0x3e, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConnectClient is the client API for Connect service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	AddAsyncConnection(ctx context.Context, in *AddAsyncConnectionRequest, opts ...grpc.CallOption) (*AddAsyncConnectionResponse, error)
	DeleteAsyncConnection(ctx context.Context, in *DeleteAsyncConnectionRequest, opts ...grpc.CallOption) (*DeleteAsyncConnectionResponse, error)
	SetAcceptFilter(ctx context.Context, in *SetAcceptFilterRequest, opts ...grpc.CallOption) (*SetAcceptFilterResponse, error)
	GetAcceptFilter(ctx context.Context, in *GetAcceptFilterRequest, opts ...grpc.CallOption) (*GetAcceptFilterResponse, error)
	GetPendingList(ctx context.Context, in *GetPendingListRequest, opts ...grpc.CallOption) (*GetPendingListResponse, error)
	GetDeviceList(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error)
	DisconnectAll(ctx context.Context, in *DisconnectAllRequest, opts ...grpc.CallOption) (*DisconnectAllResponse, error)
	SearchDevice(ctx context.Context, in *SearchDeviceRequest, opts ...grpc.CallOption) (*SearchDeviceResponse, error)
	SetConnectionMode(ctx context.Context, in *SetConnectionModeRequest, opts ...grpc.CallOption) (*SetConnectionModeResponse, error)
	SetConnectionModeMulti(ctx context.Context, in *SetConnectionModeMultiRequest, opts ...grpc.CallOption) (*SetConnectionModeMultiResponse, error)
	EnableSSL(ctx context.Context, in *EnableSSLRequest, opts ...grpc.CallOption) (*EnableSSLResponse, error)
	EnableSSLMulti(ctx context.Context, in *EnableSSLMultiRequest, opts ...grpc.CallOption) (*EnableSSLMultiResponse, error)
	DisableSSL(ctx context.Context, in *DisableSSLRequest, opts ...grpc.CallOption) (*DisableSSLResponse, error)
	DisableSSLMulti(ctx context.Context, in *DisableSSLMultiRequest, opts ...grpc.CallOption) (*DisableSSLMultiResponse, error)
	SubscribeStatus(ctx context.Context, in *SubscribeStatusRequest, opts ...grpc.CallOption) (Connect_SubscribeStatusClient, error)
}

type connectClient struct {
	cc *grpc.ClientConn
}

func NewConnectClient(cc *grpc.ClientConn) ConnectClient {
	return &connectClient{cc}
}

func (c *connectClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) AddAsyncConnection(ctx context.Context, in *AddAsyncConnectionRequest, opts ...grpc.CallOption) (*AddAsyncConnectionResponse, error) {
	out := new(AddAsyncConnectionResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/AddAsyncConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) DeleteAsyncConnection(ctx context.Context, in *DeleteAsyncConnectionRequest, opts ...grpc.CallOption) (*DeleteAsyncConnectionResponse, error) {
	out := new(DeleteAsyncConnectionResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/DeleteAsyncConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) SetAcceptFilter(ctx context.Context, in *SetAcceptFilterRequest, opts ...grpc.CallOption) (*SetAcceptFilterResponse, error) {
	out := new(SetAcceptFilterResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/SetAcceptFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) GetAcceptFilter(ctx context.Context, in *GetAcceptFilterRequest, opts ...grpc.CallOption) (*GetAcceptFilterResponse, error) {
	out := new(GetAcceptFilterResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/GetAcceptFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) GetPendingList(ctx context.Context, in *GetPendingListRequest, opts ...grpc.CallOption) (*GetPendingListResponse, error) {
	out := new(GetPendingListResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/GetPendingList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) GetDeviceList(ctx context.Context, in *GetDeviceListRequest, opts ...grpc.CallOption) (*GetDeviceListResponse, error) {
	out := new(GetDeviceListResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/GetDeviceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error) {
	out := new(DisconnectResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) DisconnectAll(ctx context.Context, in *DisconnectAllRequest, opts ...grpc.CallOption) (*DisconnectAllResponse, error) {
	out := new(DisconnectAllResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/DisconnectAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) SearchDevice(ctx context.Context, in *SearchDeviceRequest, opts ...grpc.CallOption) (*SearchDeviceResponse, error) {
	out := new(SearchDeviceResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/SearchDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) SetConnectionMode(ctx context.Context, in *SetConnectionModeRequest, opts ...grpc.CallOption) (*SetConnectionModeResponse, error) {
	out := new(SetConnectionModeResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/SetConnectionMode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) SetConnectionModeMulti(ctx context.Context, in *SetConnectionModeMultiRequest, opts ...grpc.CallOption) (*SetConnectionModeMultiResponse, error) {
	out := new(SetConnectionModeMultiResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/SetConnectionModeMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) EnableSSL(ctx context.Context, in *EnableSSLRequest, opts ...grpc.CallOption) (*EnableSSLResponse, error) {
	out := new(EnableSSLResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/EnableSSL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) EnableSSLMulti(ctx context.Context, in *EnableSSLMultiRequest, opts ...grpc.CallOption) (*EnableSSLMultiResponse, error) {
	out := new(EnableSSLMultiResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/EnableSSLMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) DisableSSL(ctx context.Context, in *DisableSSLRequest, opts ...grpc.CallOption) (*DisableSSLResponse, error) {
	out := new(DisableSSLResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/DisableSSL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) DisableSSLMulti(ctx context.Context, in *DisableSSLMultiRequest, opts ...grpc.CallOption) (*DisableSSLMultiResponse, error) {
	out := new(DisableSSLMultiResponse)
	err := c.cc.Invoke(ctx, "/connect.Connect/DisableSSLMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectClient) SubscribeStatus(ctx context.Context, in *SubscribeStatusRequest, opts ...grpc.CallOption) (Connect_SubscribeStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Connect_serviceDesc.Streams[0], "/connect.Connect/SubscribeStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &connectSubscribeStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Connect_SubscribeStatusClient interface {
	Recv() (*StatusChange, error)
	grpc.ClientStream
}

type connectSubscribeStatusClient struct {
	grpc.ClientStream
}

func (x *connectSubscribeStatusClient) Recv() (*StatusChange, error) {
	m := new(StatusChange)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConnectServer is the server API for Connect service.
type ConnectServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	AddAsyncConnection(context.Context, *AddAsyncConnectionRequest) (*AddAsyncConnectionResponse, error)
	DeleteAsyncConnection(context.Context, *DeleteAsyncConnectionRequest) (*DeleteAsyncConnectionResponse, error)
	SetAcceptFilter(context.Context, *SetAcceptFilterRequest) (*SetAcceptFilterResponse, error)
	GetAcceptFilter(context.Context, *GetAcceptFilterRequest) (*GetAcceptFilterResponse, error)
	GetPendingList(context.Context, *GetPendingListRequest) (*GetPendingListResponse, error)
	GetDeviceList(context.Context, *GetDeviceListRequest) (*GetDeviceListResponse, error)
	Disconnect(context.Context, *DisconnectRequest) (*DisconnectResponse, error)
	DisconnectAll(context.Context, *DisconnectAllRequest) (*DisconnectAllResponse, error)
	SearchDevice(context.Context, *SearchDeviceRequest) (*SearchDeviceResponse, error)
	SetConnectionMode(context.Context, *SetConnectionModeRequest) (*SetConnectionModeResponse, error)
	SetConnectionModeMulti(context.Context, *SetConnectionModeMultiRequest) (*SetConnectionModeMultiResponse, error)
	EnableSSL(context.Context, *EnableSSLRequest) (*EnableSSLResponse, error)
	EnableSSLMulti(context.Context, *EnableSSLMultiRequest) (*EnableSSLMultiResponse, error)
	DisableSSL(context.Context, *DisableSSLRequest) (*DisableSSLResponse, error)
	DisableSSLMulti(context.Context, *DisableSSLMultiRequest) (*DisableSSLMultiResponse, error)
	SubscribeStatus(*SubscribeStatusRequest, Connect_SubscribeStatusServer) error
}

func RegisterConnectServer(s *grpc.Server, srv ConnectServer) {
	s.RegisterService(&_Connect_serviceDesc, srv)
}

func _Connect_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_AddAsyncConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAsyncConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).AddAsyncConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/AddAsyncConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).AddAsyncConnection(ctx, req.(*AddAsyncConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_DeleteAsyncConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAsyncConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).DeleteAsyncConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/DeleteAsyncConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).DeleteAsyncConnection(ctx, req.(*DeleteAsyncConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_SetAcceptFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAcceptFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).SetAcceptFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/SetAcceptFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).SetAcceptFilter(ctx, req.(*SetAcceptFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_GetAcceptFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAcceptFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).GetAcceptFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/GetAcceptFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).GetAcceptFilter(ctx, req.(*GetAcceptFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_GetPendingList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPendingListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).GetPendingList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/GetPendingList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).GetPendingList(ctx, req.(*GetPendingListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_GetDeviceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).GetDeviceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/GetDeviceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).GetDeviceList(ctx, req.(*GetDeviceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).Disconnect(ctx, req.(*DisconnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_DisconnectAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).DisconnectAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/DisconnectAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).DisconnectAll(ctx, req.(*DisconnectAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_SearchDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).SearchDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/SearchDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).SearchDevice(ctx, req.(*SearchDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_SetConnectionMode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConnectionModeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).SetConnectionMode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/SetConnectionMode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).SetConnectionMode(ctx, req.(*SetConnectionModeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_SetConnectionModeMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConnectionModeMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).SetConnectionModeMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/SetConnectionModeMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).SetConnectionModeMulti(ctx, req.(*SetConnectionModeMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_EnableSSL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableSSLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).EnableSSL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/EnableSSL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).EnableSSL(ctx, req.(*EnableSSLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_EnableSSLMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableSSLMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).EnableSSLMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/EnableSSLMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).EnableSSLMulti(ctx, req.(*EnableSSLMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_DisableSSL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableSSLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).DisableSSL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/DisableSSL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).DisableSSL(ctx, req.(*DisableSSLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_DisableSSLMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableSSLMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectServer).DisableSSLMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connect.Connect/DisableSSLMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectServer).DisableSSLMulti(ctx, req.(*DisableSSLMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Connect_SubscribeStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConnectServer).SubscribeStatus(m, &connectSubscribeStatusServer{stream})
}

type Connect_SubscribeStatusServer interface {
	Send(*StatusChange) error
	grpc.ServerStream
}

type connectSubscribeStatusServer struct {
	grpc.ServerStream
}

func (x *connectSubscribeStatusServer) Send(m *StatusChange) error {
	return x.ServerStream.SendMsg(m)
}

var _Connect_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connect.Connect",
	HandlerType: (*ConnectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Connect_Connect_Handler,
		},
		{
			MethodName: "AddAsyncConnection",
			Handler:    _Connect_AddAsyncConnection_Handler,
		},
		{
			MethodName: "DeleteAsyncConnection",
			Handler:    _Connect_DeleteAsyncConnection_Handler,
		},
		{
			MethodName: "SetAcceptFilter",
			Handler:    _Connect_SetAcceptFilter_Handler,
		},
		{
			MethodName: "GetAcceptFilter",
			Handler:    _Connect_GetAcceptFilter_Handler,
		},
		{
			MethodName: "GetPendingList",
			Handler:    _Connect_GetPendingList_Handler,
		},
		{
			MethodName: "GetDeviceList",
			Handler:    _Connect_GetDeviceList_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Connect_Disconnect_Handler,
		},
		{
			MethodName: "DisconnectAll",
			Handler:    _Connect_DisconnectAll_Handler,
		},
		{
			MethodName: "SearchDevice",
			Handler:    _Connect_SearchDevice_Handler,
		},
		{
			MethodName: "SetConnectionMode",
			Handler:    _Connect_SetConnectionMode_Handler,
		},
		{
			MethodName: "SetConnectionModeMulti",
			Handler:    _Connect_SetConnectionModeMulti_Handler,
		},
		{
			MethodName: "EnableSSL",
			Handler:    _Connect_EnableSSL_Handler,
		},
		{
			MethodName: "EnableSSLMulti",
			Handler:    _Connect_EnableSSLMulti_Handler,
		},
		{
			MethodName: "DisableSSL",
			Handler:    _Connect_DisableSSL_Handler,
		},
		{
			MethodName: "DisableSSLMulti",
			Handler:    _Connect_DisableSSLMulti_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeStatus",
			Handler:       _Connect_SubscribeStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "connect.proto",
}
