// Code generated by protoc-gen-go. DO NOT EDIT.
// source: finger.proto

package finger

import (
	err "biostar/service/err"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TemplateFormat int32

const (
	TemplateFormat_TEMPLATE_FORMAT_SUPREMA TemplateFormat = 0
	TemplateFormat_TEMPLATE_FORMAT_ISO     TemplateFormat = 1
	TemplateFormat_TEMPLATE_FORMAT_ANSI    TemplateFormat = 2
)

var TemplateFormat_name = map[int32]string{
	0: "TEMPLATE_FORMAT_SUPREMA",
	1: "TEMPLATE_FORMAT_ISO",
	2: "TEMPLATE_FORMAT_ANSI",
}

var TemplateFormat_value = map[string]int32{
	"TEMPLATE_FORMAT_SUPREMA": 0,
	"TEMPLATE_FORMAT_ISO":     1,
	"TEMPLATE_FORMAT_ANSI":    2,
}

func (x TemplateFormat) String() string {
	return proto.EnumName(TemplateFormat_name, int32(x))
}

func (TemplateFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{0}
}

type SecurityLevel int32

const (
	SecurityLevel_SECURE           SecurityLevel = 0
	SecurityLevel_MORE_SECURE      SecurityLevel = 1
	SecurityLevel_MOST_SECURE      SecurityLevel = 2
	SecurityLevel_DEFAULT_SECURITY SecurityLevel = 0
)

var SecurityLevel_name = map[int32]string{
	0: "SECURE",
	1: "MORE_SECURE",
	2: "MOST_SECURE",
	// Duplicate value: 0: "DEFAULT_SECURITY",
}

var SecurityLevel_value = map[string]int32{
	"SECURE":           0,
	"MORE_SECURE":      1,
	"MOST_SECURE":      2,
	"DEFAULT_SECURITY": 0,
}

func (x SecurityLevel) String() string {
	return proto.EnumName(SecurityLevel_name, int32(x))
}

func (SecurityLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{1}
}

type FastMode int32

const (
	FastMode_AUTOMATIC    FastMode = 0
	FastMode_FAST         FastMode = 1
	FastMode_FASTER       FastMode = 2
	FastMode_FASTEST      FastMode = 3
	FastMode_DEFAULT_FAST FastMode = 0
)

var FastMode_name = map[int32]string{
	0: "AUTOMATIC",
	1: "FAST",
	2: "FASTER",
	3: "FASTEST",
	// Duplicate value: 0: "DEFAULT_FAST",
}

var FastMode_value = map[string]int32{
	"AUTOMATIC":    0,
	"FAST":         1,
	"FASTER":       2,
	"FASTEST":      3,
	"DEFAULT_FAST": 0,
}

func (x FastMode) String() string {
	return proto.EnumName(FastMode_name, int32(x))
}

func (FastMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{2}
}

type Sensitivity int32

const (
	Sensitivity_LOWEST_SENSITIVE  Sensitivity = 0
	Sensitivity_LEVEL0_SENSITIVE  Sensitivity = 0
	Sensitivity_LEVEL1_SENSITIVE  Sensitivity = 1
	Sensitivity_LEVEL2_SENSITIVE  Sensitivity = 2
	Sensitivity_LEVEL3_SENSITIVE  Sensitivity = 3
	Sensitivity_LEVEL4_SENSITIVE  Sensitivity = 4
	Sensitivity_LEVEL5_SENSITIVE  Sensitivity = 5
	Sensitivity_LEVEL6_SENSITIVE  Sensitivity = 6
	Sensitivity_LEVEL7_SENSITIVE  Sensitivity = 7
	Sensitivity_HIGHEST_SENSITIVE Sensitivity = 7
	Sensitivity_DEFAULT_SENSITITY Sensitivity = 7
)

var Sensitivity_name = map[int32]string{
	0: "LOWEST_SENSITIVE",
	// Duplicate value: 0: "LEVEL0_SENSITIVE",
	1: "LEVEL1_SENSITIVE",
	2: "LEVEL2_SENSITIVE",
	3: "LEVEL3_SENSITIVE",
	4: "LEVEL4_SENSITIVE",
	5: "LEVEL5_SENSITIVE",
	6: "LEVEL6_SENSITIVE",
	7: "LEVEL7_SENSITIVE",
	// Duplicate value: 7: "HIGHEST_SENSITIVE",
	// Duplicate value: 7: "DEFAULT_SENSITITY",
}

var Sensitivity_value = map[string]int32{
	"LOWEST_SENSITIVE":  0,
	"LEVEL0_SENSITIVE":  0,
	"LEVEL1_SENSITIVE":  1,
	"LEVEL2_SENSITIVE":  2,
	"LEVEL3_SENSITIVE":  3,
	"LEVEL4_SENSITIVE":  4,
	"LEVEL5_SENSITIVE":  5,
	"LEVEL6_SENSITIVE":  6,
	"LEVEL7_SENSITIVE":  7,
	"HIGHEST_SENSITIVE": 7,
	"DEFAULT_SENSITITY": 7,
}

func (x Sensitivity) String() string {
	return proto.EnumName(Sensitivity_name, int32(x))
}

func (Sensitivity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{3}
}

type SensorMode int32

const (
	SensorMode_ALWAYS_ON              SensorMode = 0
	SensorMode_ACTIVATED_BY_PROXIMITY SensorMode = 1
	SensorMode_DEFAULT_SENSOR_MODE    SensorMode = 0
)

var SensorMode_name = map[int32]string{
	0: "ALWAYS_ON",
	1: "ACTIVATED_BY_PROXIMITY",
	// Duplicate value: 0: "DEFAULT_SENSOR_MODE",
}

var SensorMode_value = map[string]int32{
	"ALWAYS_ON":              0,
	"ACTIVATED_BY_PROXIMITY": 1,
	"DEFAULT_SENSOR_MODE":    0,
}

func (x SensorMode) String() string {
	return proto.EnumName(SensorMode_name, int32(x))
}

func (SensorMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{4}
}

type LFDLevel int32

const (
	LFDLevel_NOT_USED    LFDLevel = 0
	LFDLevel_STRICT      LFDLevel = 1
	LFDLevel_MORE_STRICT LFDLevel = 2
	LFDLevel_MOST_STRICT LFDLevel = 3
	LFDLevel_DEFAULT_LFD LFDLevel = 0
)

var LFDLevel_name = map[int32]string{
	0: "NOT_USED",
	1: "STRICT",
	2: "MORE_STRICT",
	3: "MOST_STRICT",
	// Duplicate value: 0: "DEFAULT_LFD",
}

var LFDLevel_value = map[string]int32{
	"NOT_USED":    0,
	"STRICT":      1,
	"MORE_STRICT": 2,
	"MOST_STRICT": 3,
	"DEFAULT_LFD": 0,
}

func (x LFDLevel) String() string {
	return proto.EnumName(LFDLevel_name, int32(x))
}

func (LFDLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{5}
}

type FingerData struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Flag                 uint32   `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	Templates            [][]byte `protobuf:"bytes,3,rep,name=templates,proto3" json:"templates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FingerData) Reset()         { *m = FingerData{} }
func (m *FingerData) String() string { return proto.CompactTextString(m) }
func (*FingerData) ProtoMessage()    {}
func (*FingerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{0}
}

func (m *FingerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FingerData.Unmarshal(m, b)
}
func (m *FingerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FingerData.Marshal(b, m, deterministic)
}
func (m *FingerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FingerData.Merge(m, src)
}
func (m *FingerData) XXX_Size() int {
	return xxx_messageInfo_FingerData.Size(m)
}
func (m *FingerData) XXX_DiscardUnknown() {
	xxx_messageInfo_FingerData.DiscardUnknown(m)
}

var xxx_messageInfo_FingerData proto.InternalMessageInfo

func (m *FingerData) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *FingerData) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *FingerData) GetTemplates() [][]byte {
	if m != nil {
		return m.Templates
	}
	return nil
}

type ScanRequest struct {
	DeviceID             uint32         `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	TemplateFormat       TemplateFormat `protobuf:"varint,2,opt,name=templateFormat,proto3,enum=finger.TemplateFormat" json:"templateFormat,omitempty"`
	QualityThreshold     uint32         `protobuf:"varint,3,opt,name=qualityThreshold,proto3" json:"qualityThreshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{1}
}

func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (m *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(m, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *ScanRequest) GetTemplateFormat() TemplateFormat {
	if m != nil {
		return m.TemplateFormat
	}
	return TemplateFormat_TEMPLATE_FORMAT_SUPREMA
}

func (m *ScanRequest) GetQualityThreshold() uint32 {
	if m != nil {
		return m.QualityThreshold
	}
	return 0
}

type ScanResponse struct {
	TemplateData         []byte   `protobuf:"bytes,1,opt,name=templateData,proto3" json:"templateData,omitempty"`
	QualityScore         uint32   `protobuf:"varint,2,opt,name=qualityScore,proto3" json:"qualityScore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanResponse) Reset()         { *m = ScanResponse{} }
func (m *ScanResponse) String() string { return proto.CompactTextString(m) }
func (*ScanResponse) ProtoMessage()    {}
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{2}
}

func (m *ScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanResponse.Unmarshal(m, b)
}
func (m *ScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanResponse.Marshal(b, m, deterministic)
}
func (m *ScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanResponse.Merge(m, src)
}
func (m *ScanResponse) XXX_Size() int {
	return xxx_messageInfo_ScanResponse.Size(m)
}
func (m *ScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScanResponse proto.InternalMessageInfo

func (m *ScanResponse) GetTemplateData() []byte {
	if m != nil {
		return m.TemplateData
	}
	return nil
}

func (m *ScanResponse) GetQualityScore() uint32 {
	if m != nil {
		return m.QualityScore
	}
	return 0
}

type GetImageRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageRequest) Reset()         { *m = GetImageRequest{} }
func (m *GetImageRequest) String() string { return proto.CompactTextString(m) }
func (*GetImageRequest) ProtoMessage()    {}
func (*GetImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{3}
}

func (m *GetImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageRequest.Unmarshal(m, b)
}
func (m *GetImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageRequest.Marshal(b, m, deterministic)
}
func (m *GetImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageRequest.Merge(m, src)
}
func (m *GetImageRequest) XXX_Size() int {
	return xxx_messageInfo_GetImageRequest.Size(m)
}
func (m *GetImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageRequest proto.InternalMessageInfo

func (m *GetImageRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetImageResponse struct {
	BMPImage             []byte   `protobuf:"bytes,1,opt,name=BMPImage,proto3" json:"BMPImage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageResponse) Reset()         { *m = GetImageResponse{} }
func (m *GetImageResponse) String() string { return proto.CompactTextString(m) }
func (*GetImageResponse) ProtoMessage()    {}
func (*GetImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{4}
}

func (m *GetImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageResponse.Unmarshal(m, b)
}
func (m *GetImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageResponse.Marshal(b, m, deterministic)
}
func (m *GetImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageResponse.Merge(m, src)
}
func (m *GetImageResponse) XXX_Size() int {
	return xxx_messageInfo_GetImageResponse.Size(m)
}
func (m *GetImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageResponse proto.InternalMessageInfo

func (m *GetImageResponse) GetBMPImage() []byte {
	if m != nil {
		return m.BMPImage
	}
	return nil
}

type VerifyRequest struct {
	DeviceID             uint32      `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	FingerData           *FingerData `protobuf:"bytes,2,opt,name=fingerData,proto3" json:"fingerData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VerifyRequest) Reset()         { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()    {}
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{5}
}

func (m *VerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequest.Unmarshal(m, b)
}
func (m *VerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequest.Marshal(b, m, deterministic)
}
func (m *VerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequest.Merge(m, src)
}
func (m *VerifyRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyRequest.Size(m)
}
func (m *VerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequest proto.InternalMessageInfo

func (m *VerifyRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *VerifyRequest) GetFingerData() *FingerData {
	if m != nil {
		return m.FingerData
	}
	return nil
}

type VerifyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyResponse) Reset()         { *m = VerifyResponse{} }
func (m *VerifyResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyResponse) ProtoMessage()    {}
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{6}
}

func (m *VerifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyResponse.Unmarshal(m, b)
}
func (m *VerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyResponse.Marshal(b, m, deterministic)
}
func (m *VerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyResponse.Merge(m, src)
}
func (m *VerifyResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyResponse.Size(m)
}
func (m *VerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyResponse proto.InternalMessageInfo

type GetConfigRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigRequest) Reset()         { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()    {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{7}
}

func (m *GetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigRequest.Unmarshal(m, b)
}
func (m *GetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigRequest.Merge(m, src)
}
func (m *GetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigRequest.Size(m)
}
func (m *GetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigRequest proto.InternalMessageInfo

func (m *GetConfigRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetConfigResponse struct {
	Config               *FingerConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetConfigResponse) Reset()         { *m = GetConfigResponse{} }
func (m *GetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigResponse) ProtoMessage()    {}
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{8}
}

func (m *GetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResponse.Unmarshal(m, b)
}
func (m *GetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResponse.Merge(m, src)
}
func (m *GetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigResponse.Size(m)
}
func (m *GetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResponse proto.InternalMessageInfo

func (m *GetConfigResponse) GetConfig() *FingerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigRequest struct {
	DeviceID             uint32        `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Config               *FingerConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetConfigRequest) Reset()         { *m = SetConfigRequest{} }
func (m *SetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest) ProtoMessage()    {}
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{9}
}

func (m *SetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest.Unmarshal(m, b)
}
func (m *SetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest.Merge(m, src)
}
func (m *SetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest.Size(m)
}
func (m *SetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest proto.InternalMessageInfo

func (m *SetConfigRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetConfigRequest) GetConfig() *FingerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigResponse) Reset()         { *m = SetConfigResponse{} }
func (m *SetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*SetConfigResponse) ProtoMessage()    {}
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{10}
}

func (m *SetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigResponse.Unmarshal(m, b)
}
func (m *SetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigResponse.Marshal(b, m, deterministic)
}
func (m *SetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigResponse.Merge(m, src)
}
func (m *SetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_SetConfigResponse.Size(m)
}
func (m *SetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigResponse proto.InternalMessageInfo

type SetConfigMultiRequest struct {
	DeviceIDs            []uint32      `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Config               *FingerConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetConfigMultiRequest) Reset()         { *m = SetConfigMultiRequest{} }
func (m *SetConfigMultiRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigMultiRequest) ProtoMessage()    {}
func (*SetConfigMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{11}
}

func (m *SetConfigMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigMultiRequest.Unmarshal(m, b)
}
func (m *SetConfigMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigMultiRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigMultiRequest.Merge(m, src)
}
func (m *SetConfigMultiRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigMultiRequest.Size(m)
}
func (m *SetConfigMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigMultiRequest proto.InternalMessageInfo

func (m *SetConfigMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *SetConfigMultiRequest) GetConfig() *FingerConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetConfigMultiResponse) Reset()         { *m = SetConfigMultiResponse{} }
func (m *SetConfigMultiResponse) String() string { return proto.CompactTextString(m) }
func (*SetConfigMultiResponse) ProtoMessage()    {}
func (*SetConfigMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{12}
}

func (m *SetConfigMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigMultiResponse.Unmarshal(m, b)
}
func (m *SetConfigMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigMultiResponse.Marshal(b, m, deterministic)
}
func (m *SetConfigMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigMultiResponse.Merge(m, src)
}
func (m *SetConfigMultiResponse) XXX_Size() int {
	return xxx_messageInfo_SetConfigMultiResponse.Size(m)
}
func (m *SetConfigMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigMultiResponse proto.InternalMessageInfo

func (m *SetConfigMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type FingerConfig struct {
	SecurityLevel        SecurityLevel  `protobuf:"varint,1,opt,name=securityLevel,proto3,enum=finger.SecurityLevel" json:"securityLevel,omitempty"`
	FastMode             FastMode       `protobuf:"varint,2,opt,name=fastMode,proto3,enum=finger.FastMode" json:"fastMode,omitempty"`
	Sensitivity          Sensitivity    `protobuf:"varint,3,opt,name=sensitivity,proto3,enum=finger.Sensitivity" json:"sensitivity,omitempty"`
	SensorMode           SensorMode     `protobuf:"varint,4,opt,name=sensorMode,proto3,enum=finger.SensorMode" json:"sensorMode,omitempty"`
	TemplateFormat       TemplateFormat `protobuf:"varint,5,opt,name=templateFormat,proto3,enum=finger.TemplateFormat" json:"templateFormat,omitempty"`
	ScanTimeout          int32          `protobuf:"varint,6,opt,name=scanTimeout,proto3" json:"scanTimeout,omitempty"`
	AdvancedEnrollment   bool           `protobuf:"varint,7,opt,name=advancedEnrollment,proto3" json:"advancedEnrollment,omitempty"`
	ShowImage            bool           `protobuf:"varint,8,opt,name=showImage,proto3" json:"showImage,omitempty"`
	LFDLevel             LFDLevel       `protobuf:"varint,9,opt,name=LFDLevel,proto3,enum=finger.LFDLevel" json:"LFDLevel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FingerConfig) Reset()         { *m = FingerConfig{} }
func (m *FingerConfig) String() string { return proto.CompactTextString(m) }
func (*FingerConfig) ProtoMessage()    {}
func (*FingerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_3bf0b2e7e49f10e4, []int{13}
}

func (m *FingerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FingerConfig.Unmarshal(m, b)
}
func (m *FingerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FingerConfig.Marshal(b, m, deterministic)
}
func (m *FingerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FingerConfig.Merge(m, src)
}
func (m *FingerConfig) XXX_Size() int {
	return xxx_messageInfo_FingerConfig.Size(m)
}
func (m *FingerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FingerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FingerConfig proto.InternalMessageInfo

func (m *FingerConfig) GetSecurityLevel() SecurityLevel {
	if m != nil {
		return m.SecurityLevel
	}
	return SecurityLevel_SECURE
}

func (m *FingerConfig) GetFastMode() FastMode {
	if m != nil {
		return m.FastMode
	}
	return FastMode_AUTOMATIC
}

func (m *FingerConfig) GetSensitivity() Sensitivity {
	if m != nil {
		return m.Sensitivity
	}
	return Sensitivity_LOWEST_SENSITIVE
}

func (m *FingerConfig) GetSensorMode() SensorMode {
	if m != nil {
		return m.SensorMode
	}
	return SensorMode_ALWAYS_ON
}

func (m *FingerConfig) GetTemplateFormat() TemplateFormat {
	if m != nil {
		return m.TemplateFormat
	}
	return TemplateFormat_TEMPLATE_FORMAT_SUPREMA
}

func (m *FingerConfig) GetScanTimeout() int32 {
	if m != nil {
		return m.ScanTimeout
	}
	return 0
}

func (m *FingerConfig) GetAdvancedEnrollment() bool {
	if m != nil {
		return m.AdvancedEnrollment
	}
	return false
}

func (m *FingerConfig) GetShowImage() bool {
	if m != nil {
		return m.ShowImage
	}
	return false
}

func (m *FingerConfig) GetLFDLevel() LFDLevel {
	if m != nil {
		return m.LFDLevel
	}
	return LFDLevel_NOT_USED
}

func init() {
	proto.RegisterEnum("finger.TemplateFormat", TemplateFormat_name, TemplateFormat_value)
	proto.RegisterEnum("finger.SecurityLevel", SecurityLevel_name, SecurityLevel_value)
	proto.RegisterEnum("finger.FastMode", FastMode_name, FastMode_value)
	proto.RegisterEnum("finger.Sensitivity", Sensitivity_name, Sensitivity_value)
	proto.RegisterEnum("finger.SensorMode", SensorMode_name, SensorMode_value)
	proto.RegisterEnum("finger.LFDLevel", LFDLevel_name, LFDLevel_value)
	proto.RegisterType((*FingerData)(nil), "finger.FingerData")
	proto.RegisterType((*ScanRequest)(nil), "finger.ScanRequest")
	proto.RegisterType((*ScanResponse)(nil), "finger.ScanResponse")
	proto.RegisterType((*GetImageRequest)(nil), "finger.GetImageRequest")
	proto.RegisterType((*GetImageResponse)(nil), "finger.GetImageResponse")
	proto.RegisterType((*VerifyRequest)(nil), "finger.VerifyRequest")
	proto.RegisterType((*VerifyResponse)(nil), "finger.VerifyResponse")
	proto.RegisterType((*GetConfigRequest)(nil), "finger.GetConfigRequest")
	proto.RegisterType((*GetConfigResponse)(nil), "finger.GetConfigResponse")
	proto.RegisterType((*SetConfigRequest)(nil), "finger.SetConfigRequest")
	proto.RegisterType((*SetConfigResponse)(nil), "finger.SetConfigResponse")
	proto.RegisterType((*SetConfigMultiRequest)(nil), "finger.SetConfigMultiRequest")
	proto.RegisterType((*SetConfigMultiResponse)(nil), "finger.SetConfigMultiResponse")
	proto.RegisterType((*FingerConfig)(nil), "finger.FingerConfig")
}

func init() { proto.RegisterFile("finger.proto", fileDescriptor_3bf0b2e7e49f10e4) }

var fileDescriptor_3bf0b2e7e49f10e4 = []byte{
	// 1047 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x96, 0x6d, 0x6f, 0xe2, 0x46,
	0x10, 0xc7, 0x31, 0x24, 0x04, 0x86, 0x87, 0x73, 0x36, 0x4f, 0x1c, 0xbd, 0x56, 0xc8, 0xaf, 0xa2,
	0xe8, 0xca, 0xf5, 0xb8, 0xe6, 0xee, 0x45, 0xd5, 0xaa, 0x4e, 0x30, 0x77, 0x96, 0x20, 0x46, 0xeb,
	0x4d, 0xd2, 0xb4, 0x95, 0xa8, 0xcf, 0x2c, 0x89, 0x55, 0xb0, 0x73, 0xb6, 0x49, 0x9b, 0x0f, 0x50,
	0xa9, 0x5f, 0xa0, 0x5f, 0xa8, 0x9f, 0xec, 0xe4, 0xf5, 0xda, 0x5e, 0x43, 0x4e, 0x4a, 0xde, 0xe1,
	0xdf, 0xfc, 0x77, 0x66, 0x76, 0x76, 0x76, 0x07, 0xa8, 0xcf, 0x1c, 0xf7, 0x9a, 0xfa, 0xdd, 0x5b,
	0xdf, 0x0b, 0x3d, 0x54, 0x8e, 0xbf, 0xda, 0x55, 0xea, 0x73, 0xa4, 0x10, 0x80, 0x01, 0x83, 0x7d,
	0x2b, 0xb4, 0xd0, 0x2e, 0x6c, 0x3a, 0xee, 0x94, 0xfe, 0xdd, 0x92, 0x3a, 0xd2, 0xe1, 0x26, 0x8e,
	0x3f, 0x10, 0x82, 0x8d, 0xd9, 0xdc, 0xba, 0x6e, 0x15, 0x3b, 0xd2, 0x61, 0x03, 0xb3, 0xdf, 0xe8,
	0x05, 0x54, 0x43, 0xba, 0xb8, 0x9d, 0x5b, 0x21, 0x0d, 0x5a, 0xa5, 0x4e, 0xe9, 0xb0, 0x8e, 0x33,
	0xa0, 0xfc, 0x27, 0x41, 0xcd, 0xb4, 0x2d, 0x17, 0xd3, 0x4f, 0x4b, 0x1a, 0x84, 0xa8, 0x0d, 0x95,
	0x29, 0xbd, 0x73, 0x6c, 0xaa, 0xf7, 0x99, 0xeb, 0x06, 0x4e, 0xbf, 0xd1, 0x4f, 0xd0, 0x4c, 0x16,
	0x0e, 0x3c, 0x7f, 0x61, 0x85, 0x2c, 0x4e, 0xb3, 0xb7, 0xdf, 0xe5, 0xb9, 0x93, 0x9c, 0x15, 0xaf,
	0xa8, 0xd1, 0x11, 0xc8, 0x9f, 0x96, 0xd6, 0xdc, 0x09, 0xef, 0xc9, 0x8d, 0x4f, 0x83, 0x1b, 0x6f,
	0x3e, 0x6d, 0x95, 0x58, 0x8c, 0x35, 0xae, 0x5c, 0x40, 0x3d, 0x4e, 0x2b, 0xb8, 0xf5, 0xdc, 0x80,
	0x22, 0x05, 0xea, 0x89, 0xb7, 0x68, 0xff, 0x2c, 0xb7, 0x3a, 0xce, 0xb1, 0x48, 0xc3, 0xfd, 0x98,
	0xb6, 0xe7, 0x53, 0x5e, 0x85, 0x1c, 0x53, 0xbe, 0x85, 0x67, 0xef, 0x69, 0xa8, 0x2f, 0xac, 0x6b,
	0xfa, 0x88, 0x2d, 0x2b, 0x5d, 0x90, 0x33, 0x39, 0x4f, 0xa5, 0x0d, 0x95, 0x93, 0xd1, 0x98, 0x31,
	0x9e, 0x46, 0xfa, 0xad, 0x4c, 0xa0, 0x71, 0x41, 0x7d, 0x67, 0x76, 0xff, 0x98, 0x7a, 0xf6, 0x00,
	0x66, 0xe9, 0x89, 0xb2, 0x6c, 0x6b, 0x3d, 0x94, 0xd4, 0x32, 0x3b, 0x6b, 0x2c, 0xa8, 0x14, 0x19,
	0x9a, 0x49, 0x80, 0x38, 0x1d, 0x9e, 0xe2, 0xa9, 0xe7, 0xce, 0x9c, 0xeb, 0xc7, 0x6c, 0x49, 0x85,
	0x6d, 0x41, 0xcf, 0xf7, 0xf4, 0x12, 0xca, 0x36, 0x23, 0x4c, 0x5e, 0xeb, 0xed, 0xe6, 0xd3, 0xe0,
	0x6a, 0xae, 0x51, 0x7e, 0x07, 0xd9, 0x7c, 0x42, 0x48, 0xc1, 0x7b, 0xf1, 0x11, 0xde, 0x77, 0x60,
	0xdb, 0x5c, 0x4d, 0x50, 0xb1, 0x61, 0x2f, 0x85, 0xa3, 0xe5, 0x3c, 0x74, 0x92, 0xb8, 0x2f, 0xa0,
	0x9a, 0xc4, 0x09, 0x5a, 0x52, 0xa7, 0x74, 0xd8, 0xc0, 0x19, 0x78, 0x62, 0xe4, 0x31, 0xec, 0xaf,
	0x06, 0xe1, 0xf5, 0x79, 0x0b, 0xf5, 0xd8, 0xa9, 0xe6, 0xfb, 0x9e, 0x1f, 0x07, 0x8a, 0x0e, 0x2b,
	0xba, 0x9e, 0x0c, 0x25, 0x4a, 0x9c, 0xd3, 0x29, 0xff, 0x97, 0xa0, 0x2e, 0x86, 0x42, 0x3f, 0x40,
	0x23, 0xa0, 0xf6, 0xd2, 0x77, 0xc2, 0xfb, 0x21, 0xbd, 0xa3, 0x73, 0x56, 0xab, 0x66, 0x6f, 0x2f,
	0xc9, 0xcb, 0x14, 0x8d, 0x38, 0xaf, 0x45, 0x2f, 0xa1, 0x32, 0xb3, 0x82, 0x70, 0xe4, 0x4d, 0x29,
	0xbf, 0x7a, 0x72, 0xba, 0x1f, 0xce, 0x71, 0xaa, 0x40, 0xc7, 0x50, 0x0b, 0xa8, 0x1b, 0x38, 0xa1,
	0x73, 0xe7, 0x84, 0xf7, 0xec, 0xa6, 0x35, 0x7b, 0x3b, 0x59, 0xa0, 0xd4, 0x84, 0x45, 0x5d, 0xd4,
	0x95, 0xd1, 0xa7, 0xe7, 0xb3, 0x30, 0x1b, 0x6c, 0x15, 0x12, 0x57, 0xc5, 0x16, 0x2c, 0xa8, 0x1e,
	0x78, 0x19, 0x36, 0x9f, 0xf4, 0x32, 0x74, 0xa0, 0x16, 0xd8, 0x96, 0x4b, 0x9c, 0x05, 0xf5, 0x96,
	0x61, 0xab, 0xcc, 0xde, 0x34, 0x11, 0xa1, 0x2e, 0x20, 0x6b, 0x7a, 0x67, 0xb9, 0x36, 0x9d, 0x6a,
	0xae, 0xef, 0xcd, 0xe7, 0x0b, 0xea, 0x86, 0xad, 0xad, 0x8e, 0x74, 0x58, 0xc1, 0x0f, 0x58, 0xa2,
	0xb6, 0x08, 0x6e, 0xbc, 0xbf, 0xe2, 0x5b, 0x5a, 0x61, 0xb2, 0x0c, 0x44, 0x85, 0x1c, 0x0e, 0xfa,
	0xf1, 0x01, 0x54, 0xf3, 0x85, 0x4c, 0x38, 0x4e, 0x15, 0x47, 0x7f, 0x40, 0x33, 0x9f, 0x3f, 0xfa,
	0x0a, 0x0e, 0x88, 0x36, 0x1a, 0x0f, 0x55, 0xa2, 0x4d, 0x06, 0x06, 0x1e, 0xa9, 0x64, 0x62, 0x9e,
	0x8f, 0xb1, 0x36, 0x52, 0xe5, 0x02, 0x3a, 0x80, 0x9d, 0x55, 0xa3, 0x6e, 0x1a, 0xb2, 0x84, 0x5a,
	0xb0, 0xbb, 0x6a, 0x50, 0xcf, 0x4c, 0x5d, 0x2e, 0x1e, 0x5d, 0x42, 0x23, 0x77, 0xf0, 0x08, 0xa0,
	0x6c, 0x6a, 0xa7, 0xe7, 0x58, 0x93, 0x0b, 0xe8, 0x19, 0xd4, 0x46, 0x06, 0xd6, 0x26, 0x1c, 0x48,
	0x31, 0x30, 0x49, 0x02, 0x8a, 0x68, 0x17, 0xe4, 0xbe, 0x36, 0x50, 0xcf, 0x87, 0x9c, 0xe9, 0xe4,
	0x4a, 0x2e, 0xb4, 0x8b, 0xb2, 0x74, 0x84, 0xa1, 0x92, 0x74, 0x06, 0x6a, 0x40, 0x55, 0x3d, 0x27,
	0xc6, 0x48, 0x25, 0xfa, 0xa9, 0x5c, 0x40, 0x15, 0xd8, 0x18, 0xa8, 0x26, 0x91, 0xa5, 0x28, 0x58,
	0xf4, 0x4b, 0xc3, 0x72, 0x11, 0xd5, 0x60, 0x8b, 0xfd, 0x36, 0x89, 0x5c, 0x42, 0x32, 0xd4, 0x13,
	0xbf, 0x4c, 0x1a, 0xfb, 0xfc, 0xa7, 0x08, 0x35, 0xa1, 0x7b, 0xa2, 0xe8, 0x43, 0xe3, 0x52, 0x63,
	0x09, 0x9d, 0x99, 0x3a, 0xd1, 0x2f, 0xa2, 0xac, 0x23, 0xaa, 0x5d, 0x68, 0xc3, 0xef, 0x1e, 0xa4,
	0xaf, 0x05, 0x2a, 0xa5, 0xb4, 0x27, 0xd0, 0x62, 0x4a, 0xdf, 0x08, 0xb4, 0x94, 0xd2, 0xef, 0x05,
	0xba, 0x91, 0xd2, 0x63, 0x81, 0x6e, 0xa6, 0xf4, 0xad, 0x40, 0xcb, 0x29, 0x7d, 0x27, 0xd0, 0x2d,
	0xb4, 0x07, 0xdb, 0x1f, 0xf4, 0xf7, 0x1f, 0xf2, 0xdb, 0x60, 0x38, 0x2b, 0x2d, 0xc3, 0xe4, 0x4a,
	0xde, 0x62, 0x75, 0x20, 0x00, 0xd9, 0x75, 0x60, 0xd5, 0x1d, 0x5e, 0xaa, 0x57, 0xe6, 0xc4, 0x38,
	0x93, 0x0b, 0xa8, 0x0d, 0xfb, 0xea, 0x29, 0xd1, 0x2f, 0x54, 0xa2, 0xf5, 0x27, 0x27, 0x57, 0x93,
	0x31, 0x36, 0x7e, 0xd1, 0x47, 0xd1, 0x62, 0x29, 0x6a, 0x10, 0xd1, 0xa7, 0x81, 0x27, 0x23, 0xa3,
	0xaf, 0xf1, 0xea, 0xfe, 0x96, 0xb5, 0x26, 0xaa, 0x43, 0xe5, 0xcc, 0x20, 0x93, 0x73, 0x53, 0xeb,
	0xcb, 0x05, 0xd6, 0x13, 0x04, 0xeb, 0xa7, 0x24, 0x69, 0x81, 0xa8, 0x27, 0x62, 0x50, 0xcc, 0x7a,
	0x22, 0x06, 0xa5, 0x08, 0x24, 0x41, 0x86, 0x83, 0x7e, 0xec, 0xbc, 0xf7, 0x6f, 0x09, 0xca, 0xf1,
	0x73, 0x84, 0x5e, 0xc3, 0x46, 0x34, 0x60, 0x51, 0xf6, 0x20, 0x64, 0xff, 0x02, 0xda, 0xbb, 0x79,
	0xc8, 0x1f, 0xc1, 0x1f, 0xa1, 0x92, 0x0c, 0x43, 0x74, 0x90, 0x28, 0x56, 0xa6, 0x69, 0xbb, 0xb5,
	0x6e, 0xe0, 0xcb, 0xdf, 0x41, 0x39, 0x1e, 0x5d, 0x28, 0x7d, 0xed, 0x72, 0xb3, 0xb2, 0xbd, 0xbf,
	0x8a, 0xf9, 0xc2, 0x9f, 0xa1, 0x9a, 0x4e, 0x2c, 0x24, 0xfa, 0xcf, 0x4d, 0xa0, 0xf6, 0xf3, 0x07,
	0x2c, 0x99, 0x07, 0x73, 0xdd, 0x83, 0xf9, 0x45, 0x0f, 0x6b, 0xf3, 0x07, 0x19, 0xd0, 0xcc, 0x8f,
	0x06, 0xf4, 0xf5, 0x9a, 0x58, 0x9c, 0x4b, 0xed, 0x6f, 0xbe, 0x64, 0x8e, 0x1d, 0x9e, 0x1c, 0xc3,
	0x73, 0xdb, 0x5b, 0x74, 0x83, 0xe5, 0xad, 0x4f, 0x17, 0x96, 0xe3, 0xda, 0xdd, 0x60, 0xfa, 0x27,
	0x5f, 0x33, 0x96, 0x7e, 0xdd, 0xff, 0xe8, 0x78, 0x41, 0x68, 0xf9, 0xaf, 0x02, 0xea, 0x47, 0xf3,
	0xe4, 0x55, 0x6c, 0xf9, 0x58, 0x66, 0x7f, 0x06, 0xdf, 0x7c, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x73,
	0x73, 0x42, 0x91, 0x2f, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FingerClient is the client API for Finger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FingerClient interface {
	Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error)
	GetImage(ctx context.Context, in *GetImageRequest, opts ...grpc.CallOption) (*GetImageResponse, error)
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error)
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error)
	SetConfigMulti(ctx context.Context, in *SetConfigMultiRequest, opts ...grpc.CallOption) (*SetConfigMultiResponse, error)
}

type fingerClient struct {
	cc *grpc.ClientConn
}

func NewFingerClient(cc *grpc.ClientConn) FingerClient {
	return &fingerClient{cc}
}

func (c *fingerClient) Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error) {
	out := new(ScanResponse)
	err := c.cc.Invoke(ctx, "/finger.Finger/Scan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fingerClient) GetImage(ctx context.Context, in *GetImageRequest, opts ...grpc.CallOption) (*GetImageResponse, error) {
	out := new(GetImageResponse)
	err := c.cc.Invoke(ctx, "/finger.Finger/GetImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fingerClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/finger.Finger/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fingerClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error) {
	out := new(GetConfigResponse)
	err := c.cc.Invoke(ctx, "/finger.Finger/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fingerClient) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error) {
	out := new(SetConfigResponse)
	err := c.cc.Invoke(ctx, "/finger.Finger/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fingerClient) SetConfigMulti(ctx context.Context, in *SetConfigMultiRequest, opts ...grpc.CallOption) (*SetConfigMultiResponse, error) {
	out := new(SetConfigMultiResponse)
	err := c.cc.Invoke(ctx, "/finger.Finger/SetConfigMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FingerServer is the server API for Finger service.
type FingerServer interface {
	Scan(context.Context, *ScanRequest) (*ScanResponse, error)
	GetImage(context.Context, *GetImageRequest) (*GetImageResponse, error)
	Verify(context.Context, *VerifyRequest) (*VerifyResponse, error)
	GetConfig(context.Context, *GetConfigRequest) (*GetConfigResponse, error)
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error)
	SetConfigMulti(context.Context, *SetConfigMultiRequest) (*SetConfigMultiResponse, error)
}

func RegisterFingerServer(s *grpc.Server, srv FingerServer) {
	s.RegisterService(&_Finger_serviceDesc, srv)
}

func _Finger_Scan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FingerServer).Scan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/finger.Finger/Scan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FingerServer).Scan(ctx, req.(*ScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finger_GetImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FingerServer).GetImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/finger.Finger/GetImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FingerServer).GetImage(ctx, req.(*GetImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finger_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FingerServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/finger.Finger/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FingerServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finger_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FingerServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/finger.Finger/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FingerServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finger_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FingerServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/finger.Finger/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FingerServer).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Finger_SetConfigMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FingerServer).SetConfigMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/finger.Finger/SetConfigMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FingerServer).SetConfigMulti(ctx, req.(*SetConfigMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Finger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "finger.Finger",
	HandlerType: (*FingerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Scan",
			Handler:    _Finger_Scan_Handler,
		},
		{
			MethodName: "GetImage",
			Handler:    _Finger_GetImage_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _Finger_Verify_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _Finger_GetConfig_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _Finger_SetConfig_Handler,
		},
		{
			MethodName: "SetConfigMulti",
			Handler:    _Finger_SetConfigMulti_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "finger.proto",
}
