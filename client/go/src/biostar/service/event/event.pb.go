// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package event

import (
	err "biostar/service/err"
	tna "biostar/service/tna"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventLog struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Timestamp            uint32   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceID             uint32   `protobuf:"varint,3,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	UserID               string   `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	EntityID             uint32   `protobuf:"varint,5,opt,name=entityID,proto3" json:"entityID,omitempty"`
	EventCode            uint32   `protobuf:"varint,6,opt,name=eventCode,proto3" json:"eventCode,omitempty"`
	SubCode              uint32   `protobuf:"varint,7,opt,name=subCode,proto3" json:"subCode,omitempty"`
	TNAKey               tna.Key  `protobuf:"varint,8,opt,name=TNAKey,proto3,enum=tna.Key" json:"TNAKey,omitempty"`
	HasImage             bool     `protobuf:"varint,9,opt,name=hasImage,proto3" json:"hasImage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventLog) Reset()         { *m = EventLog{} }
func (m *EventLog) String() string { return proto.CompactTextString(m) }
func (*EventLog) ProtoMessage()    {}
func (*EventLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *EventLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLog.Unmarshal(m, b)
}
func (m *EventLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLog.Marshal(b, m, deterministic)
}
func (m *EventLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLog.Merge(m, src)
}
func (m *EventLog) XXX_Size() int {
	return xxx_messageInfo_EventLog.Size(m)
}
func (m *EventLog) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLog.DiscardUnknown(m)
}

var xxx_messageInfo_EventLog proto.InternalMessageInfo

func (m *EventLog) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *EventLog) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *EventLog) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *EventLog) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *EventLog) GetEntityID() uint32 {
	if m != nil {
		return m.EntityID
	}
	return 0
}

func (m *EventLog) GetEventCode() uint32 {
	if m != nil {
		return m.EventCode
	}
	return 0
}

func (m *EventLog) GetSubCode() uint32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *EventLog) GetTNAKey() tna.Key {
	if m != nil {
		return m.TNAKey
	}
	return tna.Key_UNSPECIFIED
}

func (m *EventLog) GetHasImage() bool {
	if m != nil {
		return m.HasImage
	}
	return false
}

type EventFilter struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	StartTime            uint32   `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              uint32   `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	EventCode            uint32   `protobuf:"varint,4,opt,name=eventCode,proto3" json:"eventCode,omitempty"`
	TNAKey               tna.Key  `protobuf:"varint,5,opt,name=TNAKey,proto3,enum=tna.Key" json:"TNAKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventFilter) Reset()         { *m = EventFilter{} }
func (m *EventFilter) String() string { return proto.CompactTextString(m) }
func (*EventFilter) ProtoMessage()    {}
func (*EventFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *EventFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventFilter.Unmarshal(m, b)
}
func (m *EventFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventFilter.Marshal(b, m, deterministic)
}
func (m *EventFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventFilter.Merge(m, src)
}
func (m *EventFilter) XXX_Size() int {
	return xxx_messageInfo_EventFilter.Size(m)
}
func (m *EventFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EventFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EventFilter proto.InternalMessageInfo

func (m *EventFilter) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *EventFilter) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *EventFilter) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *EventFilter) GetEventCode() uint32 {
	if m != nil {
		return m.EventCode
	}
	return 0
}

func (m *EventFilter) GetTNAKey() tna.Key {
	if m != nil {
		return m.TNAKey
	}
	return tna.Key_UNSPECIFIED
}

type EnableMonitoringRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableMonitoringRequest) Reset()         { *m = EnableMonitoringRequest{} }
func (m *EnableMonitoringRequest) String() string { return proto.CompactTextString(m) }
func (*EnableMonitoringRequest) ProtoMessage()    {}
func (*EnableMonitoringRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}

func (m *EnableMonitoringRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableMonitoringRequest.Unmarshal(m, b)
}
func (m *EnableMonitoringRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableMonitoringRequest.Marshal(b, m, deterministic)
}
func (m *EnableMonitoringRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableMonitoringRequest.Merge(m, src)
}
func (m *EnableMonitoringRequest) XXX_Size() int {
	return xxx_messageInfo_EnableMonitoringRequest.Size(m)
}
func (m *EnableMonitoringRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableMonitoringRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableMonitoringRequest proto.InternalMessageInfo

func (m *EnableMonitoringRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type EnableMonitoringResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableMonitoringResponse) Reset()         { *m = EnableMonitoringResponse{} }
func (m *EnableMonitoringResponse) String() string { return proto.CompactTextString(m) }
func (*EnableMonitoringResponse) ProtoMessage()    {}
func (*EnableMonitoringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}

func (m *EnableMonitoringResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableMonitoringResponse.Unmarshal(m, b)
}
func (m *EnableMonitoringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableMonitoringResponse.Marshal(b, m, deterministic)
}
func (m *EnableMonitoringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableMonitoringResponse.Merge(m, src)
}
func (m *EnableMonitoringResponse) XXX_Size() int {
	return xxx_messageInfo_EnableMonitoringResponse.Size(m)
}
func (m *EnableMonitoringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableMonitoringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnableMonitoringResponse proto.InternalMessageInfo

type EnableMonitoringMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableMonitoringMultiRequest) Reset()         { *m = EnableMonitoringMultiRequest{} }
func (m *EnableMonitoringMultiRequest) String() string { return proto.CompactTextString(m) }
func (*EnableMonitoringMultiRequest) ProtoMessage()    {}
func (*EnableMonitoringMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}

func (m *EnableMonitoringMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableMonitoringMultiRequest.Unmarshal(m, b)
}
func (m *EnableMonitoringMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableMonitoringMultiRequest.Marshal(b, m, deterministic)
}
func (m *EnableMonitoringMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableMonitoringMultiRequest.Merge(m, src)
}
func (m *EnableMonitoringMultiRequest) XXX_Size() int {
	return xxx_messageInfo_EnableMonitoringMultiRequest.Size(m)
}
func (m *EnableMonitoringMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableMonitoringMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableMonitoringMultiRequest proto.InternalMessageInfo

func (m *EnableMonitoringMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type EnableMonitoringMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EnableMonitoringMultiResponse) Reset()         { *m = EnableMonitoringMultiResponse{} }
func (m *EnableMonitoringMultiResponse) String() string { return proto.CompactTextString(m) }
func (*EnableMonitoringMultiResponse) ProtoMessage()    {}
func (*EnableMonitoringMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{5}
}

func (m *EnableMonitoringMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableMonitoringMultiResponse.Unmarshal(m, b)
}
func (m *EnableMonitoringMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableMonitoringMultiResponse.Marshal(b, m, deterministic)
}
func (m *EnableMonitoringMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableMonitoringMultiResponse.Merge(m, src)
}
func (m *EnableMonitoringMultiResponse) XXX_Size() int {
	return xxx_messageInfo_EnableMonitoringMultiResponse.Size(m)
}
func (m *EnableMonitoringMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableMonitoringMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnableMonitoringMultiResponse proto.InternalMessageInfo

func (m *EnableMonitoringMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type DisableMonitoringRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableMonitoringRequest) Reset()         { *m = DisableMonitoringRequest{} }
func (m *DisableMonitoringRequest) String() string { return proto.CompactTextString(m) }
func (*DisableMonitoringRequest) ProtoMessage()    {}
func (*DisableMonitoringRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{6}
}

func (m *DisableMonitoringRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableMonitoringRequest.Unmarshal(m, b)
}
func (m *DisableMonitoringRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableMonitoringRequest.Marshal(b, m, deterministic)
}
func (m *DisableMonitoringRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableMonitoringRequest.Merge(m, src)
}
func (m *DisableMonitoringRequest) XXX_Size() int {
	return xxx_messageInfo_DisableMonitoringRequest.Size(m)
}
func (m *DisableMonitoringRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableMonitoringRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableMonitoringRequest proto.InternalMessageInfo

func (m *DisableMonitoringRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type DisableMonitoringResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableMonitoringResponse) Reset()         { *m = DisableMonitoringResponse{} }
func (m *DisableMonitoringResponse) String() string { return proto.CompactTextString(m) }
func (*DisableMonitoringResponse) ProtoMessage()    {}
func (*DisableMonitoringResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{7}
}

func (m *DisableMonitoringResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableMonitoringResponse.Unmarshal(m, b)
}
func (m *DisableMonitoringResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableMonitoringResponse.Marshal(b, m, deterministic)
}
func (m *DisableMonitoringResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableMonitoringResponse.Merge(m, src)
}
func (m *DisableMonitoringResponse) XXX_Size() int {
	return xxx_messageInfo_DisableMonitoringResponse.Size(m)
}
func (m *DisableMonitoringResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableMonitoringResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisableMonitoringResponse proto.InternalMessageInfo

type DisableMonitoringMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableMonitoringMultiRequest) Reset()         { *m = DisableMonitoringMultiRequest{} }
func (m *DisableMonitoringMultiRequest) String() string { return proto.CompactTextString(m) }
func (*DisableMonitoringMultiRequest) ProtoMessage()    {}
func (*DisableMonitoringMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{8}
}

func (m *DisableMonitoringMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableMonitoringMultiRequest.Unmarshal(m, b)
}
func (m *DisableMonitoringMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableMonitoringMultiRequest.Marshal(b, m, deterministic)
}
func (m *DisableMonitoringMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableMonitoringMultiRequest.Merge(m, src)
}
func (m *DisableMonitoringMultiRequest) XXX_Size() int {
	return xxx_messageInfo_DisableMonitoringMultiRequest.Size(m)
}
func (m *DisableMonitoringMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableMonitoringMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableMonitoringMultiRequest proto.InternalMessageInfo

func (m *DisableMonitoringMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type DisableMonitoringMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DisableMonitoringMultiResponse) Reset()         { *m = DisableMonitoringMultiResponse{} }
func (m *DisableMonitoringMultiResponse) String() string { return proto.CompactTextString(m) }
func (*DisableMonitoringMultiResponse) ProtoMessage()    {}
func (*DisableMonitoringMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{9}
}

func (m *DisableMonitoringMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableMonitoringMultiResponse.Unmarshal(m, b)
}
func (m *DisableMonitoringMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableMonitoringMultiResponse.Marshal(b, m, deterministic)
}
func (m *DisableMonitoringMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableMonitoringMultiResponse.Merge(m, src)
}
func (m *DisableMonitoringMultiResponse) XXX_Size() int {
	return xxx_messageInfo_DisableMonitoringMultiResponse.Size(m)
}
func (m *DisableMonitoringMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableMonitoringMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisableMonitoringMultiResponse proto.InternalMessageInfo

func (m *DisableMonitoringMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type SubscribeRealtimeLogRequest struct {
	QueueSize            int32    `protobuf:"varint,1,opt,name=queueSize,proto3" json:"queueSize,omitempty"`
	DeviceIDs            []uint32 `protobuf:"varint,2,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	EventIDs             []int32  `protobuf:"varint,3,rep,packed,name=eventIDs,proto3" json:"eventIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRealtimeLogRequest) Reset()         { *m = SubscribeRealtimeLogRequest{} }
func (m *SubscribeRealtimeLogRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRealtimeLogRequest) ProtoMessage()    {}
func (*SubscribeRealtimeLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{10}
}

func (m *SubscribeRealtimeLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRealtimeLogRequest.Unmarshal(m, b)
}
func (m *SubscribeRealtimeLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRealtimeLogRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRealtimeLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRealtimeLogRequest.Merge(m, src)
}
func (m *SubscribeRealtimeLogRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRealtimeLogRequest.Size(m)
}
func (m *SubscribeRealtimeLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRealtimeLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRealtimeLogRequest proto.InternalMessageInfo

func (m *SubscribeRealtimeLogRequest) GetQueueSize() int32 {
	if m != nil {
		return m.QueueSize
	}
	return 0
}

func (m *SubscribeRealtimeLogRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *SubscribeRealtimeLogRequest) GetEventIDs() []int32 {
	if m != nil {
		return m.EventIDs
	}
	return nil
}

type SubscribeRealtimeLogResponse struct {
	LogChanID            string   `protobuf:"bytes,1,opt,name=logChanID,proto3" json:"logChanID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRealtimeLogResponse) Reset()         { *m = SubscribeRealtimeLogResponse{} }
func (m *SubscribeRealtimeLogResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeRealtimeLogResponse) ProtoMessage()    {}
func (*SubscribeRealtimeLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{11}
}

func (m *SubscribeRealtimeLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRealtimeLogResponse.Unmarshal(m, b)
}
func (m *SubscribeRealtimeLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRealtimeLogResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeRealtimeLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRealtimeLogResponse.Merge(m, src)
}
func (m *SubscribeRealtimeLogResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeRealtimeLogResponse.Size(m)
}
func (m *SubscribeRealtimeLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRealtimeLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRealtimeLogResponse proto.InternalMessageInfo

func (m *SubscribeRealtimeLogResponse) GetLogChanID() string {
	if m != nil {
		return m.LogChanID
	}
	return ""
}

type GetLogRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	StartEventID         uint32   `protobuf:"varint,2,opt,name=startEventID,proto3" json:"startEventID,omitempty"`
	MaxNumOfLog          uint32   `protobuf:"varint,3,opt,name=maxNumOfLog,proto3" json:"maxNumOfLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLogRequest) Reset()         { *m = GetLogRequest{} }
func (m *GetLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetLogRequest) ProtoMessage()    {}
func (*GetLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{12}
}

func (m *GetLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogRequest.Unmarshal(m, b)
}
func (m *GetLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogRequest.Marshal(b, m, deterministic)
}
func (m *GetLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogRequest.Merge(m, src)
}
func (m *GetLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetLogRequest.Size(m)
}
func (m *GetLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogRequest proto.InternalMessageInfo

func (m *GetLogRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *GetLogRequest) GetStartEventID() uint32 {
	if m != nil {
		return m.StartEventID
	}
	return 0
}

func (m *GetLogRequest) GetMaxNumOfLog() uint32 {
	if m != nil {
		return m.MaxNumOfLog
	}
	return 0
}

type GetLogResponse struct {
	Events               []*EventLog `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetLogResponse) Reset()         { *m = GetLogResponse{} }
func (m *GetLogResponse) String() string { return proto.CompactTextString(m) }
func (*GetLogResponse) ProtoMessage()    {}
func (*GetLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{13}
}

func (m *GetLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogResponse.Unmarshal(m, b)
}
func (m *GetLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogResponse.Marshal(b, m, deterministic)
}
func (m *GetLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogResponse.Merge(m, src)
}
func (m *GetLogResponse) XXX_Size() int {
	return xxx_messageInfo_GetLogResponse.Size(m)
}
func (m *GetLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogResponse proto.InternalMessageInfo

func (m *GetLogResponse) GetEvents() []*EventLog {
	if m != nil {
		return m.Events
	}
	return nil
}

type GetLogWithFilterRequest struct {
	DeviceID             uint32         `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	StartEventID         uint32         `protobuf:"varint,2,opt,name=startEventID,proto3" json:"startEventID,omitempty"`
	MaxNumOfLog          uint32         `protobuf:"varint,3,opt,name=maxNumOfLog,proto3" json:"maxNumOfLog,omitempty"`
	Filters              []*EventFilter `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetLogWithFilterRequest) Reset()         { *m = GetLogWithFilterRequest{} }
func (m *GetLogWithFilterRequest) String() string { return proto.CompactTextString(m) }
func (*GetLogWithFilterRequest) ProtoMessage()    {}
func (*GetLogWithFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{14}
}

func (m *GetLogWithFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogWithFilterRequest.Unmarshal(m, b)
}
func (m *GetLogWithFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogWithFilterRequest.Marshal(b, m, deterministic)
}
func (m *GetLogWithFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogWithFilterRequest.Merge(m, src)
}
func (m *GetLogWithFilterRequest) XXX_Size() int {
	return xxx_messageInfo_GetLogWithFilterRequest.Size(m)
}
func (m *GetLogWithFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogWithFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogWithFilterRequest proto.InternalMessageInfo

func (m *GetLogWithFilterRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *GetLogWithFilterRequest) GetStartEventID() uint32 {
	if m != nil {
		return m.StartEventID
	}
	return 0
}

func (m *GetLogWithFilterRequest) GetMaxNumOfLog() uint32 {
	if m != nil {
		return m.MaxNumOfLog
	}
	return 0
}

func (m *GetLogWithFilterRequest) GetFilters() []*EventFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type GetLogWithFilterResponse struct {
	Events               []*EventLog `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetLogWithFilterResponse) Reset()         { *m = GetLogWithFilterResponse{} }
func (m *GetLogWithFilterResponse) String() string { return proto.CompactTextString(m) }
func (*GetLogWithFilterResponse) ProtoMessage()    {}
func (*GetLogWithFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{15}
}

func (m *GetLogWithFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLogWithFilterResponse.Unmarshal(m, b)
}
func (m *GetLogWithFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLogWithFilterResponse.Marshal(b, m, deterministic)
}
func (m *GetLogWithFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLogWithFilterResponse.Merge(m, src)
}
func (m *GetLogWithFilterResponse) XXX_Size() int {
	return xxx_messageInfo_GetLogWithFilterResponse.Size(m)
}
func (m *GetLogWithFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLogWithFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLogWithFilterResponse proto.InternalMessageInfo

func (m *GetLogWithFilterResponse) GetEvents() []*EventLog {
	if m != nil {
		return m.Events
	}
	return nil
}

type ImageLog struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Timestamp            uint32   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceID             uint32   `protobuf:"varint,3,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	UserID               string   `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	EventCode            uint32   `protobuf:"varint,5,opt,name=eventCode,proto3" json:"eventCode,omitempty"`
	JPGImage             []byte   `protobuf:"bytes,6,opt,name=JPGImage,proto3" json:"JPGImage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageLog) Reset()         { *m = ImageLog{} }
func (m *ImageLog) String() string { return proto.CompactTextString(m) }
func (*ImageLog) ProtoMessage()    {}
func (*ImageLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{16}
}

func (m *ImageLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageLog.Unmarshal(m, b)
}
func (m *ImageLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageLog.Marshal(b, m, deterministic)
}
func (m *ImageLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageLog.Merge(m, src)
}
func (m *ImageLog) XXX_Size() int {
	return xxx_messageInfo_ImageLog.Size(m)
}
func (m *ImageLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageLog.DiscardUnknown(m)
}

var xxx_messageInfo_ImageLog proto.InternalMessageInfo

func (m *ImageLog) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ImageLog) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ImageLog) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *ImageLog) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ImageLog) GetEventCode() uint32 {
	if m != nil {
		return m.EventCode
	}
	return 0
}

func (m *ImageLog) GetJPGImage() []byte {
	if m != nil {
		return m.JPGImage
	}
	return nil
}

type GetImageLogRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	StartEventID         uint32   `protobuf:"varint,2,opt,name=startEventID,proto3" json:"startEventID,omitempty"`
	MaxNumOfLog          uint32   `protobuf:"varint,3,opt,name=maxNumOfLog,proto3" json:"maxNumOfLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageLogRequest) Reset()         { *m = GetImageLogRequest{} }
func (m *GetImageLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetImageLogRequest) ProtoMessage()    {}
func (*GetImageLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{17}
}

func (m *GetImageLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageLogRequest.Unmarshal(m, b)
}
func (m *GetImageLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageLogRequest.Marshal(b, m, deterministic)
}
func (m *GetImageLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageLogRequest.Merge(m, src)
}
func (m *GetImageLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetImageLogRequest.Size(m)
}
func (m *GetImageLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageLogRequest proto.InternalMessageInfo

func (m *GetImageLogRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *GetImageLogRequest) GetStartEventID() uint32 {
	if m != nil {
		return m.StartEventID
	}
	return 0
}

func (m *GetImageLogRequest) GetMaxNumOfLog() uint32 {
	if m != nil {
		return m.MaxNumOfLog
	}
	return 0
}

type GetImageLogResponse struct {
	ImageEvents          []*ImageLog `protobuf:"bytes,1,rep,name=imageEvents,proto3" json:"imageEvents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetImageLogResponse) Reset()         { *m = GetImageLogResponse{} }
func (m *GetImageLogResponse) String() string { return proto.CompactTextString(m) }
func (*GetImageLogResponse) ProtoMessage()    {}
func (*GetImageLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{18}
}

func (m *GetImageLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageLogResponse.Unmarshal(m, b)
}
func (m *GetImageLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageLogResponse.Marshal(b, m, deterministic)
}
func (m *GetImageLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageLogResponse.Merge(m, src)
}
func (m *GetImageLogResponse) XXX_Size() int {
	return xxx_messageInfo_GetImageLogResponse.Size(m)
}
func (m *GetImageLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageLogResponse proto.InternalMessageInfo

func (m *GetImageLogResponse) GetImageEvents() []*ImageLog {
	if m != nil {
		return m.ImageEvents
	}
	return nil
}

type ImageFilter struct {
	MainEventCode        uint32   `protobuf:"varint,1,opt,name=mainEventCode,proto3" json:"mainEventCode,omitempty"`
	ScheduleID           uint32   `protobuf:"varint,2,opt,name=scheduleID,proto3" json:"scheduleID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageFilter) Reset()         { *m = ImageFilter{} }
func (m *ImageFilter) String() string { return proto.CompactTextString(m) }
func (*ImageFilter) ProtoMessage()    {}
func (*ImageFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{19}
}

func (m *ImageFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageFilter.Unmarshal(m, b)
}
func (m *ImageFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageFilter.Marshal(b, m, deterministic)
}
func (m *ImageFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageFilter.Merge(m, src)
}
func (m *ImageFilter) XXX_Size() int {
	return xxx_messageInfo_ImageFilter.Size(m)
}
func (m *ImageFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ImageFilter proto.InternalMessageInfo

func (m *ImageFilter) GetMainEventCode() uint32 {
	if m != nil {
		return m.MainEventCode
	}
	return 0
}

func (m *ImageFilter) GetScheduleID() uint32 {
	if m != nil {
		return m.ScheduleID
	}
	return 0
}

type GetImageFilterRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetImageFilterRequest) Reset()         { *m = GetImageFilterRequest{} }
func (m *GetImageFilterRequest) String() string { return proto.CompactTextString(m) }
func (*GetImageFilterRequest) ProtoMessage()    {}
func (*GetImageFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{20}
}

func (m *GetImageFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageFilterRequest.Unmarshal(m, b)
}
func (m *GetImageFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageFilterRequest.Marshal(b, m, deterministic)
}
func (m *GetImageFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageFilterRequest.Merge(m, src)
}
func (m *GetImageFilterRequest) XXX_Size() int {
	return xxx_messageInfo_GetImageFilterRequest.Size(m)
}
func (m *GetImageFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageFilterRequest proto.InternalMessageInfo

func (m *GetImageFilterRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetImageFilterResponse struct {
	Filters              []*ImageFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetImageFilterResponse) Reset()         { *m = GetImageFilterResponse{} }
func (m *GetImageFilterResponse) String() string { return proto.CompactTextString(m) }
func (*GetImageFilterResponse) ProtoMessage()    {}
func (*GetImageFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{21}
}

func (m *GetImageFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetImageFilterResponse.Unmarshal(m, b)
}
func (m *GetImageFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetImageFilterResponse.Marshal(b, m, deterministic)
}
func (m *GetImageFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetImageFilterResponse.Merge(m, src)
}
func (m *GetImageFilterResponse) XXX_Size() int {
	return xxx_messageInfo_GetImageFilterResponse.Size(m)
}
func (m *GetImageFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetImageFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetImageFilterResponse proto.InternalMessageInfo

func (m *GetImageFilterResponse) GetFilters() []*ImageFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type SetImageFilterRequest struct {
	DeviceID             uint32         `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Filters              []*ImageFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetImageFilterRequest) Reset()         { *m = SetImageFilterRequest{} }
func (m *SetImageFilterRequest) String() string { return proto.CompactTextString(m) }
func (*SetImageFilterRequest) ProtoMessage()    {}
func (*SetImageFilterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{22}
}

func (m *SetImageFilterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetImageFilterRequest.Unmarshal(m, b)
}
func (m *SetImageFilterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetImageFilterRequest.Marshal(b, m, deterministic)
}
func (m *SetImageFilterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetImageFilterRequest.Merge(m, src)
}
func (m *SetImageFilterRequest) XXX_Size() int {
	return xxx_messageInfo_SetImageFilterRequest.Size(m)
}
func (m *SetImageFilterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetImageFilterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetImageFilterRequest proto.InternalMessageInfo

func (m *SetImageFilterRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetImageFilterRequest) GetFilters() []*ImageFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type SetImageFilterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetImageFilterResponse) Reset()         { *m = SetImageFilterResponse{} }
func (m *SetImageFilterResponse) String() string { return proto.CompactTextString(m) }
func (*SetImageFilterResponse) ProtoMessage()    {}
func (*SetImageFilterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{23}
}

func (m *SetImageFilterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetImageFilterResponse.Unmarshal(m, b)
}
func (m *SetImageFilterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetImageFilterResponse.Marshal(b, m, deterministic)
}
func (m *SetImageFilterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetImageFilterResponse.Merge(m, src)
}
func (m *SetImageFilterResponse) XXX_Size() int {
	return xxx_messageInfo_SetImageFilterResponse.Size(m)
}
func (m *SetImageFilterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetImageFilterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetImageFilterResponse proto.InternalMessageInfo

type SetImageFilterMultiRequest struct {
	DeviceIDs            []uint32       `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Filters              []*ImageFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetImageFilterMultiRequest) Reset()         { *m = SetImageFilterMultiRequest{} }
func (m *SetImageFilterMultiRequest) String() string { return proto.CompactTextString(m) }
func (*SetImageFilterMultiRequest) ProtoMessage()    {}
func (*SetImageFilterMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{24}
}

func (m *SetImageFilterMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetImageFilterMultiRequest.Unmarshal(m, b)
}
func (m *SetImageFilterMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetImageFilterMultiRequest.Marshal(b, m, deterministic)
}
func (m *SetImageFilterMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetImageFilterMultiRequest.Merge(m, src)
}
func (m *SetImageFilterMultiRequest) XXX_Size() int {
	return xxx_messageInfo_SetImageFilterMultiRequest.Size(m)
}
func (m *SetImageFilterMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetImageFilterMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetImageFilterMultiRequest proto.InternalMessageInfo

func (m *SetImageFilterMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *SetImageFilterMultiRequest) GetFilters() []*ImageFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type SetImageFilterMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetImageFilterMultiResponse) Reset()         { *m = SetImageFilterMultiResponse{} }
func (m *SetImageFilterMultiResponse) String() string { return proto.CompactTextString(m) }
func (*SetImageFilterMultiResponse) ProtoMessage()    {}
func (*SetImageFilterMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{25}
}

func (m *SetImageFilterMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetImageFilterMultiResponse.Unmarshal(m, b)
}
func (m *SetImageFilterMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetImageFilterMultiResponse.Marshal(b, m, deterministic)
}
func (m *SetImageFilterMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetImageFilterMultiResponse.Merge(m, src)
}
func (m *SetImageFilterMultiResponse) XXX_Size() int {
	return xxx_messageInfo_SetImageFilterMultiResponse.Size(m)
}
func (m *SetImageFilterMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetImageFilterMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetImageFilterMultiResponse proto.InternalMessageInfo

func (m *SetImageFilterMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type ClearLogRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearLogRequest) Reset()         { *m = ClearLogRequest{} }
func (m *ClearLogRequest) String() string { return proto.CompactTextString(m) }
func (*ClearLogRequest) ProtoMessage()    {}
func (*ClearLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{26}
}

func (m *ClearLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearLogRequest.Unmarshal(m, b)
}
func (m *ClearLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearLogRequest.Marshal(b, m, deterministic)
}
func (m *ClearLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearLogRequest.Merge(m, src)
}
func (m *ClearLogRequest) XXX_Size() int {
	return xxx_messageInfo_ClearLogRequest.Size(m)
}
func (m *ClearLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearLogRequest proto.InternalMessageInfo

func (m *ClearLogRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type ClearLogResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearLogResponse) Reset()         { *m = ClearLogResponse{} }
func (m *ClearLogResponse) String() string { return proto.CompactTextString(m) }
func (*ClearLogResponse) ProtoMessage()    {}
func (*ClearLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{27}
}

func (m *ClearLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearLogResponse.Unmarshal(m, b)
}
func (m *ClearLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearLogResponse.Marshal(b, m, deterministic)
}
func (m *ClearLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearLogResponse.Merge(m, src)
}
func (m *ClearLogResponse) XXX_Size() int {
	return xxx_messageInfo_ClearLogResponse.Size(m)
}
func (m *ClearLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearLogResponse proto.InternalMessageInfo

type ClearLogMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearLogMultiRequest) Reset()         { *m = ClearLogMultiRequest{} }
func (m *ClearLogMultiRequest) String() string { return proto.CompactTextString(m) }
func (*ClearLogMultiRequest) ProtoMessage()    {}
func (*ClearLogMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{28}
}

func (m *ClearLogMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearLogMultiRequest.Unmarshal(m, b)
}
func (m *ClearLogMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearLogMultiRequest.Marshal(b, m, deterministic)
}
func (m *ClearLogMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearLogMultiRequest.Merge(m, src)
}
func (m *ClearLogMultiRequest) XXX_Size() int {
	return xxx_messageInfo_ClearLogMultiRequest.Size(m)
}
func (m *ClearLogMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearLogMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearLogMultiRequest proto.InternalMessageInfo

func (m *ClearLogMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type ClearLogMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ClearLogMultiResponse) Reset()         { *m = ClearLogMultiResponse{} }
func (m *ClearLogMultiResponse) String() string { return proto.CompactTextString(m) }
func (*ClearLogMultiResponse) ProtoMessage()    {}
func (*ClearLogMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{29}
}

func (m *ClearLogMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearLogMultiResponse.Unmarshal(m, b)
}
func (m *ClearLogMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearLogMultiResponse.Marshal(b, m, deterministic)
}
func (m *ClearLogMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearLogMultiResponse.Merge(m, src)
}
func (m *ClearLogMultiResponse) XXX_Size() int {
	return xxx_messageInfo_ClearLogMultiResponse.Size(m)
}
func (m *ClearLogMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearLogMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearLogMultiResponse proto.InternalMessageInfo

func (m *ClearLogMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

func init() {
	proto.RegisterType((*EventLog)(nil), "event.EventLog")
	proto.RegisterType((*EventFilter)(nil), "event.EventFilter")
	proto.RegisterType((*EnableMonitoringRequest)(nil), "event.EnableMonitoringRequest")
	proto.RegisterType((*EnableMonitoringResponse)(nil), "event.EnableMonitoringResponse")
	proto.RegisterType((*EnableMonitoringMultiRequest)(nil), "event.EnableMonitoringMultiRequest")
	proto.RegisterType((*EnableMonitoringMultiResponse)(nil), "event.EnableMonitoringMultiResponse")
	proto.RegisterType((*DisableMonitoringRequest)(nil), "event.DisableMonitoringRequest")
	proto.RegisterType((*DisableMonitoringResponse)(nil), "event.DisableMonitoringResponse")
	proto.RegisterType((*DisableMonitoringMultiRequest)(nil), "event.DisableMonitoringMultiRequest")
	proto.RegisterType((*DisableMonitoringMultiResponse)(nil), "event.DisableMonitoringMultiResponse")
	proto.RegisterType((*SubscribeRealtimeLogRequest)(nil), "event.SubscribeRealtimeLogRequest")
	proto.RegisterType((*SubscribeRealtimeLogResponse)(nil), "event.SubscribeRealtimeLogResponse")
	proto.RegisterType((*GetLogRequest)(nil), "event.GetLogRequest")
	proto.RegisterType((*GetLogResponse)(nil), "event.GetLogResponse")
	proto.RegisterType((*GetLogWithFilterRequest)(nil), "event.GetLogWithFilterRequest")
	proto.RegisterType((*GetLogWithFilterResponse)(nil), "event.GetLogWithFilterResponse")
	proto.RegisterType((*ImageLog)(nil), "event.ImageLog")
	proto.RegisterType((*GetImageLogRequest)(nil), "event.GetImageLogRequest")
	proto.RegisterType((*GetImageLogResponse)(nil), "event.GetImageLogResponse")
	proto.RegisterType((*ImageFilter)(nil), "event.ImageFilter")
	proto.RegisterType((*GetImageFilterRequest)(nil), "event.GetImageFilterRequest")
	proto.RegisterType((*GetImageFilterResponse)(nil), "event.GetImageFilterResponse")
	proto.RegisterType((*SetImageFilterRequest)(nil), "event.SetImageFilterRequest")
	proto.RegisterType((*SetImageFilterResponse)(nil), "event.SetImageFilterResponse")
	proto.RegisterType((*SetImageFilterMultiRequest)(nil), "event.SetImageFilterMultiRequest")
	proto.RegisterType((*SetImageFilterMultiResponse)(nil), "event.SetImageFilterMultiResponse")
	proto.RegisterType((*ClearLogRequest)(nil), "event.ClearLogRequest")
	proto.RegisterType((*ClearLogResponse)(nil), "event.ClearLogResponse")
	proto.RegisterType((*ClearLogMultiRequest)(nil), "event.ClearLogMultiRequest")
	proto.RegisterType((*ClearLogMultiResponse)(nil), "event.ClearLogMultiResponse")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 1014 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xdd, 0x6f, 0xdb, 0x54,
	0x14, 0x97, 0xd3, 0x26, 0x4d, 0x4e, 0xda, 0xae, 0xdc, 0x35, 0xa9, 0xe7, 0xa6, 0xc5, 0x5c, 0x8a,
	0xc8, 0x03, 0x64, 0xd0, 0xb2, 0x49, 0x08, 0x78, 0x80, 0x26, 0x2b, 0xd9, 0xda, 0x6d, 0xb2, 0x07,
	0x43, 0x88, 0x17, 0x27, 0xb9, 0x4b, 0x2c, 0x12, 0xbb, 0xf5, 0x47, 0x45, 0xf9, 0x5f, 0x78, 0x04,
	0x89, 0x7f, 0x12, 0xa1, 0xfb, 0xe5, 0xf8, 0x3a, 0x76, 0xd6, 0xa8, 0x52, 0xdf, 0x72, 0xcf, 0xe7,
	0xef, 0x9c, 0x7b, 0xee, 0xef, 0x38, 0x50, 0x27, 0xd7, 0xc4, 0x8b, 0x3a, 0x97, 0x81, 0x1f, 0xf9,
	0xa8, 0xcc, 0x0e, 0x46, 0x8d, 0x04, 0x01, 0x97, 0x18, 0xb5, 0xc8, 0x73, 0xf8, 0x4f, 0xfc, 0x9f,
	0x06, 0xd5, 0x1e, 0xd5, 0x9f, 0xfb, 0x63, 0xb4, 0x0d, 0xa5, 0x7e, 0x57, 0xd7, 0x4c, 0xad, 0xbd,
	0x65, 0x95, 0xfa, 0x5d, 0xd4, 0x82, 0x5a, 0xe4, 0xce, 0x48, 0x18, 0x39, 0xb3, 0x4b, 0xbd, 0xc4,
	0xc4, 0x73, 0x01, 0x32, 0xa0, 0x3a, 0x22, 0xd7, 0xee, 0x90, 0xf4, 0xbb, 0xfa, 0x1a, 0x53, 0x26,
	0x67, 0xd4, 0x84, 0x4a, 0x1c, 0x92, 0xa0, 0xdf, 0xd5, 0xd7, 0x4d, 0xad, 0x5d, 0xb3, 0xc4, 0x89,
	0xfa, 0x10, 0x2f, 0x72, 0xa3, 0x9b, 0x7e, 0x57, 0x2f, 0x73, 0x1f, 0x79, 0xa6, 0xd9, 0x18, 0xd2,
	0x53, 0x7f, 0x44, 0xf4, 0x0a, 0xcf, 0x96, 0x08, 0x90, 0x0e, 0x1b, 0x61, 0x3c, 0x60, 0xba, 0x0d,
	0xa6, 0x93, 0x47, 0x64, 0x42, 0xe5, 0xcd, 0xcb, 0xef, 0x5f, 0x90, 0x1b, 0xbd, 0x6a, 0x6a, 0xed,
	0xed, 0xe3, 0x6a, 0x87, 0x96, 0xf7, 0x82, 0xdc, 0x58, 0x42, 0x4e, 0xb3, 0x4e, 0x9c, 0xb0, 0x3f,
	0x73, 0xc6, 0x44, 0xaf, 0x99, 0x5a, 0xbb, 0x6a, 0x25, 0x67, 0xfc, 0x97, 0x06, 0x75, 0xd6, 0x80,
	0x67, 0xee, 0x34, 0x22, 0x41, 0x0a, 0xb9, 0xa6, 0x20, 0x6f, 0x41, 0x2d, 0x8c, 0x9c, 0x20, 0x7a,
	0xe3, 0xce, 0x88, 0xec, 0x45, 0x22, 0xa0, 0xe8, 0x88, 0x37, 0x62, 0x3a, 0xde, 0x0a, 0x79, 0x54,
	0xab, 0x5a, 0xcf, 0x56, 0x35, 0xc7, 0x5e, 0xce, 0xc7, 0x8e, 0x9f, 0xc0, 0x5e, 0xcf, 0x73, 0x06,
	0x53, 0x72, 0xe1, 0x7b, 0x6e, 0xe4, 0x07, 0xae, 0x37, 0xb6, 0xc8, 0x55, 0x4c, 0xc2, 0x48, 0xb9,
	0x00, 0x4d, 0xbd, 0x00, 0x6c, 0x80, 0xbe, 0xe8, 0x16, 0x5e, 0xfa, 0x5e, 0x48, 0xf0, 0xb7, 0xd0,
	0xca, 0xea, 0x2e, 0xe2, 0x69, 0xe4, 0xca, 0xb8, 0x2d, 0xa8, 0xc9, 0x38, 0xa1, 0xae, 0x99, 0x6b,
	0x14, 0x72, 0x22, 0xc0, 0x6f, 0xe1, 0xa0, 0xc0, 0x9b, 0x87, 0x47, 0x4f, 0x61, 0x93, 0x5b, 0xf7,
	0x82, 0xc0, 0x0f, 0x78, 0x84, 0xfa, 0x31, 0xea, 0xd0, 0xf9, 0x63, 0x22, 0x69, 0x69, 0x29, 0x76,
	0xf8, 0x29, 0xe8, 0x5d, 0x37, 0x5c, 0xbd, 0xd4, 0x7d, 0x78, 0x94, 0xe3, 0x27, 0x6a, 0xfd, 0x0e,
	0x0e, 0x16, 0x94, 0x2b, 0x14, 0xfb, 0x0b, 0x1c, 0x16, 0xb9, 0xdf, 0xb1, 0xda, 0x18, 0xf6, 0xed,
	0x78, 0x10, 0x0e, 0x03, 0x77, 0x40, 0x2c, 0xe2, 0x4c, 0xe9, 0xbb, 0x3a, 0xf7, 0xc7, 0x29, 0x58,
	0x57, 0x31, 0x89, 0x89, 0xed, 0xfe, 0x49, 0x58, 0xc5, 0x65, 0x6b, 0x2e, 0x50, 0x41, 0x97, 0x32,
	0xa0, 0xd9, 0x23, 0xa3, 0x13, 0x46, 0x95, 0x6b, 0xe6, 0x5a, 0xbb, 0x6c, 0x25, 0x67, 0x7a, 0xf7,
	0xf9, 0x69, 0x45, 0x39, 0x2d, 0xa8, 0x4d, 0xfd, 0xf1, 0xe9, 0xc4, 0xf1, 0x92, 0x17, 0x30, 0x17,
	0xe0, 0x2b, 0xd8, 0x3a, 0x23, 0x51, 0x0a, 0xe6, 0x92, 0x7b, 0x41, 0x18, 0x36, 0xd9, 0x03, 0xe9,
	0xf1, 0xdc, 0xe2, 0xd1, 0x28, 0x32, 0x64, 0x42, 0x7d, 0xe6, 0xfc, 0xf1, 0x32, 0x9e, 0xbd, 0x7a,
	0x77, 0xee, 0x8f, 0xc5, 0xdb, 0x49, 0x8b, 0xf0, 0xd7, 0xb0, 0x2d, 0x53, 0x0a, 0x88, 0x9f, 0x42,
	0x85, 0x95, 0x23, 0x7b, 0xfd, 0xa0, 0xc3, 0xd9, 0x4e, 0xd2, 0x98, 0x25, 0xd4, 0xf8, 0x5f, 0x0d,
	0xf6, 0xb8, 0xef, 0x5b, 0x37, 0x9a, 0xf0, 0xf7, 0x7d, 0x6f, 0xc0, 0xd1, 0x67, 0xb0, 0xf1, 0x8e,
	0xa5, 0x0c, 0xf5, 0x75, 0x39, 0x13, 0x73, 0x9c, 0x02, 0x8d, 0x34, 0xc1, 0xa7, 0xa0, 0x2f, 0x42,
	0x5d, 0xb5, 0xe0, 0x7f, 0x34, 0xa8, 0x32, 0x56, 0xbb, 0x1f, 0x32, 0x57, 0xa8, 0xad, 0x9c, 0xa5,
	0x36, 0x03, 0xaa, 0xcf, 0x5f, 0x9f, 0x71, 0xd2, 0xa5, 0x6c, 0xbe, 0x69, 0x25, 0x67, 0x7c, 0x0d,
	0xe8, 0x8c, 0x44, 0x12, 0xea, 0xfd, 0x0d, 0xd3, 0x8f, 0xf0, 0x50, 0xc9, 0x2b, 0x1a, 0xfc, 0x25,
	0xd4, 0x5d, 0x2a, 0xeb, 0xe5, 0x75, 0x39, 0xb1, 0x4e, 0xdb, 0x60, 0x1b, 0xea, 0x4c, 0x21, 0xb6,
	0xc6, 0x11, 0x6c, 0xcd, 0x1c, 0xd7, 0xeb, 0x25, 0xed, 0xe0, 0xf8, 0x55, 0x21, 0x3a, 0x04, 0x08,
	0x87, 0x13, 0x32, 0x8a, 0xa7, 0x24, 0x29, 0x21, 0x25, 0xc1, 0x27, 0xd0, 0x90, 0xf0, 0x6e, 0x3d,
	0xad, 0xf8, 0x19, 0x34, 0xb3, 0x4e, 0xa2, 0xac, 0xd4, 0x04, 0x6a, 0xca, 0x04, 0xa6, 0x8d, 0x93,
	0x09, 0x74, 0xa0, 0x61, 0xaf, 0x9a, 0x3c, 0x9d, 0xa2, 0xf4, 0xfe, 0x14, 0x3a, 0x34, 0xed, 0x5c,
	0xa8, 0x78, 0x02, 0x86, 0xaa, 0xb9, 0x3d, 0x47, 0xaf, 0x88, 0xe1, 0x27, 0xd8, 0xcf, 0xcd, 0x74,
	0x47, 0x3a, 0xff, 0x1c, 0x1e, 0x9c, 0x4e, 0x89, 0x13, 0xdc, 0x6e, 0x9c, 0x31, 0x82, 0x9d, 0xb9,
	0xb9, 0xe8, 0xc1, 0x57, 0xb0, 0x2b, 0x65, 0x2b, 0x6c, 0xa8, 0x57, 0xd0, 0xc8, 0x78, 0xdd, 0xad,
	0x92, 0xe3, 0xbf, 0xab, 0x50, 0x66, 0x23, 0x8b, 0x6c, 0xd8, 0xc9, 0x6e, 0x7a, 0x74, 0x28, 0xb9,
	0x27, 0xff, 0x9b, 0xc4, 0xf8, 0xb0, 0x50, 0x2f, 0x60, 0x0d, 0xa0, 0x91, 0xfb, 0xf9, 0x80, 0x3e,
	0x2e, 0xf0, 0x4c, 0xf7, 0xc2, 0x38, 0x5a, 0x6e, 0x24, 0x72, 0xfc, 0x0c, 0x1f, 0x2c, 0x6c, 0x6d,
	0x24, 0x91, 0x15, 0x7d, 0x63, 0x18, 0x66, 0xb1, 0x81, 0x88, 0x4b, 0xa0, 0x99, 0xff, 0x35, 0x80,
	0x8e, 0x8a, 0x7c, 0x15, 0xf4, 0x9f, 0xbc, 0xc7, 0x4a, 0xa4, 0xb9, 0x80, 0xdd, 0xbc, 0x1d, 0x8d,
	0xb0, 0x70, 0x5f, 0xf2, 0xdd, 0x60, 0x64, 0x77, 0xc3, 0x17, 0x1a, 0x7a, 0x02, 0x15, 0xbe, 0x5a,
	0xd0, 0xae, 0x50, 0x2a, 0x3b, 0xdc, 0x68, 0x64, 0xa4, 0x02, 0x85, 0x0d, 0x3b, 0xd9, 0x8d, 0x94,
	0xdc, 0x7e, 0xc1, 0x56, 0x4d, 0x6e, 0xbf, 0x70, 0x95, 0x75, 0xa1, 0x9e, 0x22, 0x60, 0xf4, 0x68,
	0x6e, 0x9f, 0x59, 0x06, 0x86, 0x91, 0xa7, 0x4a, 0x1a, 0xb4, 0xad, 0x52, 0x1e, 0x6a, 0x65, 0xac,
	0x55, 0x58, 0x07, 0x05, 0xda, 0x79, 0x38, 0x3b, 0x3f, 0x9c, 0xbd, 0x34, 0x5c, 0x3e, 0x97, 0xa1,
	0xdf, 0xe0, 0x61, 0x0e, 0xc3, 0xa0, 0x8f, 0x72, 0xbd, 0x94, 0xf9, 0xc0, 0xcb, 0x4c, 0x44, 0xf4,
	0x6f, 0xa0, 0x2a, 0xdf, 0x3b, 0x6a, 0x0a, 0xfb, 0x0c, 0xf3, 0x18, 0x7b, 0x0b, 0x72, 0xe1, 0xfc,
	0x1c, 0xb6, 0x14, 0xb2, 0x40, 0xfb, 0x19, 0x4b, 0x05, 0x4e, 0x2b, 0x5f, 0xc9, 0x63, 0xfd, 0x70,
	0x02, 0xfa, 0xd0, 0x9f, 0x75, 0xc2, 0xf8, 0x32, 0x20, 0x74, 0xcd, 0x0d, 0x3b, 0xe1, 0xe8, 0x77,
	0xee, 0xf1, 0x5a, 0xfb, 0xb5, 0x31, 0x70, 0x7d, 0xba, 0x9c, 0x1f, 0x87, 0x24, 0xa0, 0xe4, 0xf2,
	0x98, 0x29, 0x06, 0x15, 0xf6, 0xaf, 0xf3, 0xe4, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xeb,
	0x5d, 0x15, 0xa1, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventClient is the client API for Event service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventClient interface {
	EnableMonitoring(ctx context.Context, in *EnableMonitoringRequest, opts ...grpc.CallOption) (*EnableMonitoringResponse, error)
	EnableMonitoringMulti(ctx context.Context, in *EnableMonitoringMultiRequest, opts ...grpc.CallOption) (*EnableMonitoringMultiResponse, error)
	DisableMonitoring(ctx context.Context, in *DisableMonitoringRequest, opts ...grpc.CallOption) (*DisableMonitoringResponse, error)
	DisableMonitoringMulti(ctx context.Context, in *DisableMonitoringMultiRequest, opts ...grpc.CallOption) (*DisableMonitoringMultiResponse, error)
	SubscribeRealtimeLog(ctx context.Context, in *SubscribeRealtimeLogRequest, opts ...grpc.CallOption) (Event_SubscribeRealtimeLogClient, error)
	GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*GetLogResponse, error)
	GetLogWithFilter(ctx context.Context, in *GetLogWithFilterRequest, opts ...grpc.CallOption) (*GetLogWithFilterResponse, error)
	GetImageLog(ctx context.Context, in *GetImageLogRequest, opts ...grpc.CallOption) (*GetImageLogResponse, error)
	GetImageFilter(ctx context.Context, in *GetImageFilterRequest, opts ...grpc.CallOption) (*GetImageFilterResponse, error)
	SetImageFilter(ctx context.Context, in *SetImageFilterRequest, opts ...grpc.CallOption) (*SetImageFilterResponse, error)
	SetImageFilterMulti(ctx context.Context, in *SetImageFilterMultiRequest, opts ...grpc.CallOption) (*SetImageFilterMultiResponse, error)
	ClearLog(ctx context.Context, in *ClearLogRequest, opts ...grpc.CallOption) (*ClearLogResponse, error)
	ClearLogMulti(ctx context.Context, in *ClearLogMultiRequest, opts ...grpc.CallOption) (*ClearLogMultiResponse, error)
}

type eventClient struct {
	cc *grpc.ClientConn
}

func NewEventClient(cc *grpc.ClientConn) EventClient {
	return &eventClient{cc}
}

func (c *eventClient) EnableMonitoring(ctx context.Context, in *EnableMonitoringRequest, opts ...grpc.CallOption) (*EnableMonitoringResponse, error) {
	out := new(EnableMonitoringResponse)
	err := c.cc.Invoke(ctx, "/event.Event/EnableMonitoring", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) EnableMonitoringMulti(ctx context.Context, in *EnableMonitoringMultiRequest, opts ...grpc.CallOption) (*EnableMonitoringMultiResponse, error) {
	out := new(EnableMonitoringMultiResponse)
	err := c.cc.Invoke(ctx, "/event.Event/EnableMonitoringMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) DisableMonitoring(ctx context.Context, in *DisableMonitoringRequest, opts ...grpc.CallOption) (*DisableMonitoringResponse, error) {
	out := new(DisableMonitoringResponse)
	err := c.cc.Invoke(ctx, "/event.Event/DisableMonitoring", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) DisableMonitoringMulti(ctx context.Context, in *DisableMonitoringMultiRequest, opts ...grpc.CallOption) (*DisableMonitoringMultiResponse, error) {
	out := new(DisableMonitoringMultiResponse)
	err := c.cc.Invoke(ctx, "/event.Event/DisableMonitoringMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) SubscribeRealtimeLog(ctx context.Context, in *SubscribeRealtimeLogRequest, opts ...grpc.CallOption) (Event_SubscribeRealtimeLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Event_serviceDesc.Streams[0], "/event.Event/SubscribeRealtimeLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventSubscribeRealtimeLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Event_SubscribeRealtimeLogClient interface {
	Recv() (*EventLog, error)
	grpc.ClientStream
}

type eventSubscribeRealtimeLogClient struct {
	grpc.ClientStream
}

func (x *eventSubscribeRealtimeLogClient) Recv() (*EventLog, error) {
	m := new(EventLog)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventClient) GetLog(ctx context.Context, in *GetLogRequest, opts ...grpc.CallOption) (*GetLogResponse, error) {
	out := new(GetLogResponse)
	err := c.cc.Invoke(ctx, "/event.Event/GetLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) GetLogWithFilter(ctx context.Context, in *GetLogWithFilterRequest, opts ...grpc.CallOption) (*GetLogWithFilterResponse, error) {
	out := new(GetLogWithFilterResponse)
	err := c.cc.Invoke(ctx, "/event.Event/GetLogWithFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) GetImageLog(ctx context.Context, in *GetImageLogRequest, opts ...grpc.CallOption) (*GetImageLogResponse, error) {
	out := new(GetImageLogResponse)
	err := c.cc.Invoke(ctx, "/event.Event/GetImageLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) GetImageFilter(ctx context.Context, in *GetImageFilterRequest, opts ...grpc.CallOption) (*GetImageFilterResponse, error) {
	out := new(GetImageFilterResponse)
	err := c.cc.Invoke(ctx, "/event.Event/GetImageFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) SetImageFilter(ctx context.Context, in *SetImageFilterRequest, opts ...grpc.CallOption) (*SetImageFilterResponse, error) {
	out := new(SetImageFilterResponse)
	err := c.cc.Invoke(ctx, "/event.Event/SetImageFilter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) SetImageFilterMulti(ctx context.Context, in *SetImageFilterMultiRequest, opts ...grpc.CallOption) (*SetImageFilterMultiResponse, error) {
	out := new(SetImageFilterMultiResponse)
	err := c.cc.Invoke(ctx, "/event.Event/SetImageFilterMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) ClearLog(ctx context.Context, in *ClearLogRequest, opts ...grpc.CallOption) (*ClearLogResponse, error) {
	out := new(ClearLogResponse)
	err := c.cc.Invoke(ctx, "/event.Event/ClearLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) ClearLogMulti(ctx context.Context, in *ClearLogMultiRequest, opts ...grpc.CallOption) (*ClearLogMultiResponse, error) {
	out := new(ClearLogMultiResponse)
	err := c.cc.Invoke(ctx, "/event.Event/ClearLogMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServer is the server API for Event service.
type EventServer interface {
	EnableMonitoring(context.Context, *EnableMonitoringRequest) (*EnableMonitoringResponse, error)
	EnableMonitoringMulti(context.Context, *EnableMonitoringMultiRequest) (*EnableMonitoringMultiResponse, error)
	DisableMonitoring(context.Context, *DisableMonitoringRequest) (*DisableMonitoringResponse, error)
	DisableMonitoringMulti(context.Context, *DisableMonitoringMultiRequest) (*DisableMonitoringMultiResponse, error)
	SubscribeRealtimeLog(*SubscribeRealtimeLogRequest, Event_SubscribeRealtimeLogServer) error
	GetLog(context.Context, *GetLogRequest) (*GetLogResponse, error)
	GetLogWithFilter(context.Context, *GetLogWithFilterRequest) (*GetLogWithFilterResponse, error)
	GetImageLog(context.Context, *GetImageLogRequest) (*GetImageLogResponse, error)
	GetImageFilter(context.Context, *GetImageFilterRequest) (*GetImageFilterResponse, error)
	SetImageFilter(context.Context, *SetImageFilterRequest) (*SetImageFilterResponse, error)
	SetImageFilterMulti(context.Context, *SetImageFilterMultiRequest) (*SetImageFilterMultiResponse, error)
	ClearLog(context.Context, *ClearLogRequest) (*ClearLogResponse, error)
	ClearLogMulti(context.Context, *ClearLogMultiRequest) (*ClearLogMultiResponse, error)
}

func RegisterEventServer(s *grpc.Server, srv EventServer) {
	s.RegisterService(&_Event_serviceDesc, srv)
}

func _Event_EnableMonitoring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableMonitoringRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).EnableMonitoring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/EnableMonitoring",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).EnableMonitoring(ctx, req.(*EnableMonitoringRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_EnableMonitoringMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableMonitoringMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).EnableMonitoringMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/EnableMonitoringMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).EnableMonitoringMulti(ctx, req.(*EnableMonitoringMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_DisableMonitoring_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableMonitoringRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).DisableMonitoring(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/DisableMonitoring",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).DisableMonitoring(ctx, req.(*DisableMonitoringRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_DisableMonitoringMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableMonitoringMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).DisableMonitoringMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/DisableMonitoringMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).DisableMonitoringMulti(ctx, req.(*DisableMonitoringMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_SubscribeRealtimeLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRealtimeLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventServer).SubscribeRealtimeLog(m, &eventSubscribeRealtimeLogServer{stream})
}

type Event_SubscribeRealtimeLogServer interface {
	Send(*EventLog) error
	grpc.ServerStream
}

type eventSubscribeRealtimeLogServer struct {
	grpc.ServerStream
}

func (x *eventSubscribeRealtimeLogServer) Send(m *EventLog) error {
	return x.ServerStream.SendMsg(m)
}

func _Event_GetLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).GetLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/GetLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).GetLog(ctx, req.(*GetLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_GetLogWithFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLogWithFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).GetLogWithFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/GetLogWithFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).GetLogWithFilter(ctx, req.(*GetLogWithFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_GetImageLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImageLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).GetImageLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/GetImageLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).GetImageLog(ctx, req.(*GetImageLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_GetImageFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetImageFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).GetImageFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/GetImageFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).GetImageFilter(ctx, req.(*GetImageFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_SetImageFilter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetImageFilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).SetImageFilter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/SetImageFilter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).SetImageFilter(ctx, req.(*SetImageFilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_SetImageFilterMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetImageFilterMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).SetImageFilterMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/SetImageFilterMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).SetImageFilterMulti(ctx, req.(*SetImageFilterMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_ClearLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).ClearLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/ClearLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).ClearLog(ctx, req.(*ClearLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_ClearLogMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearLogMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).ClearLogMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/event.Event/ClearLogMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).ClearLogMulti(ctx, req.(*ClearLogMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Event_serviceDesc = grpc.ServiceDesc{
	ServiceName: "event.Event",
	HandlerType: (*EventServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnableMonitoring",
			Handler:    _Event_EnableMonitoring_Handler,
		},
		{
			MethodName: "EnableMonitoringMulti",
			Handler:    _Event_EnableMonitoringMulti_Handler,
		},
		{
			MethodName: "DisableMonitoring",
			Handler:    _Event_DisableMonitoring_Handler,
		},
		{
			MethodName: "DisableMonitoringMulti",
			Handler:    _Event_DisableMonitoringMulti_Handler,
		},
		{
			MethodName: "GetLog",
			Handler:    _Event_GetLog_Handler,
		},
		{
			MethodName: "GetLogWithFilter",
			Handler:    _Event_GetLogWithFilter_Handler,
		},
		{
			MethodName: "GetImageLog",
			Handler:    _Event_GetImageLog_Handler,
		},
		{
			MethodName: "GetImageFilter",
			Handler:    _Event_GetImageFilter_Handler,
		},
		{
			MethodName: "SetImageFilter",
			Handler:    _Event_SetImageFilter_Handler,
		},
		{
			MethodName: "SetImageFilterMulti",
			Handler:    _Event_SetImageFilterMulti_Handler,
		},
		{
			MethodName: "ClearLog",
			Handler:    _Event_ClearLog_Handler,
		},
		{
			MethodName: "ClearLogMulti",
			Handler:    _Event_ClearLogMulti_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeRealtimeLog",
			Handler:       _Event_SubscribeRealtimeLog_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "event.proto",
}
