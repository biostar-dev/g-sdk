// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tna.proto

package tna

import (
	err "biostar/service/err"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Mode int32

const (
	Mode_UNUSED      Mode = 0
	Mode_BY_USER     Mode = 1
	Mode_BY_SCHEDULE Mode = 2
	Mode_LAST_CHOICE Mode = 3
	Mode_FIXED       Mode = 4
)

var Mode_name = map[int32]string{
	0: "UNUSED",
	1: "BY_USER",
	2: "BY_SCHEDULE",
	3: "LAST_CHOICE",
	4: "FIXED",
}

var Mode_value = map[string]int32{
	"UNUSED":      0,
	"BY_USER":     1,
	"BY_SCHEDULE": 2,
	"LAST_CHOICE": 3,
	"FIXED":       4,
}

func (x Mode) String() string {
	return proto.EnumName(Mode_name, int32(x))
}

func (Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{0}
}

type Key int32

const (
	Key_UNSPECIFIED Key = 0
	Key_KEY_1       Key = 1
	Key_KEY_2       Key = 2
	Key_KEY_3       Key = 3
	Key_KEY_4       Key = 4
	Key_KEY_5       Key = 5
	Key_KEY_6       Key = 6
	Key_KEY_7       Key = 7
	Key_KEY_8       Key = 8
	Key_KEY_9       Key = 9
	Key_KEY_10      Key = 10
	Key_KEY_11      Key = 11
	Key_KEY_12      Key = 12
	Key_KEY_13      Key = 13
	Key_KEY_14      Key = 14
	Key_KEY_15      Key = 15
	Key_KEY_16      Key = 16
)

var Key_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "KEY_1",
	2:  "KEY_2",
	3:  "KEY_3",
	4:  "KEY_4",
	5:  "KEY_5",
	6:  "KEY_6",
	7:  "KEY_7",
	8:  "KEY_8",
	9:  "KEY_9",
	10: "KEY_10",
	11: "KEY_11",
	12: "KEY_12",
	13: "KEY_13",
	14: "KEY_14",
	15: "KEY_15",
	16: "KEY_16",
}

var Key_value = map[string]int32{
	"UNSPECIFIED": 0,
	"KEY_1":       1,
	"KEY_2":       2,
	"KEY_3":       3,
	"KEY_4":       4,
	"KEY_5":       5,
	"KEY_6":       6,
	"KEY_7":       7,
	"KEY_8":       8,
	"KEY_9":       9,
	"KEY_10":      10,
	"KEY_11":      11,
	"KEY_12":      12,
	"KEY_13":      13,
	"KEY_14":      14,
	"KEY_15":      15,
	"KEY_16":      16,
}

func (x Key) String() string {
	return proto.EnumName(Key_name, int32(x))
}

func (Key) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{1}
}

type TNAConfig struct {
	Mode                 Mode     `protobuf:"varint,1,opt,name=mode,proto3,enum=tna.Mode" json:"mode,omitempty"`
	Key                  Key      `protobuf:"varint,2,opt,name=key,proto3,enum=tna.Key" json:"key,omitempty"`
	IsRequired           bool     `protobuf:"varint,3,opt,name=isRequired,proto3" json:"isRequired,omitempty"`
	Schedules            []uint32 `protobuf:"varint,4,rep,packed,name=schedules,proto3" json:"schedules,omitempty"`
	Labels               []string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TNAConfig) Reset()         { *m = TNAConfig{} }
func (m *TNAConfig) String() string { return proto.CompactTextString(m) }
func (*TNAConfig) ProtoMessage()    {}
func (*TNAConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{0}
}

func (m *TNAConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TNAConfig.Unmarshal(m, b)
}
func (m *TNAConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TNAConfig.Marshal(b, m, deterministic)
}
func (m *TNAConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TNAConfig.Merge(m, src)
}
func (m *TNAConfig) XXX_Size() int {
	return xxx_messageInfo_TNAConfig.Size(m)
}
func (m *TNAConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TNAConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TNAConfig proto.InternalMessageInfo

func (m *TNAConfig) GetMode() Mode {
	if m != nil {
		return m.Mode
	}
	return Mode_UNUSED
}

func (m *TNAConfig) GetKey() Key {
	if m != nil {
		return m.Key
	}
	return Key_UNSPECIFIED
}

func (m *TNAConfig) GetIsRequired() bool {
	if m != nil {
		return m.IsRequired
	}
	return false
}

func (m *TNAConfig) GetSchedules() []uint32 {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func (m *TNAConfig) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type GetConfigRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigRequest) Reset()         { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()    {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{1}
}

func (m *GetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigRequest.Unmarshal(m, b)
}
func (m *GetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigRequest.Merge(m, src)
}
func (m *GetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigRequest.Size(m)
}
func (m *GetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigRequest proto.InternalMessageInfo

func (m *GetConfigRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetConfigResponse struct {
	Config               *TNAConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetConfigResponse) Reset()         { *m = GetConfigResponse{} }
func (m *GetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigResponse) ProtoMessage()    {}
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{2}
}

func (m *GetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResponse.Unmarshal(m, b)
}
func (m *GetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResponse.Merge(m, src)
}
func (m *GetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigResponse.Size(m)
}
func (m *GetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResponse proto.InternalMessageInfo

func (m *GetConfigResponse) GetConfig() *TNAConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigRequest struct {
	DeviceID             uint32     `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Config               *TNAConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetConfigRequest) Reset()         { *m = SetConfigRequest{} }
func (m *SetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest) ProtoMessage()    {}
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{3}
}

func (m *SetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest.Unmarshal(m, b)
}
func (m *SetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest.Merge(m, src)
}
func (m *SetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest.Size(m)
}
func (m *SetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest proto.InternalMessageInfo

func (m *SetConfigRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetConfigRequest) GetConfig() *TNAConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigResponse) Reset()         { *m = SetConfigResponse{} }
func (m *SetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*SetConfigResponse) ProtoMessage()    {}
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{4}
}

func (m *SetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigResponse.Unmarshal(m, b)
}
func (m *SetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigResponse.Marshal(b, m, deterministic)
}
func (m *SetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigResponse.Merge(m, src)
}
func (m *SetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_SetConfigResponse.Size(m)
}
func (m *SetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigResponse proto.InternalMessageInfo

type SetConfigMultiRequest struct {
	DeviceIDs            []uint32   `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Config               *TNAConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetConfigMultiRequest) Reset()         { *m = SetConfigMultiRequest{} }
func (m *SetConfigMultiRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigMultiRequest) ProtoMessage()    {}
func (*SetConfigMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{5}
}

func (m *SetConfigMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigMultiRequest.Unmarshal(m, b)
}
func (m *SetConfigMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigMultiRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigMultiRequest.Merge(m, src)
}
func (m *SetConfigMultiRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigMultiRequest.Size(m)
}
func (m *SetConfigMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigMultiRequest proto.InternalMessageInfo

func (m *SetConfigMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *SetConfigMultiRequest) GetConfig() *TNAConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetConfigMultiResponse) Reset()         { *m = SetConfigMultiResponse{} }
func (m *SetConfigMultiResponse) String() string { return proto.CompactTextString(m) }
func (*SetConfigMultiResponse) ProtoMessage()    {}
func (*SetConfigMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{6}
}

func (m *SetConfigMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigMultiResponse.Unmarshal(m, b)
}
func (m *SetConfigMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigMultiResponse.Marshal(b, m, deterministic)
}
func (m *SetConfigMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigMultiResponse.Merge(m, src)
}
func (m *SetConfigMultiResponse) XXX_Size() int {
	return xxx_messageInfo_SetConfigMultiResponse.Size(m)
}
func (m *SetConfigMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigMultiResponse proto.InternalMessageInfo

func (m *SetConfigMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type JobCode struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobCode) Reset()         { *m = JobCode{} }
func (m *JobCode) String() string { return proto.CompactTextString(m) }
func (*JobCode) ProtoMessage()    {}
func (*JobCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{7}
}

func (m *JobCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCode.Unmarshal(m, b)
}
func (m *JobCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCode.Marshal(b, m, deterministic)
}
func (m *JobCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCode.Merge(m, src)
}
func (m *JobCode) XXX_Size() int {
	return xxx_messageInfo_JobCode.Size(m)
}
func (m *JobCode) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCode.DiscardUnknown(m)
}

var xxx_messageInfo_JobCode proto.InternalMessageInfo

func (m *JobCode) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *JobCode) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type TNALog struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Timestamp            uint32   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceID             uint32   `protobuf:"varint,3,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	UserID               string   `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	EventCode            uint32   `protobuf:"varint,5,opt,name=eventCode,proto3" json:"eventCode,omitempty"`
	TNAKey               Key      `protobuf:"varint,6,opt,name=TNAKey,proto3,enum=tna.Key" json:"TNAKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TNALog) Reset()         { *m = TNALog{} }
func (m *TNALog) String() string { return proto.CompactTextString(m) }
func (*TNALog) ProtoMessage()    {}
func (*TNALog) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{8}
}

func (m *TNALog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TNALog.Unmarshal(m, b)
}
func (m *TNALog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TNALog.Marshal(b, m, deterministic)
}
func (m *TNALog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TNALog.Merge(m, src)
}
func (m *TNALog) XXX_Size() int {
	return xxx_messageInfo_TNALog.Size(m)
}
func (m *TNALog) XXX_DiscardUnknown() {
	xxx_messageInfo_TNALog.DiscardUnknown(m)
}

var xxx_messageInfo_TNALog proto.InternalMessageInfo

func (m *TNALog) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *TNALog) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TNALog) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *TNALog) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *TNALog) GetEventCode() uint32 {
	if m != nil {
		return m.EventCode
	}
	return 0
}

func (m *TNALog) GetTNAKey() Key {
	if m != nil {
		return m.TNAKey
	}
	return Key_UNSPECIFIED
}

type TNAEventFilter struct {
	StartTime            uint32   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              uint32   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	UserIDs              []string `protobuf:"bytes,3,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	TNAKeys              []Key    `protobuf:"varint,4,rep,packed,name=TNAKeys,proto3,enum=tna.Key" json:"TNAKeys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TNAEventFilter) Reset()         { *m = TNAEventFilter{} }
func (m *TNAEventFilter) String() string { return proto.CompactTextString(m) }
func (*TNAEventFilter) ProtoMessage()    {}
func (*TNAEventFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{9}
}

func (m *TNAEventFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TNAEventFilter.Unmarshal(m, b)
}
func (m *TNAEventFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TNAEventFilter.Marshal(b, m, deterministic)
}
func (m *TNAEventFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TNAEventFilter.Merge(m, src)
}
func (m *TNAEventFilter) XXX_Size() int {
	return xxx_messageInfo_TNAEventFilter.Size(m)
}
func (m *TNAEventFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TNAEventFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TNAEventFilter proto.InternalMessageInfo

func (m *TNAEventFilter) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *TNAEventFilter) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *TNAEventFilter) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

func (m *TNAEventFilter) GetTNAKeys() []Key {
	if m != nil {
		return m.TNAKeys
	}
	return nil
}

type JobCodeLog struct {
	ID                   uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Timestamp            uint32   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceID             uint32   `protobuf:"varint,3,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	UserID               string   `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	EventCode            uint32   `protobuf:"varint,5,opt,name=eventCode,proto3" json:"eventCode,omitempty"`
	JobCode              uint32   `protobuf:"varint,6,opt,name=jobCode,proto3" json:"jobCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobCodeLog) Reset()         { *m = JobCodeLog{} }
func (m *JobCodeLog) String() string { return proto.CompactTextString(m) }
func (*JobCodeLog) ProtoMessage()    {}
func (*JobCodeLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{10}
}

func (m *JobCodeLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCodeLog.Unmarshal(m, b)
}
func (m *JobCodeLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCodeLog.Marshal(b, m, deterministic)
}
func (m *JobCodeLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCodeLog.Merge(m, src)
}
func (m *JobCodeLog) XXX_Size() int {
	return xxx_messageInfo_JobCodeLog.Size(m)
}
func (m *JobCodeLog) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCodeLog.DiscardUnknown(m)
}

var xxx_messageInfo_JobCodeLog proto.InternalMessageInfo

func (m *JobCodeLog) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *JobCodeLog) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *JobCodeLog) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *JobCodeLog) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *JobCodeLog) GetEventCode() uint32 {
	if m != nil {
		return m.EventCode
	}
	return 0
}

func (m *JobCodeLog) GetJobCode() uint32 {
	if m != nil {
		return m.JobCode
	}
	return 0
}

type JobCodeEventFilter struct {
	StartTime            uint32   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              uint32   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	UserIDs              []string `protobuf:"bytes,3,rep,name=userIDs,proto3" json:"userIDs,omitempty"`
	JobCodes             []uint32 `protobuf:"varint,4,rep,packed,name=jobCodes,proto3" json:"jobCodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobCodeEventFilter) Reset()         { *m = JobCodeEventFilter{} }
func (m *JobCodeEventFilter) String() string { return proto.CompactTextString(m) }
func (*JobCodeEventFilter) ProtoMessage()    {}
func (*JobCodeEventFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{11}
}

func (m *JobCodeEventFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobCodeEventFilter.Unmarshal(m, b)
}
func (m *JobCodeEventFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobCodeEventFilter.Marshal(b, m, deterministic)
}
func (m *JobCodeEventFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobCodeEventFilter.Merge(m, src)
}
func (m *JobCodeEventFilter) XXX_Size() int {
	return xxx_messageInfo_JobCodeEventFilter.Size(m)
}
func (m *JobCodeEventFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_JobCodeEventFilter.DiscardUnknown(m)
}

var xxx_messageInfo_JobCodeEventFilter proto.InternalMessageInfo

func (m *JobCodeEventFilter) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *JobCodeEventFilter) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *JobCodeEventFilter) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

func (m *JobCodeEventFilter) GetJobCodes() []uint32 {
	if m != nil {
		return m.JobCodes
	}
	return nil
}

type GetTNALogRequest struct {
	DeviceID             uint32          `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	StartEventID         uint32          `protobuf:"varint,2,opt,name=startEventID,proto3" json:"startEventID,omitempty"`
	MaxNumOfLog          uint32          `protobuf:"varint,3,opt,name=maxNumOfLog,proto3" json:"maxNumOfLog,omitempty"`
	Filter               *TNAEventFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetTNALogRequest) Reset()         { *m = GetTNALogRequest{} }
func (m *GetTNALogRequest) String() string { return proto.CompactTextString(m) }
func (*GetTNALogRequest) ProtoMessage()    {}
func (*GetTNALogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{12}
}

func (m *GetTNALogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTNALogRequest.Unmarshal(m, b)
}
func (m *GetTNALogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTNALogRequest.Marshal(b, m, deterministic)
}
func (m *GetTNALogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTNALogRequest.Merge(m, src)
}
func (m *GetTNALogRequest) XXX_Size() int {
	return xxx_messageInfo_GetTNALogRequest.Size(m)
}
func (m *GetTNALogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTNALogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTNALogRequest proto.InternalMessageInfo

func (m *GetTNALogRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *GetTNALogRequest) GetStartEventID() uint32 {
	if m != nil {
		return m.StartEventID
	}
	return 0
}

func (m *GetTNALogRequest) GetMaxNumOfLog() uint32 {
	if m != nil {
		return m.MaxNumOfLog
	}
	return 0
}

func (m *GetTNALogRequest) GetFilter() *TNAEventFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type GetTNALogResponse struct {
	TNAEvents            []*TNALog `protobuf:"bytes,1,rep,name=TNAEvents,proto3" json:"TNAEvents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetTNALogResponse) Reset()         { *m = GetTNALogResponse{} }
func (m *GetTNALogResponse) String() string { return proto.CompactTextString(m) }
func (*GetTNALogResponse) ProtoMessage()    {}
func (*GetTNALogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{13}
}

func (m *GetTNALogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTNALogResponse.Unmarshal(m, b)
}
func (m *GetTNALogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTNALogResponse.Marshal(b, m, deterministic)
}
func (m *GetTNALogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTNALogResponse.Merge(m, src)
}
func (m *GetTNALogResponse) XXX_Size() int {
	return xxx_messageInfo_GetTNALogResponse.Size(m)
}
func (m *GetTNALogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTNALogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTNALogResponse proto.InternalMessageInfo

func (m *GetTNALogResponse) GetTNAEvents() []*TNALog {
	if m != nil {
		return m.TNAEvents
	}
	return nil
}

type GetJobCodeLogRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	StartEventID         uint32   `protobuf:"varint,2,opt,name=startEventID,proto3" json:"startEventID,omitempty"`
	MaxNumOfLog          uint32   `protobuf:"varint,3,opt,name=maxNumOfLog,proto3" json:"maxNumOfLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobCodeLogRequest) Reset()         { *m = GetJobCodeLogRequest{} }
func (m *GetJobCodeLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobCodeLogRequest) ProtoMessage()    {}
func (*GetJobCodeLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{14}
}

func (m *GetJobCodeLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobCodeLogRequest.Unmarshal(m, b)
}
func (m *GetJobCodeLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobCodeLogRequest.Marshal(b, m, deterministic)
}
func (m *GetJobCodeLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobCodeLogRequest.Merge(m, src)
}
func (m *GetJobCodeLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobCodeLogRequest.Size(m)
}
func (m *GetJobCodeLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobCodeLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobCodeLogRequest proto.InternalMessageInfo

func (m *GetJobCodeLogRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *GetJobCodeLogRequest) GetStartEventID() uint32 {
	if m != nil {
		return m.StartEventID
	}
	return 0
}

func (m *GetJobCodeLogRequest) GetMaxNumOfLog() uint32 {
	if m != nil {
		return m.MaxNumOfLog
	}
	return 0
}

type GetJobCodeLogResponse struct {
	JobCodeEvents        []*JobCodeLog `protobuf:"bytes,1,rep,name=jobCodeEvents,proto3" json:"jobCodeEvents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetJobCodeLogResponse) Reset()         { *m = GetJobCodeLogResponse{} }
func (m *GetJobCodeLogResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobCodeLogResponse) ProtoMessage()    {}
func (*GetJobCodeLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_86edf1ecf0cc73a5, []int{15}
}

func (m *GetJobCodeLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobCodeLogResponse.Unmarshal(m, b)
}
func (m *GetJobCodeLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobCodeLogResponse.Marshal(b, m, deterministic)
}
func (m *GetJobCodeLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobCodeLogResponse.Merge(m, src)
}
func (m *GetJobCodeLogResponse) XXX_Size() int {
	return xxx_messageInfo_GetJobCodeLogResponse.Size(m)
}
func (m *GetJobCodeLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobCodeLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobCodeLogResponse proto.InternalMessageInfo

func (m *GetJobCodeLogResponse) GetJobCodeEvents() []*JobCodeLog {
	if m != nil {
		return m.JobCodeEvents
	}
	return nil
}

func init() {
	proto.RegisterEnum("tna.Mode", Mode_name, Mode_value)
	proto.RegisterEnum("tna.Key", Key_name, Key_value)
	proto.RegisterType((*TNAConfig)(nil), "tna.TNAConfig")
	proto.RegisterType((*GetConfigRequest)(nil), "tna.GetConfigRequest")
	proto.RegisterType((*GetConfigResponse)(nil), "tna.GetConfigResponse")
	proto.RegisterType((*SetConfigRequest)(nil), "tna.SetConfigRequest")
	proto.RegisterType((*SetConfigResponse)(nil), "tna.SetConfigResponse")
	proto.RegisterType((*SetConfigMultiRequest)(nil), "tna.SetConfigMultiRequest")
	proto.RegisterType((*SetConfigMultiResponse)(nil), "tna.SetConfigMultiResponse")
	proto.RegisterType((*JobCode)(nil), "tna.JobCode")
	proto.RegisterType((*TNALog)(nil), "tna.TNALog")
	proto.RegisterType((*TNAEventFilter)(nil), "tna.TNAEventFilter")
	proto.RegisterType((*JobCodeLog)(nil), "tna.JobCodeLog")
	proto.RegisterType((*JobCodeEventFilter)(nil), "tna.JobCodeEventFilter")
	proto.RegisterType((*GetTNALogRequest)(nil), "tna.GetTNALogRequest")
	proto.RegisterType((*GetTNALogResponse)(nil), "tna.GetTNALogResponse")
	proto.RegisterType((*GetJobCodeLogRequest)(nil), "tna.GetJobCodeLogRequest")
	proto.RegisterType((*GetJobCodeLogResponse)(nil), "tna.GetJobCodeLogResponse")
}

func init() { proto.RegisterFile("tna.proto", fileDescriptor_86edf1ecf0cc73a5) }

var fileDescriptor_86edf1ecf0cc73a5 = []byte{
	// 913 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x5f, 0x6f, 0xe3, 0x44,
	0x10, 0xc7, 0x71, 0xe2, 0xc4, 0x93, 0x26, 0xdd, 0xdb, 0x5e, 0x23, 0x63, 0x0e, 0x14, 0xed, 0x03,
	0x2a, 0x87, 0x94, 0x72, 0xe9, 0xb5, 0xc0, 0x21, 0x21, 0xa5, 0x89, 0x7b, 0x67, 0x9a, 0xcb, 0x55,
	0x76, 0x82, 0x28, 0x12, 0xaa, 0xd2, 0x64, 0x5b, 0x7c, 0x17, 0xdb, 0xc5, 0x76, 0x4e, 0x97, 0x57,
	0x1e, 0xf8, 0x14, 0xbc, 0xf0, 0xc2, 0x03, 0x9f, 0x05, 0xbe, 0x13, 0xda, 0xb5, 0xd7, 0xff, 0xae,
	0x42, 0xe5, 0x01, 0x74, 0x6f, 0x33, 0xbf, 0x99, 0x9d, 0xf9, 0xcd, 0x78, 0x66, 0xd7, 0xa0, 0x46,
	0xde, 0xbc, 0x77, 0x13, 0xf8, 0x91, 0x8f, 0xe5, 0xc8, 0x9b, 0xeb, 0x2a, 0x0d, 0x82, 0x58, 0x27,
	0xbf, 0x4a, 0xa0, 0x4e, 0x27, 0x83, 0xa1, 0xef, 0x5d, 0x39, 0xd7, 0xf8, 0x43, 0xa8, 0xba, 0xfe,
	0x92, 0x6a, 0x52, 0x57, 0xda, 0x6b, 0xf7, 0xd5, 0x1e, 0x3b, 0xf7, 0xdc, 0x5f, 0x52, 0x8b, 0xc3,
	0x58, 0x07, 0xf9, 0x15, 0xdd, 0x68, 0x15, 0x6e, 0x6d, 0x70, 0xeb, 0x29, 0xdd, 0x58, 0x0c, 0xc4,
	0x1f, 0x01, 0x38, 0xa1, 0x45, 0x7f, 0x5a, 0x3b, 0x01, 0x5d, 0x6a, 0x72, 0x57, 0xda, 0x6b, 0x58,
	0x39, 0x04, 0x3f, 0x00, 0x35, 0x5c, 0xfc, 0x48, 0x97, 0xeb, 0x15, 0x0d, 0xb5, 0x6a, 0x57, 0xde,
	0x6b, 0x59, 0x19, 0x80, 0x3b, 0xa0, 0xac, 0xe6, 0x97, 0x74, 0x15, 0x6a, 0xb5, 0xae, 0xbc, 0xa7,
	0x5a, 0x89, 0x46, 0x7a, 0x80, 0x9e, 0xd2, 0x28, 0x66, 0xc7, 0x42, 0xd1, 0x30, 0xc2, 0x3a, 0x34,
	0x96, 0xf4, 0xb5, 0xb3, 0xa0, 0xe6, 0x88, 0x13, 0x6d, 0x59, 0xa9, 0x4e, 0xbe, 0x82, 0x7b, 0x39,
	0xff, 0xf0, 0xc6, 0xf7, 0x42, 0x8a, 0x3f, 0x06, 0x65, 0xc1, 0x11, 0xee, 0xde, 0xec, 0xb7, 0x39,
	0xf3, 0xb4, 0x6a, 0x2b, 0xb1, 0x92, 0x6f, 0x01, 0xd9, 0xff, 0x22, 0x59, 0x2e, 0x6e, 0xe5, 0x1f,
	0xe3, 0xee, 0xc0, 0x3d, 0xbb, 0x4c, 0x8a, 0xfc, 0x00, 0xbb, 0x29, 0xf8, 0x7c, 0xbd, 0x8a, 0x1c,
	0x91, 0xf1, 0x01, 0xa8, 0x22, 0x43, 0xa8, 0x49, 0x71, 0xa3, 0x52, 0xe0, 0xce, 0x39, 0xcf, 0xa0,
	0x53, 0x0e, 0x9f, 0x74, 0xe3, 0x08, 0xb6, 0xe2, 0x70, 0x46, 0x10, 0xf8, 0x41, 0x9c, 0xa2, 0xd9,
	0xc7, 0x3d, 0x36, 0x13, 0x1c, 0x12, 0x9e, 0x56, 0xc1, 0x8f, 0x1c, 0x40, 0xfd, 0x1b, 0xff, 0x72,
	0xc8, 0xe6, 0x00, 0x43, 0x75, 0x21, 0xc6, 0xa4, 0x65, 0x71, 0x19, 0xdf, 0x87, 0x1a, 0xff, 0x66,
	0x9c, 0x97, 0x6a, 0xc5, 0x0a, 0xf9, 0x43, 0x02, 0x65, 0x3a, 0x19, 0x8c, 0xfd, 0x6b, 0xdc, 0x86,
	0x4a, 0xda, 0xc3, 0x8a, 0x39, 0x62, 0x75, 0x46, 0x8e, 0x4b, 0xc3, 0x68, 0xee, 0xde, 0xf0, 0x43,
	0x2d, 0x2b, 0x03, 0x0a, 0x7d, 0x97, 0x4b, 0x7d, 0xef, 0x80, 0xb2, 0x0e, 0x69, 0x60, 0x8e, 0xb4,
	0x2a, 0xcf, 0x95, 0x68, 0x2c, 0x22, 0x7d, 0x4d, 0xbd, 0x88, 0x71, 0xd4, 0x6a, 0x71, 0xc4, 0x14,
	0xc0, 0x5d, 0xce, 0xe4, 0x94, 0x6e, 0x34, 0xa5, 0x34, 0xbf, 0x09, 0x4e, 0x7e, 0x91, 0xa0, 0x3d,
	0x9d, 0x0c, 0x0c, 0x76, 0xe4, 0xc4, 0x59, 0x45, 0x34, 0xe0, 0x53, 0x1b, 0xcd, 0x83, 0x68, 0xea,
	0xb8, 0xa2, 0xdc, 0x0c, 0xc0, 0x1a, 0xd4, 0xa9, 0xb7, 0xe4, 0xb6, 0xb8, 0x00, 0xa1, 0x32, 0x4b,
	0x4c, 0x2a, 0xd4, 0x64, 0x3e, 0xd0, 0x42, 0xc5, 0x04, 0xea, 0x71, 0xba, 0x78, 0x0b, 0xf2, 0x3c,
	0x84, 0x81, 0xfc, 0x2e, 0x01, 0x24, 0xbd, 0x7e, 0x17, 0x3a, 0xa7, 0x41, 0xfd, 0x65, 0xcc, 0x86,
	0xb7, 0xae, 0x65, 0x09, 0x95, 0xfc, 0x2c, 0x01, 0x4e, 0x88, 0xfe, 0xb7, 0x5d, 0xd3, 0xa1, 0x91,
	0xe4, 0x14, 0x97, 0x47, 0xaa, 0x93, 0xdf, 0x24, 0x7e, 0x49, 0xc4, 0x63, 0x76, 0x97, 0xbd, 0x25,
	0xb0, 0xc5, 0xd9, 0x70, 0xca, 0xe6, 0x28, 0x61, 0x51, 0xc0, 0x70, 0x17, 0x9a, 0xee, 0xfc, 0xcd,
	0x64, 0xed, 0xbe, 0xb8, 0x1a, 0xfb, 0xd7, 0x49, 0x23, 0xf3, 0x10, 0xfe, 0x14, 0x94, 0x2b, 0x5e,
	0x2e, 0xef, 0x65, 0xb3, 0xbf, 0x23, 0x36, 0x31, 0xd7, 0x09, 0x2b, 0x71, 0x21, 0x5f, 0xf3, 0x7b,
	0x49, 0x50, 0x4c, 0x36, 0xf1, 0x13, 0x7e, 0xf5, 0x72, 0x77, 0xb1, 0x86, 0x4d, 0x11, 0x84, 0xf9,
	0x65, 0x56, 0xf2, 0x06, 0xee, 0x3f, 0xa5, 0x51, 0x36, 0x13, 0xff, 0x5b, 0x99, 0x64, 0x02, 0xbb,
	0xa5, 0xcc, 0x09, 0xfb, 0x43, 0x68, 0xbd, 0xcc, 0x7d, 0x7a, 0x51, 0xc1, 0x36, 0xaf, 0x20, 0xe7,
	0x5f, 0xf4, 0x7a, 0x38, 0x86, 0x2a, 0x7b, 0x51, 0x30, 0x80, 0x32, 0x9b, 0xcc, 0x6c, 0x63, 0x84,
	0xde, 0xc3, 0x4d, 0xa8, 0x1f, 0x9f, 0x5f, 0xcc, 0x6c, 0xc3, 0x42, 0x12, 0xde, 0x86, 0xe6, 0xf1,
	0xf9, 0x85, 0x3d, 0x7c, 0x66, 0x8c, 0x66, 0x63, 0x03, 0x55, 0x18, 0x30, 0x1e, 0xd8, 0xd3, 0x8b,
	0xe1, 0xb3, 0x17, 0xe6, 0xd0, 0x40, 0x32, 0x56, 0xa1, 0x76, 0x62, 0x7e, 0x67, 0x8c, 0x50, 0xf5,
	0xe1, 0x5f, 0x12, 0xc8, 0xa7, 0x74, 0xc3, 0x7c, 0x66, 0x13, 0xfb, 0xcc, 0x18, 0x9a, 0x27, 0x26,
	0x0f, 0xa9, 0x42, 0xed, 0xd4, 0x38, 0xbf, 0x78, 0x84, 0x24, 0x21, 0xf6, 0x51, 0x45, 0x88, 0x07,
	0x71, 0x10, 0x26, 0x3e, 0x46, 0x55, 0x21, 0x1e, 0xa2, 0x9a, 0x10, 0x8f, 0x90, 0x22, 0xc4, 0xcf,
	0x51, 0x5d, 0x88, 0x5f, 0xa0, 0x86, 0x10, 0xbf, 0x44, 0x2a, 0xab, 0x80, 0xa7, 0xf8, 0x0c, 0x41,
	0x2a, 0x3f, 0x42, 0xcd, 0x54, 0xee, 0xa3, 0xad, 0x54, 0x3e, 0x40, 0xad, 0x54, 0x7e, 0x8c, 0xda,
	0xa9, 0x7c, 0x88, 0xb6, 0x53, 0xf9, 0x08, 0xa1, 0xfe, 0x9f, 0x15, 0x90, 0xa7, 0x93, 0x01, 0x7e,
	0x02, 0x6a, 0xfa, 0x8e, 0xe1, 0x5d, 0xde, 0xd2, 0xf2, 0x3b, 0xa8, 0x77, 0xca, 0x70, 0xf2, 0x61,
	0x9e, 0x80, 0x6a, 0x97, 0xce, 0xda, 0xb7, 0x9f, 0x7d, 0xeb, 0x55, 0xc2, 0x26, 0xb4, 0x8b, 0xcf,
	0x06, 0xd6, 0x8b, 0x9e, 0xf9, 0xa7, 0x4a, 0xff, 0xe0, 0x56, 0x5b, 0x46, 0x23, 0x1d, 0xf9, 0xac,
	0x84, 0xc2, 0x96, 0x66, 0x25, 0x94, 0x36, 0xe3, 0x04, 0x5a, 0x85, 0xa1, 0xc3, 0xef, 0x0b, 0xc7,
	0xb7, 0x56, 0x40, 0xd7, 0x6f, 0x33, 0xc5, 0x71, 0x8e, 0xf7, 0xa1, 0xb3, 0xf0, 0xdd, 0x5e, 0xb8,
	0xbe, 0x09, 0xa8, 0x3b, 0x77, 0xbc, 0x45, 0x2f, 0x5c, 0xbe, 0x62, 0xfe, 0x67, 0xd2, 0xf7, 0x3b,
	0x97, 0x8e, 0xcf, 0x76, 0x61, 0x3f, 0xa4, 0x01, 0xdb, 0x98, 0xfd, 0xc8, 0x9b, 0x5f, 0x2a, 0xfc,
	0xaf, 0xe8, 0xe0, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xde, 0xf5, 0x44, 0x32, 0x09, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TNAClient is the client API for TNA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TNAClient interface {
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error)
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error)
	SetConfigMulti(ctx context.Context, in *SetConfigMultiRequest, opts ...grpc.CallOption) (*SetConfigMultiResponse, error)
	GetTNALog(ctx context.Context, in *GetTNALogRequest, opts ...grpc.CallOption) (*GetTNALogResponse, error)
	GetJobCodeLog(ctx context.Context, in *GetJobCodeLogRequest, opts ...grpc.CallOption) (*GetJobCodeLogResponse, error)
}

type tNAClient struct {
	cc *grpc.ClientConn
}

func NewTNAClient(cc *grpc.ClientConn) TNAClient {
	return &tNAClient{cc}
}

func (c *tNAClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error) {
	out := new(GetConfigResponse)
	err := c.cc.Invoke(ctx, "/tna.TNA/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tNAClient) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error) {
	out := new(SetConfigResponse)
	err := c.cc.Invoke(ctx, "/tna.TNA/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tNAClient) SetConfigMulti(ctx context.Context, in *SetConfigMultiRequest, opts ...grpc.CallOption) (*SetConfigMultiResponse, error) {
	out := new(SetConfigMultiResponse)
	err := c.cc.Invoke(ctx, "/tna.TNA/SetConfigMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tNAClient) GetTNALog(ctx context.Context, in *GetTNALogRequest, opts ...grpc.CallOption) (*GetTNALogResponse, error) {
	out := new(GetTNALogResponse)
	err := c.cc.Invoke(ctx, "/tna.TNA/GetTNALog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tNAClient) GetJobCodeLog(ctx context.Context, in *GetJobCodeLogRequest, opts ...grpc.CallOption) (*GetJobCodeLogResponse, error) {
	out := new(GetJobCodeLogResponse)
	err := c.cc.Invoke(ctx, "/tna.TNA/GetJobCodeLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TNAServer is the server API for TNA service.
type TNAServer interface {
	GetConfig(context.Context, *GetConfigRequest) (*GetConfigResponse, error)
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error)
	SetConfigMulti(context.Context, *SetConfigMultiRequest) (*SetConfigMultiResponse, error)
	GetTNALog(context.Context, *GetTNALogRequest) (*GetTNALogResponse, error)
	GetJobCodeLog(context.Context, *GetJobCodeLogRequest) (*GetJobCodeLogResponse, error)
}

func RegisterTNAServer(s *grpc.Server, srv TNAServer) {
	s.RegisterService(&_TNA_serviceDesc, srv)
}

func _TNA_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TNAServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tna.TNA/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TNAServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TNA_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TNAServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tna.TNA/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TNAServer).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TNA_SetConfigMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TNAServer).SetConfigMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tna.TNA/SetConfigMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TNAServer).SetConfigMulti(ctx, req.(*SetConfigMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TNA_GetTNALog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTNALogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TNAServer).GetTNALog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tna.TNA/GetTNALog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TNAServer).GetTNALog(ctx, req.(*GetTNALogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TNA_GetJobCodeLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobCodeLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TNAServer).GetJobCodeLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tna.TNA/GetJobCodeLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TNAServer).GetJobCodeLog(ctx, req.(*GetJobCodeLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TNA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tna.TNA",
	HandlerType: (*TNAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _TNA_GetConfig_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _TNA_SetConfig_Handler,
		},
		{
			MethodName: "SetConfigMulti",
			Handler:    _TNA_SetConfigMulti_Handler,
		},
		{
			MethodName: "GetTNALog",
			Handler:    _TNA_GetTNALog_Handler,
		},
		{
			MethodName: "GetJobCodeLog",
			Handler:    _TNA_GetJobCodeLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tna.proto",
}
